export P_DamageFeedback
code
proc P_DamageFeedback 36 12
file "../../../code/game/g_active.c"
line 37
;1:/*
;2:===========================================================================
;3:Copyright (C) 1999-2005 Id Software, Inc.
;4:
;5:This file is part of Quake III Arena source code.
;6:
;7:Quake III Arena source code is free software; you can redistribute it
;8:and/or modify it under the terms of the GNU General Public License as
;9:published by the Free Software Foundation; either version 2 of the License,
;10:or (at your option) any later version.
;11:
;12:Quake III Arena source code is distributed in the hope that it will be
;13:useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
;14:MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;15:GNU General Public License for more details.
;16:
;17:You should have received a copy of the GNU General Public License
;18:along with Quake III Arena source code; if not, write to the Free Software
;19:Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
;20:===========================================================================
;21:*/
;22://
;23:
;24:#include "g_local.h"
;25:
;26:
;27:/*
;28:===============
;29:G_DamageFeedback
;30:
;31:Called just before a snapshot is sent to the given player.
;32:Totals up all damage and generates both the player_state_t
;33:damage values to that client for pain blends and kicks, and
;34:global pain sound events for all clients.
;35:===============
;36:*/
;37:void P_DamageFeedback( gentity_t *player ) {
line 42
;38:	gclient_t	*client;
;39:	float	count;
;40:	vec3_t	angles;
;41:
;42:	client = player->client;
ADDRLP4 0
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
ASGNP4
line 43
;43:	if ( client->ps.pm_type == PM_DEAD ) {
ADDRLP4 0
INDIRP4
CNSTI4 4
ADDP4
INDIRI4
CNSTI4 3
NEI4 $65
line 44
;44:		return;
ADDRGP4 $64
JUMPV
LABELV $65
line 48
;45:	}
;46:
;47:	// total points of damage shot at the player this frame
;48:	count = client->damage_blood + client->damage_armor;
ADDRLP4 4
ADDRLP4 0
INDIRP4
CNSTI4 1268
ADDP4
INDIRI4
ADDRLP4 0
INDIRP4
CNSTI4 1264
ADDP4
INDIRI4
ADDI4
CVIF4 4
ASGNF4
line 49
;49:	if ( count == 0 ) {
ADDRLP4 4
INDIRF4
CNSTF4 0
NEF4 $67
line 50
;50:		return;		// didn't take any damage
ADDRGP4 $64
JUMPV
LABELV $67
line 53
;51:	}
;52:
;53:	if ( count > 255 ) {
ADDRLP4 4
INDIRF4
CNSTF4 1132396544
LEF4 $69
line 54
;54:		count = 255;
ADDRLP4 4
CNSTF4 1132396544
ASGNF4
line 55
;55:	}
LABELV $69
line 61
;56:
;57:	// send the information to the client
;58:
;59:	// world damage (falling, slime, etc) uses a special code
;60:	// to make the blend blob centered instead of positional
;61:	if ( client->damage_fromWorld ) {
ADDRLP4 0
INDIRP4
CNSTI4 1288
ADDP4
INDIRI4
CNSTI4 0
EQI4 $71
line 62
;62:		client->ps.damagePitch = 255;
ADDRLP4 0
INDIRP4
CNSTI4 176
ADDP4
CNSTI4 255
ASGNI4
line 63
;63:		client->ps.damageYaw = 255;
ADDRLP4 0
INDIRP4
CNSTI4 172
ADDP4
CNSTI4 255
ASGNI4
line 65
;64:
;65:		client->damage_fromWorld = qfalse;
ADDRLP4 0
INDIRP4
CNSTI4 1288
ADDP4
CNSTI4 0
ASGNI4
line 66
;66:	} else {
ADDRGP4 $72
JUMPV
LABELV $71
line 67
;67:		vectoangles( client->damage_from, angles );
ADDRLP4 0
INDIRP4
CNSTI4 1276
ADDP4
ARGP4
ADDRLP4 8
ARGP4
ADDRGP4 vectoangles
CALLV
pop
line 68
;68:		client->ps.damagePitch = angles[PITCH]/360.0 * 256;
ADDRLP4 0
INDIRP4
CNSTI4 176
ADDP4
CNSTF4 1132462080
ADDRLP4 8
INDIRF4
CNSTF4 1135869952
DIVF4
MULF4
CVFI4 4
ASGNI4
line 69
;69:		client->ps.damageYaw = angles[YAW]/360.0 * 256;
ADDRLP4 0
INDIRP4
CNSTI4 172
ADDP4
CNSTF4 1132462080
ADDRLP4 8+4
INDIRF4
CNSTF4 1135869952
DIVF4
MULF4
CVFI4 4
ASGNI4
line 70
;70:	}
LABELV $72
line 73
;71:
;72:	// play an apropriate pain sound
;73:	if(!player->client->vehiclenum){ //VEHICLE-SYSTEM: disable pain sound for all
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 1248
ADDP4
INDIRI4
CNSTI4 0
NEI4 $74
line 74
;74:	if ( (level.time > player->pain_debounce_time) && !(player->flags & FL_GODMODE) ) {
ADDRLP4 24
ADDRFP4 0
INDIRP4
ASGNP4
ADDRGP4 level+32
INDIRI4
ADDRLP4 24
INDIRP4
CNSTI4 796
ADDP4
INDIRI4
LEI4 $75
ADDRLP4 24
INDIRP4
CNSTI4 576
ADDP4
INDIRI4
CNSTI4 16
BANDI4
CNSTI4 0
NEI4 $75
line 75
;75:		player->pain_debounce_time = level.time + 700;
ADDRFP4 0
INDIRP4
CNSTI4 796
ADDP4
ADDRGP4 level+32
INDIRI4
CNSTI4 700
ADDI4
ASGNI4
line 76
;76:		G_AddEvent( player, EV_PAIN, player->health );
ADDRLP4 28
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 28
INDIRP4
ARGP4
CNSTI4 56
ARGI4
ADDRLP4 28
INDIRP4
CNSTI4 808
ADDP4
INDIRI4
ARGI4
ADDRGP4 G_AddEvent
CALLV
pop
line 77
;77:		client->ps.damageEvent++;
ADDRLP4 32
ADDRLP4 0
INDIRP4
CNSTI4 168
ADDP4
ASGNP4
ADDRLP4 32
INDIRP4
ADDRLP4 32
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 78
;78:	}
line 79
;79:	} else {
ADDRGP4 $75
JUMPV
LABELV $74
line 80
;80:		G_AddEvent( player, EV_PAINVEHICLE, player->health );
ADDRLP4 24
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 24
INDIRP4
ARGP4
CNSTI4 57
ARGI4
ADDRLP4 24
INDIRP4
CNSTI4 808
ADDP4
INDIRI4
ARGI4
ADDRGP4 G_AddEvent
CALLV
pop
line 81
;81:	}
LABELV $75
line 84
;82:
;83:
;84:	client->ps.damageCount = count;
ADDRLP4 0
INDIRP4
CNSTI4 180
ADDP4
ADDRLP4 4
INDIRF4
CVFI4 4
ASGNI4
line 89
;85:
;86:	//
;87:	// clear totals
;88:	//
;89:	client->damage_blood = 0;
ADDRLP4 0
INDIRP4
CNSTI4 1268
ADDP4
CNSTI4 0
ASGNI4
line 90
;90:	client->damage_armor = 0;
ADDRLP4 0
INDIRP4
CNSTI4 1264
ADDP4
CNSTI4 0
ASGNI4
line 91
;91:	client->damage_knockback = 0;
ADDRLP4 0
INDIRP4
CNSTI4 1272
ADDP4
CNSTI4 0
ASGNI4
line 92
;92:}
LABELV $64
endproc P_DamageFeedback 36 12
export P_WorldEffects
proc P_WorldEffects 32 32
line 103
;93:
;94:
;95:
;96:/*
;97:=============
;98:P_WorldEffects
;99:
;100:Check for lava / slime contents and drowning
;101:=============
;102:*/
;103:void P_WorldEffects( gentity_t *ent ) {
line 107
;104:	qboolean	envirosuit;
;105:	int			waterlevel;
;106:
;107:	if ( ent->client->noclip ) {
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 1232
ADDP4
INDIRI4
CNSTI4 0
EQI4 $81
line 108
;108:		ent->client->airOutTime = level.time + 12000;	// don't need air
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 1332
ADDP4
ADDRGP4 level+32
INDIRI4
CNSTI4 12000
ADDI4
ASGNI4
line 109
;109:		return;
ADDRGP4 $80
JUMPV
LABELV $81
line 112
;110:	}
;111:
;112:	waterlevel = ent->waterlevel;
ADDRLP4 0
ADDRFP4 0
INDIRP4
CNSTI4 992
ADDP4
INDIRI4
ASGNI4
line 114
;113:
;114:	envirosuit = ent->client->ps.powerups[PW_BATTLESUIT] > level.time;
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 320
ADDP4
INDIRI4
ADDRGP4 level+32
INDIRI4
LEI4 $86
ADDRLP4 8
CNSTI4 1
ASGNI4
ADDRGP4 $87
JUMPV
LABELV $86
ADDRLP4 8
CNSTI4 0
ASGNI4
LABELV $87
ADDRLP4 4
ADDRLP4 8
INDIRI4
ASGNI4
line 119
;115:
;116:	//
;117:	// check for drowning
;118:	//
;119:	if (g_drowndamage.integer == 1)
ADDRGP4 g_drowndamage+12
INDIRI4
CNSTI4 1
NEI4 $88
line 120
;120:	if ( waterlevel == 3 ) {
ADDRLP4 0
INDIRI4
CNSTI4 3
NEI4 $91
line 122
;121:		// envirosuit give air
;122:		if ( envirosuit ) {
ADDRLP4 4
INDIRI4
CNSTI4 0
EQI4 $93
line 123
;123:			ent->client->airOutTime = level.time + 10000;
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 1332
ADDP4
ADDRGP4 level+32
INDIRI4
CNSTI4 10000
ADDI4
ASGNI4
line 124
;124:		}
LABELV $93
line 127
;125:
;126:		// if out of air, start drowning
;127:		if ( ent->client->airOutTime < level.time) {
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 1332
ADDP4
INDIRI4
ADDRGP4 level+32
INDIRI4
GEI4 $92
line 129
;128:			// drown!
;129:			ent->client->airOutTime += 1000;
ADDRLP4 12
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 1332
ADDP4
ASGNP4
ADDRLP4 12
INDIRP4
ADDRLP4 12
INDIRP4
INDIRI4
CNSTI4 1000
ADDI4
ASGNI4
line 130
;130:			if ( ent->health > 0 ) {
ADDRFP4 0
INDIRP4
CNSTI4 808
ADDP4
INDIRI4
CNSTI4 0
LEI4 $92
line 132
;131:				// take more damage the longer underwater
;132:				ent->damage += 2;
ADDRLP4 16
ADDRFP4 0
INDIRP4
CNSTI4 924
ADDP4
ASGNP4
ADDRLP4 16
INDIRP4
ADDRLP4 16
INDIRP4
INDIRI4
CNSTI4 2
ADDI4
ASGNI4
line 133
;133:				if (ent->damage > 15)
ADDRFP4 0
INDIRP4
CNSTI4 924
ADDP4
INDIRI4
CNSTI4 15
LEI4 $101
line 134
;134:					ent->damage = 15;
ADDRFP4 0
INDIRP4
CNSTI4 924
ADDP4
CNSTI4 15
ASGNI4
LABELV $101
line 137
;135:
;136:				// don't play a normal pain sound
;137:				ent->pain_debounce_time = level.time + 200;
ADDRFP4 0
INDIRP4
CNSTI4 796
ADDP4
ADDRGP4 level+32
INDIRI4
CNSTI4 200
ADDI4
ASGNI4
line 139
;138:
;139:				G_Damage (ent, NULL, NULL, NULL, NULL,
ADDRLP4 20
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 20
INDIRP4
ARGP4
ADDRLP4 24
CNSTP4 0
ASGNP4
ADDRLP4 24
INDIRP4
ARGP4
ADDRLP4 24
INDIRP4
ARGP4
ADDRLP4 28
CNSTP4 0
ASGNP4
ADDRLP4 28
INDIRP4
ARGP4
ADDRLP4 28
INDIRP4
ARGP4
ADDRLP4 20
INDIRP4
CNSTI4 924
ADDP4
INDIRI4
ARGI4
CNSTI4 2
ARGI4
CNSTI4 19
ARGI4
ADDRGP4 G_Damage
CALLV
pop
line 141
;140:					ent->damage, DAMAGE_NO_ARMOR, MOD_WATER);
;141:			}
line 142
;142:		}
line 143
;143:	} else {
ADDRGP4 $92
JUMPV
LABELV $91
line 144
;144:		ent->client->airOutTime = level.time + 12000;
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 1332
ADDP4
ADDRGP4 level+32
INDIRI4
CNSTI4 12000
ADDI4
ASGNI4
line 145
;145:		ent->damage = 2;
ADDRFP4 0
INDIRP4
CNSTI4 924
ADDP4
CNSTI4 2
ASGNI4
line 146
;146:	}
LABELV $92
LABELV $88
line 151
;147:
;148:	//
;149:	// check for sizzle damage (move to pmove?)
;150:	//
;151:	if (waterlevel &&
ADDRLP4 12
CNSTI4 0
ASGNI4
ADDRLP4 0
INDIRI4
ADDRLP4 12
INDIRI4
EQI4 $105
ADDRFP4 0
INDIRP4
CNSTI4 988
ADDP4
INDIRI4
CNSTI4 56
BANDI4
ADDRLP4 12
INDIRI4
EQI4 $105
line 152
;152:		(ent->watertype&(CONTENTS_LAVA|CONTENTS_SLIME|CONTENTS_WATER)) ) {
line 153
;153:		if (ent->health > 0
ADDRLP4 16
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 16
INDIRP4
CNSTI4 808
ADDP4
INDIRI4
CNSTI4 0
LEI4 $107
ADDRLP4 16
INDIRP4
CNSTI4 796
ADDP4
INDIRI4
ADDRGP4 level+32
INDIRI4
GTI4 $107
line 154
;154:			&& ent->pain_debounce_time <= level.time	) {
line 155
;155:			if ( envirosuit ) {
ADDRLP4 4
INDIRI4
CNSTI4 0
EQI4 $110
line 156
;156:				G_AddEvent( ent, EV_POWERUP_BATTLESUIT, 0 );
ADDRFP4 0
INDIRP4
ARGP4
CNSTI4 63
ARGI4
CNSTI4 0
ARGI4
ADDRGP4 G_AddEvent
CALLV
pop
line 157
;157:			} else {
ADDRGP4 $111
JUMPV
LABELV $110
line 158
;158:				if (ent->watertype & CONTENTS_LAVA) {
ADDRFP4 0
INDIRP4
CNSTI4 988
ADDP4
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
EQI4 $112
line 159
;159:					if(g_lavadamage.integer > 0){
ADDRGP4 g_lavadamage+12
INDIRI4
CNSTI4 0
LEI4 $114
line 160
;160:					G_Damage (ent, NULL, NULL, NULL, NULL,
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 20
CNSTP4 0
ASGNP4
ADDRLP4 20
INDIRP4
ARGP4
ADDRLP4 20
INDIRP4
ARGP4
ADDRLP4 24
CNSTP4 0
ASGNP4
ADDRLP4 24
INDIRP4
ARGP4
ADDRLP4 24
INDIRP4
ARGP4
ADDRGP4 g_lavadamage+12
INDIRI4
ARGI4
CNSTI4 0
ARGI4
CNSTI4 21
ARGI4
ADDRGP4 G_Damage
CALLV
pop
line 162
;161:						g_lavadamage.integer, 0, MOD_LAVA);
;162:					}
LABELV $114
line 163
;163:				}
LABELV $112
line 165
;164:
;165:				if (ent->watertype & CONTENTS_SLIME) {
ADDRFP4 0
INDIRP4
CNSTI4 988
ADDP4
INDIRI4
CNSTI4 16
BANDI4
CNSTI4 0
EQI4 $118
line 166
;166:					if(g_slimedamage.integer > 0){
ADDRGP4 g_slimedamage+12
INDIRI4
CNSTI4 0
LEI4 $120
line 167
;167:					G_Damage (ent, NULL, NULL, NULL, NULL,
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 20
CNSTP4 0
ASGNP4
ADDRLP4 20
INDIRP4
ARGP4
ADDRLP4 20
INDIRP4
ARGP4
ADDRLP4 24
CNSTP4 0
ASGNP4
ADDRLP4 24
INDIRP4
ARGP4
ADDRLP4 24
INDIRP4
ARGP4
ADDRGP4 g_slimedamage+12
INDIRI4
ARGI4
CNSTI4 0
ARGI4
CNSTI4 20
ARGI4
ADDRGP4 G_Damage
CALLV
pop
line 169
;168:						g_slimedamage.integer, 0, MOD_SLIME);
;169:					}
LABELV $120
line 170
;170:				}
LABELV $118
line 172
;171:
;172:				if (ent->watertype & CONTENTS_WATER) {
ADDRFP4 0
INDIRP4
CNSTI4 988
ADDP4
INDIRI4
CNSTI4 32
BANDI4
CNSTI4 0
EQI4 $124
line 173
;173:					if(g_waterdamage.integer > 0){
ADDRGP4 g_waterdamage+12
INDIRI4
CNSTI4 0
LEI4 $126
line 174
;174:					G_Damage (ent, NULL, NULL, NULL, NULL,
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 20
CNSTP4 0
ASGNP4
ADDRLP4 20
INDIRP4
ARGP4
ADDRLP4 20
INDIRP4
ARGP4
ADDRLP4 24
CNSTP4 0
ASGNP4
ADDRLP4 24
INDIRP4
ARGP4
ADDRLP4 24
INDIRP4
ARGP4
ADDRGP4 g_waterdamage+12
INDIRI4
ARGI4
CNSTI4 0
ARGI4
CNSTI4 19
ARGI4
ADDRGP4 G_Damage
CALLV
pop
line 176
;175:						g_waterdamage.integer, 0, MOD_WATER);
;176:					}
LABELV $126
line 177
;177:				}
LABELV $124
line 178
;178:			}
LABELV $111
line 179
;179:		}
LABELV $107
line 180
;180:	}
LABELV $105
line 181
;181:}
LABELV $80
endproc P_WorldEffects 32 32
export G_SetClientSound
proc G_SetClientSound 20 8
line 190
;182:
;183:
;184:
;185:/*
;186:===============
;187:G_SetClientSound
;188:===============
;189:*/
;190:void G_SetClientSound( gentity_t *ent ) {
line 191
;191:	if( ent->s.eFlags & EF_TICKING ) {
ADDRFP4 0
INDIRP4
CNSTI4 8
ADDP4
INDIRI4
CNSTI4 2
BANDI4
CNSTI4 0
EQI4 $131
line 192
;192:		ent->client->ps.loopSound = G_SoundIndex( "sound/weapons/proxmine/wstbtick.wav");
ADDRGP4 $133
ARGP4
ADDRLP4 0
ADDRGP4 G_SoundIndex
CALLI4
ASGNI4
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 448
ADDP4
ADDRLP4 0
INDIRI4
ASGNI4
line 193
;193:	}
ADDRGP4 $132
JUMPV
LABELV $131
line 195
;194:	else
;195:	if (ent->waterlevel && (ent->watertype&(CONTENTS_LAVA|CONTENTS_SLIME)) ) {
ADDRLP4 0
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 4
CNSTI4 0
ASGNI4
ADDRLP4 0
INDIRP4
CNSTI4 992
ADDP4
INDIRI4
ADDRLP4 4
INDIRI4
EQI4 $134
ADDRLP4 0
INDIRP4
CNSTI4 988
ADDP4
INDIRI4
CNSTI4 24
BANDI4
ADDRLP4 4
INDIRI4
EQI4 $134
line 196
;196:		ent->client->ps.loopSound = level.snd_fry;
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 448
ADDP4
ADDRGP4 level+1116
INDIRI4
ASGNI4
line 197
;197:	} else {
ADDRGP4 $135
JUMPV
LABELV $134
line 198
;198:		if(ent->singlebot){
ADDRFP4 0
INDIRP4
CNSTI4 1028
ADDP4
INDIRI4
CNSTI4 0
EQI4 $137
line 199
;199:		ent->client->ps.loopSound = G_SoundIndex(va("bots/%s", ent->target));
ADDRGP4 $139
ARGP4
ADDRLP4 8
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 8
INDIRP4
CNSTI4 720
ADDP4
INDIRP4
ARGP4
ADDRLP4 12
ADDRGP4 va
CALLP4
ASGNP4
ADDRLP4 12
INDIRP4
ARGP4
ADDRLP4 16
ADDRGP4 G_SoundIndex
CALLI4
ASGNI4
ADDRLP4 8
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 448
ADDP4
ADDRLP4 16
INDIRI4
ASGNI4
line 200
;200:		} else {
ADDRGP4 $138
JUMPV
LABELV $137
line 201
;201:		ent->client->ps.loopSound = 0;
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 448
ADDP4
CNSTI4 0
ASGNI4
line 202
;202:		}
LABELV $138
line 203
;203:	}
LABELV $135
LABELV $132
line 204
;204:}
LABELV $130
endproc G_SetClientSound 20 8
export ClientImpacts
proc ClientImpacts 76 12
line 215
;205:
;206:
;207:
;208://==============================================================
;209:
;210:/*
;211:==============
;212:ClientImpacts
;213:==============
;214:*/
;215:void ClientImpacts( gentity_t *ent, pmove_t *pm ) {
line 220
;216:	int		i, j;
;217:	trace_t	trace;
;218:	gentity_t	*other;
;219:
;220:	memset( &trace, 0, sizeof( trace ) );
ADDRLP4 12
ARGP4
CNSTI4 0
ARGI4
CNSTI4 56
ARGI4
ADDRGP4 memset
CALLP4
pop
line 221
;221:	for (i=0 ; i<pm->numtouch ; i++) {
ADDRLP4 4
CNSTI4 0
ASGNI4
ADDRGP4 $144
JUMPV
LABELV $141
line 222
;222:		for (j=0 ; j<i ; j++) {
ADDRLP4 0
CNSTI4 0
ASGNI4
ADDRGP4 $148
JUMPV
LABELV $145
line 223
;223:			if (pm->touchents[j] == pm->touchents[i] ) {
ADDRLP4 68
CNSTI4 2
ASGNI4
ADDRLP4 72
ADDRFP4 4
INDIRP4
CNSTI4 56
ADDP4
ASGNP4
ADDRLP4 0
INDIRI4
ADDRLP4 68
INDIRI4
LSHI4
ADDRLP4 72
INDIRP4
ADDP4
INDIRI4
ADDRLP4 4
INDIRI4
ADDRLP4 68
INDIRI4
LSHI4
ADDRLP4 72
INDIRP4
ADDP4
INDIRI4
NEI4 $149
line 224
;224:				break;
ADDRGP4 $147
JUMPV
LABELV $149
line 226
;225:			}
;226:		}
LABELV $146
line 222
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $148
ADDRLP4 0
INDIRI4
ADDRLP4 4
INDIRI4
LTI4 $145
LABELV $147
line 227
;227:		if (j != i) {
ADDRLP4 0
INDIRI4
ADDRLP4 4
INDIRI4
EQI4 $151
line 228
;228:			continue;	// duplicated
ADDRGP4 $142
JUMPV
LABELV $151
line 230
;229:		}
;230:		other = &g_entities[ pm->touchents[i] ];
ADDRLP4 8
CNSTI4 2492
ADDRLP4 4
INDIRI4
CNSTI4 2
LSHI4
ADDRFP4 4
INDIRP4
CNSTI4 56
ADDP4
ADDP4
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ASGNP4
line 232
;231:
;232:		if ( ( ent->r.svFlags & SVF_BOT ) && ( ent->touch ) ) {
ADDRLP4 68
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 68
INDIRP4
CNSTI4 464
ADDP4
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
EQI4 $153
ADDRLP4 68
INDIRP4
CNSTI4 780
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $153
line 233
;233:			ent->touch( ent, other, &trace );
ADDRLP4 72
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 72
INDIRP4
ARGP4
ADDRLP4 8
INDIRP4
ARGP4
ADDRLP4 12
ARGP4
ADDRLP4 72
INDIRP4
CNSTI4 780
ADDP4
INDIRP4
CALLV
pop
line 234
;234:		}
LABELV $153
line 236
;235:
;236:		if ( !other->touch ) {
ADDRLP4 8
INDIRP4
CNSTI4 780
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $155
line 237
;237:			continue;
ADDRGP4 $142
JUMPV
LABELV $155
line 240
;238:		}
;239:
;240:		other->touch( other, ent, &trace );
ADDRLP4 8
INDIRP4
ARGP4
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 12
ARGP4
ADDRLP4 8
INDIRP4
CNSTI4 780
ADDP4
INDIRP4
CALLV
pop
line 241
;241:	}
LABELV $142
line 221
ADDRLP4 4
ADDRLP4 4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $144
ADDRLP4 4
INDIRI4
ADDRFP4 4
INDIRP4
CNSTI4 52
ADDP4
INDIRI4
LTI4 $141
line 243
;242:
;243:}
LABELV $140
endproc ClientImpacts 76 12
data
align 4
LABELV $158
byte 4 1109393408
byte 4 1109393408
byte 4 1112539136
export G_TouchTriggers
code
proc G_TouchTriggers 156 16
line 253
;244:
;245:/*
;246:============
;247:G_TouchTriggers
;248:
;249:Find all trigger entities that ent's current position touches.
;250:Spectators will only interact with teleporters.
;251:============
;252:*/
;253:void	G_TouchTriggers( gentity_t *ent ) {
line 260
;254:	int			i, num;
;255:	gentity_t	*hit;
;256:	trace_t		trace;
;257:	vec3_t		mins, maxs;
;258:	static vec3_t	range = { 40, 40, 52 };
;259:
;260:	if ( !ent->client || ent->client->ps.pm_type == PM_CUTSCENE ) {
ADDRLP4 92
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
ASGNP4
ADDRLP4 92
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $161
ADDRLP4 92
INDIRP4
CNSTI4 4
ADDP4
INDIRI4
CNSTI4 7
NEI4 $159
LABELV $161
line 261
;261:		return;
ADDRGP4 $157
JUMPV
LABELV $159
line 266
;262:	}
;263:
;264:	//ELIMINATION LMS
;265:	// dead clients don't activate triggers! The reason our pm_spectators can't do anything
;266:	if ( ent->client->ps.stats[STAT_HEALTH] <= 0 && ent->client->ps.pm_type != PM_SPECTATOR) {
ADDRLP4 96
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
ASGNP4
ADDRLP4 96
INDIRP4
CNSTI4 184
ADDP4
INDIRI4
CNSTI4 0
GTI4 $162
ADDRLP4 96
INDIRP4
CNSTI4 4
ADDP4
INDIRI4
CNSTI4 2
EQI4 $162
line 267
;267:		return;
ADDRGP4 $157
JUMPV
LABELV $162
line 270
;268:	}
;269:
;270:	VectorSubtract( ent->client->ps.origin, range, mins );
ADDRLP4 100
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
ASGNP4
ADDRLP4 64
ADDRLP4 100
INDIRP4
INDIRP4
CNSTI4 20
ADDP4
INDIRF4
ADDRGP4 $158
INDIRF4
SUBF4
ASGNF4
ADDRLP4 64+4
ADDRLP4 100
INDIRP4
INDIRP4
CNSTI4 24
ADDP4
INDIRF4
ADDRGP4 $158+4
INDIRF4
SUBF4
ASGNF4
ADDRLP4 64+8
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 28
ADDP4
INDIRF4
ADDRGP4 $158+8
INDIRF4
SUBF4
ASGNF4
line 271
;271:	VectorAdd( ent->client->ps.origin, range, maxs );
ADDRLP4 104
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
ASGNP4
ADDRLP4 76
ADDRLP4 104
INDIRP4
INDIRP4
CNSTI4 20
ADDP4
INDIRF4
ADDRGP4 $158
INDIRF4
ADDF4
ASGNF4
ADDRLP4 76+4
ADDRLP4 104
INDIRP4
INDIRP4
CNSTI4 24
ADDP4
INDIRF4
ADDRGP4 $158+4
INDIRF4
ADDF4
ASGNF4
ADDRLP4 76+8
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 28
ADDP4
INDIRF4
ADDRGP4 $158+8
INDIRF4
ADDF4
ASGNF4
line 273
;272:
;273:	num = trap_EntitiesInBox( mins, maxs, MiTechEntityList, MAX_GENTITIES );
ADDRLP4 64
ARGP4
ADDRLP4 76
ARGP4
ADDRGP4 MiTechEntityList
ARGP4
CNSTI4 4096
ARGI4
ADDRLP4 108
ADDRGP4 trap_EntitiesInBox
CALLI4
ASGNI4
ADDRLP4 88
ADDRLP4 108
INDIRI4
ASGNI4
line 276
;274:
;275:	// can't use ent->absmin, because that has a one unit pad
;276:	VectorAdd( ent->client->ps.origin, ent->r.mins, mins );
ADDRLP4 112
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 116
ADDRLP4 112
INDIRP4
CNSTI4 556
ADDP4
ASGNP4
ADDRLP4 64
ADDRLP4 116
INDIRP4
INDIRP4
CNSTI4 20
ADDP4
INDIRF4
ADDRLP4 112
INDIRP4
CNSTI4 476
ADDP4
INDIRF4
ADDF4
ASGNF4
ADDRLP4 64+4
ADDRLP4 116
INDIRP4
INDIRP4
CNSTI4 24
ADDP4
INDIRF4
ADDRLP4 112
INDIRP4
CNSTI4 480
ADDP4
INDIRF4
ADDF4
ASGNF4
ADDRLP4 120
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 64+8
ADDRLP4 120
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 28
ADDP4
INDIRF4
ADDRLP4 120
INDIRP4
CNSTI4 484
ADDP4
INDIRF4
ADDF4
ASGNF4
line 277
;277:	VectorAdd( ent->client->ps.origin, ent->r.maxs, maxs );
ADDRLP4 124
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 128
ADDRLP4 124
INDIRP4
CNSTI4 556
ADDP4
ASGNP4
ADDRLP4 76
ADDRLP4 128
INDIRP4
INDIRP4
CNSTI4 20
ADDP4
INDIRF4
ADDRLP4 124
INDIRP4
CNSTI4 488
ADDP4
INDIRF4
ADDF4
ASGNF4
ADDRLP4 76+4
ADDRLP4 128
INDIRP4
INDIRP4
CNSTI4 24
ADDP4
INDIRF4
ADDRLP4 124
INDIRP4
CNSTI4 492
ADDP4
INDIRF4
ADDF4
ASGNF4
ADDRLP4 132
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 76+8
ADDRLP4 132
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 28
ADDP4
INDIRF4
ADDRLP4 132
INDIRP4
CNSTI4 496
ADDP4
INDIRF4
ADDF4
ASGNF4
line 279
;278:
;279:	for ( i=0 ; i<num ; i++ ) {
ADDRLP4 4
CNSTI4 0
ASGNI4
ADDRGP4 $179
JUMPV
LABELV $176
line 280
;280:		hit = &g_entities[MiTechEntityList[i]];
ADDRLP4 0
CNSTI4 2492
ADDRLP4 4
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 MiTechEntityList
ADDP4
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ASGNP4
line 282
;281:
;282:		if ( !hit->touch && !ent->touch ) {
ADDRLP4 136
CNSTI4 780
ASGNI4
ADDRLP4 140
CNSTU4 0
ASGNU4
ADDRLP4 0
INDIRP4
ADDRLP4 136
INDIRI4
ADDP4
INDIRP4
CVPU4 4
ADDRLP4 140
INDIRU4
NEU4 $180
ADDRFP4 0
INDIRP4
ADDRLP4 136
INDIRI4
ADDP4
INDIRP4
CVPU4 4
ADDRLP4 140
INDIRU4
NEU4 $180
line 283
;283:			continue;
ADDRGP4 $177
JUMPV
LABELV $180
line 285
;284:		}
;285:		if ( !( hit->r.contents & CONTENTS_TRIGGER ) ) {
ADDRLP4 0
INDIRP4
CNSTI4 500
ADDP4
INDIRI4
CNSTI4 1073741824
BANDI4
CNSTI4 0
NEI4 $182
line 286
;286:			continue;
ADDRGP4 $177
JUMPV
LABELV $182
line 290
;287:		}
;288:
;289:		// ignore most entities if a spectator
;290:		if ( (ent->client->sess.sessionTeam == TEAM_SPECTATOR) || ent->client->ps.pm_type == PM_SPECTATOR ) {
ADDRLP4 144
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
ASGNP4
ADDRLP4 144
INDIRP4
CNSTI4 1032
ADDP4
INDIRI4
CNSTI4 3
EQI4 $186
ADDRLP4 144
INDIRP4
CNSTI4 4
ADDP4
INDIRI4
CNSTI4 2
NEI4 $184
LABELV $186
line 291
;291:			if ( hit->s.eType != ET_TELEPORT_TRIGGER &&
ADDRLP4 0
INDIRP4
CNSTI4 4
ADDP4
INDIRI4
CNSTI4 9
EQI4 $187
ADDRLP4 0
INDIRP4
CNSTI4 780
ADDP4
INDIRP4
CVPU4 4
ADDRGP4 Touch_DoorTrigger
CVPU4 4
EQU4 $187
line 295
;292:				// this is ugly but adding a new ET_? type will
;293:				// most likely cause network incompatibilities
;294:				//We need to stop eliminated players from opening doors somewhere else /Sago007 20070814
;295:				hit->touch != Touch_DoorTrigger ) {
line 296
;296:				continue;
ADDRGP4 $177
JUMPV
LABELV $187
line 298
;297:			}
;298:		}
LABELV $184
line 302
;299:
;300:		// use seperate code for determining if an item is picked up
;301:		// so you don't have to actually contact its bounding box
;302:		if ( hit->s.eType == ET_ITEM ) {
ADDRLP4 0
INDIRP4
CNSTI4 4
ADDP4
INDIRI4
CNSTI4 2
NEI4 $189
line 303
;303:			if ( !BG_PlayerTouchesItem( &ent->client->ps, &hit->s, level.time ) ) {
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
ADDRGP4 level+32
INDIRI4
ARGI4
ADDRLP4 148
ADDRGP4 BG_PlayerTouchesItem
CALLI4
ASGNI4
ADDRLP4 148
INDIRI4
CNSTI4 0
NEI4 $190
line 304
;304:				continue;
ADDRGP4 $177
JUMPV
line 306
;305:			}
;306:		} else {
LABELV $189
line 307
;307:			if ( !trap_EntityContact( mins, maxs, hit ) ) {
ADDRLP4 64
ARGP4
ADDRLP4 76
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
ADDRLP4 148
ADDRGP4 trap_EntityContact
CALLI4
ASGNI4
ADDRLP4 148
INDIRI4
CNSTI4 0
NEI4 $194
line 308
;308:				continue;
ADDRGP4 $177
JUMPV
LABELV $194
line 310
;309:			}
;310:		}
LABELV $190
line 312
;311:
;312:		memset( &trace, 0, sizeof(trace) );
ADDRLP4 8
ARGP4
CNSTI4 0
ARGI4
CNSTI4 56
ARGI4
ADDRGP4 memset
CALLP4
pop
line 314
;313:
;314:		if ( hit->touch ) {
ADDRLP4 0
INDIRP4
CNSTI4 780
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $196
line 315
;315:			hit->touch (hit, ent, &trace);
ADDRLP4 0
INDIRP4
ARGP4
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 8
ARGP4
ADDRLP4 0
INDIRP4
CNSTI4 780
ADDP4
INDIRP4
CALLV
pop
line 316
;316:		}
LABELV $196
line 318
;317:
;318:		if ( ( ent->r.svFlags & SVF_BOT ) && ( ent->touch ) ) {
ADDRLP4 148
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 148
INDIRP4
CNSTI4 464
ADDP4
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
EQI4 $198
ADDRLP4 148
INDIRP4
CNSTI4 780
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $198
line 319
;319:			ent->touch( ent, hit, &trace );
ADDRLP4 152
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 152
INDIRP4
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
ADDRLP4 8
ARGP4
ADDRLP4 152
INDIRP4
CNSTI4 780
ADDP4
INDIRP4
CALLV
pop
line 320
;320:		}
LABELV $198
line 321
;321:	}
LABELV $177
line 279
ADDRLP4 4
ADDRLP4 4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $179
ADDRLP4 4
INDIRI4
ADDRLP4 88
INDIRI4
LTI4 $176
line 324
;322:
;323:	// if we didn't touch a jump pad this pmove frame
;324:	if ( ent->client->ps.jumppad_frame != ent->client->ps.pmove_framecount ) {
ADDRLP4 136
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
ASGNP4
ADDRLP4 136
INDIRP4
CNSTI4 464
ADDP4
INDIRI4
ADDRLP4 136
INDIRP4
CNSTI4 460
ADDP4
INDIRI4
EQI4 $200
line 325
;325:		ent->client->ps.jumppad_frame = 0;
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 464
ADDP4
CNSTI4 0
ASGNI4
line 326
;326:		ent->client->ps.jumppad_ent = 0;
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 452
ADDP4
CNSTI4 0
ASGNI4
line 327
;327:	}
LABELV $200
line 328
;328:}
LABELV $157
endproc G_TouchTriggers 156 16
export G_KillVoid
proc G_KillVoid 32 32
line 330
;329:
;330:void G_KillVoid( gentity_t *ent ) {
line 333
;331:	vec3_t		orig;
;332:
;333:	if ( !ent->client || ent->client->ps.pm_type == PM_CUTSCENE ) {
ADDRLP4 12
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
ASGNP4
ADDRLP4 12
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $205
ADDRLP4 12
INDIRP4
CNSTI4 4
ADDP4
INDIRI4
CNSTI4 7
NEI4 $203
LABELV $205
line 334
;334:		return;
ADDRGP4 $202
JUMPV
LABELV $203
line 338
;335:	}
;336:
;337:	// dead clients don't activate triggers! The reason our pm_spectators can't do anything
;338:	if ( ent->client->ps.stats[STAT_HEALTH] <= 0 && ent->client->ps.pm_type != PM_SPECTATOR) {
ADDRLP4 16
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
ASGNP4
ADDRLP4 16
INDIRP4
CNSTI4 184
ADDP4
INDIRI4
CNSTI4 0
GTI4 $206
ADDRLP4 16
INDIRP4
CNSTI4 4
ADDP4
INDIRI4
CNSTI4 2
EQI4 $206
line 339
;339:		return;
ADDRGP4 $202
JUMPV
LABELV $206
line 342
;340:	}
;341:
;342:	VectorCopy( ent->client->ps.origin, orig );
ADDRLP4 0
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 20
ADDP4
INDIRB
ASGNB 12
line 343
;343:	if(orig[2] <= -70000){
ADDRLP4 0+8
INDIRF4
CNSTF4 3347625984
GTF4 $208
line 344
;344:	G_Damage (ent, NULL, NULL, NULL, NULL, 1000, 0, MOD_UNKNOWN);	
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 20
CNSTP4 0
ASGNP4
ADDRLP4 20
INDIRP4
ARGP4
ADDRLP4 20
INDIRP4
ARGP4
ADDRLP4 24
CNSTP4 0
ASGNP4
ADDRLP4 24
INDIRP4
ARGP4
ADDRLP4 24
INDIRP4
ARGP4
CNSTI4 1000
ARGI4
ADDRLP4 28
CNSTI4 0
ASGNI4
ADDRLP4 28
INDIRI4
ARGI4
ADDRLP4 28
INDIRI4
ARGI4
ADDRGP4 G_Damage
CALLV
pop
line 345
;345:	}
LABELV $208
line 347
;346:
;347:}
LABELV $202
endproc G_KillVoid 32 32
export SpectatorThink
proc SpectatorThink 276 12
line 354
;348:
;349:/*
;350:=================
;351:SpectatorThink
;352:=================
;353:*/
;354:void SpectatorThink( gentity_t *ent, usercmd_t *ucmd ) {
line 358
;355:	pmove_t	pm;
;356:	gclient_t	*client;
;357:
;358:	client = ent->client;
ADDRLP4 0
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
ASGNP4
line 360
;359:
;360:        if ( ( g_gametype.integer == GT_ELIMINATION || g_gametype.integer == GT_CTF_ELIMINATION) &&
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 9
EQI4 $217
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 10
NEI4 $212
LABELV $217
ADDRLP4 0
INDIRP4
CNSTI4 1040
ADDP4
INDIRI4
CNSTI4 2
EQI4 $212
ADDRGP4 g_elimination_lockspectator+12
INDIRI4
CNSTI4 1
LEI4 $212
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 1032
ADDP4
INDIRI4
CNSTI4 3
EQI4 $212
line 363
;361:                client->sess.spectatorState != SPECTATOR_FOLLOW &&
;362:                g_elimination_lockspectator.integer>1 &&
;363:                ent->client->sess.sessionTeam != TEAM_SPECTATOR ) {
line 364
;364:            Cmd_FollowCycle_f(ent);
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 Cmd_FollowCycle_f
CALLV
pop
line 365
;365:        }
LABELV $212
line 367
;366:
;367:	if ( client->sess.spectatorState != SPECTATOR_FOLLOW ) {
ADDRLP4 0
INDIRP4
CNSTI4 1040
ADDP4
INDIRI4
CNSTI4 2
EQI4 $218
line 368
;368:		client->ps.pm_type = PM_SPECTATOR;
ADDRLP4 0
INDIRP4
CNSTI4 4
ADDP4
CNSTI4 2
ASGNI4
line 369
;369:		client->ps.speed = g_spectatorspeed.integer;	// faster than normal
ADDRLP4 0
INDIRP4
CNSTI4 52
ADDP4
ADDRGP4 g_spectatorspeed+12
INDIRI4
ASGNI4
line 372
;370:
;371:		// set up for pmove
;372:		memset (&pm, 0, sizeof(pm));
ADDRLP4 4
ARGP4
CNSTI4 0
ARGI4
CNSTI4 244
ARGI4
ADDRGP4 memset
CALLP4
pop
line 373
;373:		pm.ps = &client->ps;
ADDRLP4 4
ADDRLP4 0
INDIRP4
ASGNP4
line 374
;374:		pm.cmd = *ucmd;
ADDRLP4 4+8
ADDRFP4 4
INDIRP4
INDIRB
ASGNB 24
line 375
;375:		pm.tracemask = MASK_PLAYERSOLID & ~CONTENTS_BODY;	// spectators can fly through bodies
ADDRLP4 4+32
CNSTI4 65537
ASGNI4
line 376
;376:		pm.trace = trap_Trace;
ADDRLP4 4+236
ADDRGP4 trap_Trace
ASGNP4
line 377
;377:		pm.pointcontents = trap_PointContents;
ADDRLP4 4+240
ADDRGP4 trap_PointContents
ASGNP4
line 380
;378:
;379:		// perform a pmove
;380:		Pmove (&pm);
ADDRLP4 4
ARGP4
ADDRGP4 Pmove
CALLV
pop
line 382
;381:		// save results of pmove
;382:		VectorCopy( client->ps.origin, ent->s.origin );
ADDRFP4 0
INDIRP4
CNSTI4 92
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 20
ADDP4
INDIRB
ASGNB 12
line 384
;383:
;384:		G_TouchTriggers( ent );
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 G_TouchTriggers
CALLV
pop
line 385
;385:		trap_UnlinkEntity( ent );
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 trap_UnlinkEntity
CALLV
pop
line 386
;386:	}
LABELV $218
line 393
;387:
;388:	/* Stopped players from going into follow mode in B5, should be fixed in B9
;389:	if(ent->client->sess.sessionTeam != TEAM_SPECTATOR && g_gametype.integer>=GT_ELIMINATION && g_gametype.integer<=GT_LMS)
;390:		return;
;391:	*/
;392:
;393:	client->oldbuttons = client->buttons;
ADDRLP4 0
INDIRP4
CNSTI4 1240
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 1236
ADDP4
INDIRI4
ASGNI4
line 394
;394:	client->buttons = ucmd->buttons;
ADDRLP4 0
INDIRP4
CNSTI4 1236
ADDP4
ADDRFP4 4
INDIRP4
CNSTI4 16
ADDP4
INDIRI4
ASGNI4
line 398
;395:
;396:    //KK-OAX Changed to keep followcycle functional
;397:	// attack button cycles through spectators
;398:	if ( ( client->buttons & BUTTON_ATTACK ) && ! ( client->oldbuttons & BUTTON_ATTACK ) ) {
ADDRLP4 256
CNSTI4 1
ASGNI4
ADDRLP4 260
CNSTI4 0
ASGNI4
ADDRLP4 0
INDIRP4
CNSTI4 1236
ADDP4
INDIRI4
ADDRLP4 256
INDIRI4
BANDI4
ADDRLP4 260
INDIRI4
EQI4 $225
ADDRLP4 0
INDIRP4
CNSTI4 1240
ADDP4
INDIRI4
ADDRLP4 256
INDIRI4
BANDI4
ADDRLP4 260
INDIRI4
NEI4 $225
line 399
;399:		Cmd_FollowCycle_f( ent );
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 Cmd_FollowCycle_f
CALLV
pop
line 400
;400:	}
LABELV $225
line 402
;401:
;402:	if ( ( client->buttons & BUTTON_USE_HOLDABLE ) && ! ( client->oldbuttons & BUTTON_USE_HOLDABLE ) ) {
ADDRLP4 268
CNSTI4 4
ASGNI4
ADDRLP4 272
CNSTI4 0
ASGNI4
ADDRLP4 0
INDIRP4
CNSTI4 1236
ADDP4
INDIRI4
ADDRLP4 268
INDIRI4
BANDI4
ADDRLP4 272
INDIRI4
EQI4 $227
ADDRLP4 0
INDIRP4
CNSTI4 1240
ADDP4
INDIRI4
ADDRLP4 268
INDIRI4
BANDI4
ADDRLP4 272
INDIRI4
NEI4 $227
line 403
;403:		if ( ( g_gametype.integer == GT_ELIMINATION || g_gametype.integer == GT_CTF_ELIMINATION) &&
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 9
EQI4 $234
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 10
NEI4 $229
LABELV $234
ADDRGP4 g_elimination_lockspectator+12
INDIRI4
CNSTI4 1
LEI4 $229
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 1032
ADDP4
INDIRI4
CNSTI4 3
EQI4 $229
line 405
;404:                g_elimination_lockspectator.integer>1 &&
;405:                ent->client->sess.sessionTeam != TEAM_SPECTATOR ) {
line 406
;406:                    return;
ADDRGP4 $211
JUMPV
LABELV $229
line 408
;407:                }
;408:		StopFollowing(ent);
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 StopFollowing
CALLV
pop
line 409
;409:	}
LABELV $227
line 410
;410:}
LABELV $211
endproc SpectatorThink 276 12
export ClientInactivityTimer
proc ClientInactivityTimer 12 8
line 421
;411:
;412:
;413:
;414:/*
;415:=================
;416:ClientInactivityTimer
;417:
;418:Returns qfalse if the client is dropped
;419:=================
;420:*/
;421:qboolean ClientInactivityTimer( gclient_t *client ) {
line 422
;422:	if ( ! g_inactivity.integer ) {
ADDRGP4 g_inactivity+12
INDIRI4
CNSTI4 0
NEI4 $236
line 425
;423:		// give everyone some time, so if the operator sets g_inactivity during
;424:		// gameplay, everyone isn't kicked
;425:		client->inactivityTime = level.time + 60 * 1000;
ADDRFP4 0
INDIRP4
CNSTI4 1320
ADDP4
ADDRGP4 level+32
INDIRI4
CNSTI4 60000
ADDI4
ASGNI4
line 426
;426:		client->inactivityWarning = qfalse;
ADDRFP4 0
INDIRP4
CNSTI4 1324
ADDP4
CNSTI4 0
ASGNI4
line 427
;427:	} else if ( client->pers.cmd.forwardmove ||
ADDRGP4 $237
JUMPV
LABELV $236
ADDRLP4 0
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 4
CNSTI4 0
ASGNI4
ADDRLP4 0
INDIRP4
CNSTI4 497
ADDP4
INDIRI1
CVII4 1
ADDRLP4 4
INDIRI4
NEI4 $244
ADDRLP4 0
INDIRP4
CNSTI4 498
ADDP4
INDIRI1
CVII4 1
ADDRLP4 4
INDIRI4
NEI4 $244
ADDRLP4 0
INDIRP4
CNSTI4 499
ADDP4
INDIRI1
CVII4 1
ADDRLP4 4
INDIRI4
NEI4 $244
ADDRLP4 0
INDIRP4
CNSTI4 492
ADDP4
INDIRI4
CNSTI4 1
BANDI4
ADDRLP4 4
INDIRI4
EQI4 $240
LABELV $244
line 430
;428:		client->pers.cmd.rightmove ||
;429:		client->pers.cmd.upmove ||
;430:		(client->pers.cmd.buttons & BUTTON_ATTACK) ) {
line 431
;431:		client->inactivityTime = level.time + g_inactivity.integer * 1000;
ADDRFP4 0
INDIRP4
CNSTI4 1320
ADDP4
ADDRGP4 level+32
INDIRI4
CNSTI4 1000
ADDRGP4 g_inactivity+12
INDIRI4
MULI4
ADDI4
ASGNI4
line 432
;432:		client->inactivityWarning = qfalse;
ADDRFP4 0
INDIRP4
CNSTI4 1324
ADDP4
CNSTI4 0
ASGNI4
line 433
;433:	} else if ( !client->pers.localClient ) {
ADDRGP4 $241
JUMPV
LABELV $240
ADDRFP4 0
INDIRP4
CNSTI4 500
ADDP4
INDIRI4
CNSTI4 0
NEI4 $247
line 434
;434:		if ( level.time > client->inactivityTime ) {
ADDRGP4 level+32
INDIRI4
ADDRFP4 0
INDIRP4
CNSTI4 1320
ADDP4
INDIRI4
LEI4 $249
line 435
;435:			trap_DropClient( client - level.clients, "Dropped due to inactivity" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 level
INDIRP4
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 2324
DIVI4
ARGI4
ADDRGP4 $252
ARGP4
ADDRGP4 trap_DropClient
CALLV
pop
line 436
;436:			return qfalse;
CNSTI4 0
RETI4
ADDRGP4 $235
JUMPV
LABELV $249
line 438
;437:		}
;438:		if ( level.time > client->inactivityTime - 10000 && !client->inactivityWarning ) {
ADDRLP4 8
ADDRFP4 0
INDIRP4
ASGNP4
ADDRGP4 level+32
INDIRI4
ADDRLP4 8
INDIRP4
CNSTI4 1320
ADDP4
INDIRI4
CNSTI4 10000
SUBI4
LEI4 $253
ADDRLP4 8
INDIRP4
CNSTI4 1324
ADDP4
INDIRI4
CNSTI4 0
NEI4 $253
line 439
;439:			client->inactivityWarning = qtrue;
ADDRFP4 0
INDIRP4
CNSTI4 1324
ADDP4
CNSTI4 1
ASGNI4
line 440
;440:			trap_SendServerCommand( client - level.clients, "cp \"Ten seconds until inactivity drop!\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 level
INDIRP4
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 2324
DIVI4
ARGI4
ADDRGP4 $256
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 441
;441:		}
LABELV $253
line 442
;442:	}
LABELV $247
LABELV $241
LABELV $237
line 443
;443:	return qtrue;
CNSTI4 1
RETI4
LABELV $235
endproc ClientInactivityTimer 12 8
lit
align 4
LABELV $382
byte 4 2
byte 4 3
byte 4 4
byte 4 5
byte 4 6
byte 4 7
byte 4 8
byte 4 9
byte 4 11
byte 4 12
byte 4 13
byte 4 14
byte 4 15
export ClientTimerActions
code
proc ClientTimerActions 120 32
line 453
;444:}
;445:
;446:/*
;447:==================
;448:ClientTimerActions
;449:
;450:Actions that happen once a second
;451:==================
;452:*/
;453:void ClientTimerActions( gentity_t *ent, int msec ) {
line 458
;454:	gclient_t	*client;
;455:	int			maxHealth;
;456:	int			mins, seconds, tens;
;457:
;458:	client = ent->client;
ADDRLP4 0
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
ASGNP4
line 459
;459:	client->timeResidual += msec;
ADDRLP4 20
ADDRLP4 0
INDIRP4
CNSTI4 1356
ADDP4
ASGNP4
ADDRLP4 20
INDIRP4
ADDRLP4 20
INDIRP4
INDIRI4
ADDRFP4 4
INDIRI4
ADDI4
ASGNI4
line 462
;460:
;461:	// Dropped Ammo No-Pickup
;462:	if(ent->wait_to_pickup <= 60000000){
ADDRFP4 0
INDIRP4
CNSTI4 1024
ADDP4
INDIRI4
CNSTI4 60000000
GTI4 $264
line 463
;463:	if(level.time < ent->wait_to_pickup){
ADDRGP4 level+32
INDIRI4
ADDRFP4 0
INDIRP4
CNSTI4 1024
ADDP4
INDIRI4
GEI4 $260
line 464
;464:		client->ps.stats[STAT_NO_PICKUP] = 1;
ADDRLP4 0
INDIRP4
CNSTI4 216
ADDP4
CNSTI4 1
ASGNI4
line 465
;465:	} else {
ADDRGP4 $264
JUMPV
LABELV $260
line 466
;466:		client->ps.stats[STAT_NO_PICKUP] = 0;
ADDRLP4 0
INDIRP4
CNSTI4 216
ADDP4
CNSTI4 0
ASGNI4
line 467
;467:	}
line 468
;468:	}
ADDRGP4 $264
JUMPV
LABELV $263
line 470
;469:
;470:	while ( client->timeResidual >= 1000 ) {
line 471
;471:		client->timeResidual -= 1000;
ADDRLP4 24
ADDRLP4 0
INDIRP4
CNSTI4 1356
ADDP4
ASGNP4
ADDRLP4 24
INDIRP4
ADDRLP4 24
INDIRP4
INDIRI4
CNSTI4 1000
SUBI4
ASGNI4
line 474
;472:
;473:	// Infinite Ammo
;474:	if(g_rlinf.integer==1){ client->ps.ammo[WP_ROCKET_LAUNCHER] = 9999; }
ADDRGP4 g_rlinf+12
INDIRI4
CNSTI4 1
NEI4 $266
ADDRLP4 0
INDIRP4
CNSTI4 396
ADDP4
CNSTI4 9999
ASGNI4
LABELV $266
line 475
;475:	if(g_glinf.integer==1){ client->ps.ammo[WP_GRENADE_LAUNCHER] = 9999; }
ADDRGP4 g_glinf+12
INDIRI4
CNSTI4 1
NEI4 $269
ADDRLP4 0
INDIRP4
CNSTI4 392
ADDP4
CNSTI4 9999
ASGNI4
LABELV $269
line 476
;476:	if(g_pginf.integer==1){ client->ps.ammo[WP_PLASMAGUN] = 9999; }
ADDRGP4 g_pginf+12
INDIRI4
CNSTI4 1
NEI4 $272
ADDRLP4 0
INDIRP4
CNSTI4 408
ADDP4
CNSTI4 9999
ASGNI4
LABELV $272
line 477
;477:	if(g_mginf.integer==1){ client->ps.ammo[WP_MACHINEGUN] = 9999; }
ADDRGP4 g_mginf+12
INDIRI4
CNSTI4 1
NEI4 $275
ADDRLP4 0
INDIRP4
CNSTI4 384
ADDP4
CNSTI4 9999
ASGNI4
LABELV $275
line 478
;478:	if(g_sginf.integer==1){ client->ps.ammo[WP_SHOTGUN] = 9999; }
ADDRGP4 g_sginf+12
INDIRI4
CNSTI4 1
NEI4 $278
ADDRLP4 0
INDIRP4
CNSTI4 388
ADDP4
CNSTI4 9999
ASGNI4
LABELV $278
line 479
;479:	if(g_bfginf.integer==1){ client->ps.ammo[WP_BFG] = 9999; }
ADDRGP4 g_bfginf+12
INDIRI4
CNSTI4 1
NEI4 $281
ADDRLP4 0
INDIRP4
CNSTI4 412
ADDP4
CNSTI4 9999
ASGNI4
LABELV $281
line 480
;480:	if(g_rginf.integer==1){ client->ps.ammo[WP_RAILGUN] = 9999; }
ADDRGP4 g_rginf+12
INDIRI4
CNSTI4 1
NEI4 $284
ADDRLP4 0
INDIRP4
CNSTI4 404
ADDP4
CNSTI4 9999
ASGNI4
LABELV $284
line 481
;481:	if(g_cginf.integer==1){ client->ps.ammo[WP_CHAINGUN] = 9999; }
ADDRGP4 g_cginf+12
INDIRI4
CNSTI4 1
NEI4 $287
ADDRLP4 0
INDIRP4
CNSTI4 428
ADDP4
CNSTI4 9999
ASGNI4
LABELV $287
line 482
;482:	if(g_lginf.integer==1){ client->ps.ammo[WP_LIGHTNING] = 9999; }
ADDRGP4 g_lginf+12
INDIRI4
CNSTI4 1
NEI4 $290
ADDRLP4 0
INDIRP4
CNSTI4 400
ADDP4
CNSTI4 9999
ASGNI4
LABELV $290
line 483
;483:	if(g_nginf.integer==1){ client->ps.ammo[WP_NAILGUN] = 9999; }
ADDRGP4 g_nginf+12
INDIRI4
CNSTI4 1
NEI4 $293
ADDRLP4 0
INDIRP4
CNSTI4 420
ADDP4
CNSTI4 9999
ASGNI4
LABELV $293
line 484
;484:	if(g_plinf.integer==1){ client->ps.ammo[WP_PROX_LAUNCHER] = 9999; }
ADDRGP4 g_plinf+12
INDIRI4
CNSTI4 1
NEI4 $296
ADDRLP4 0
INDIRP4
CNSTI4 424
ADDP4
CNSTI4 9999
ASGNI4
LABELV $296
line 485
;485:	if(g_ftinf.integer==1){ client->ps.ammo[WP_FLAMETHROWER] = 9999; }
ADDRGP4 g_ftinf+12
INDIRI4
CNSTI4 1
NEI4 $299
ADDRLP4 0
INDIRP4
CNSTI4 432
ADDP4
CNSTI4 9999
ASGNI4
LABELV $299
line 486
;486:	if(g_aminf.integer==1){ client->ps.ammo[WP_ANTIMATTER] = 9999; }
ADDRGP4 g_aminf+12
INDIRI4
CNSTI4 1
NEI4 $302
ADDRLP4 0
INDIRP4
CNSTI4 436
ADDP4
CNSTI4 9999
ASGNI4
LABELV $302
line 489
;487:
;488:	// guard inf ammo
;489:	if( bg_itemlist[client->ps.stats[STAT_PERSISTANT_POWERUP]].giTag == PW_GUARD ) {
CNSTI4 56
ADDRLP4 0
INDIRP4
CNSTI4 192
ADDP4
INDIRI4
MULI4
ADDRGP4 bg_itemlist+44
ADDP4
INDIRI4
CNSTI4 11
NEI4 $305
line 490
;490:	if (g_guard_infammo.integer == 1){
ADDRGP4 g_guard_infammo+12
INDIRI4
CNSTI4 1
NEI4 $308
line 491
;491:	{ client->ps.ammo[WP_ROCKET_LAUNCHER] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 396
ADDP4
CNSTI4 9999
ASGNI4
line 492
;492:	{ client->ps.ammo[WP_GRENADE_LAUNCHER] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 392
ADDP4
CNSTI4 9999
ASGNI4
line 493
;493:	{ client->ps.ammo[WP_PLASMAGUN] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 408
ADDP4
CNSTI4 9999
ASGNI4
line 494
;494:	{ client->ps.ammo[WP_MACHINEGUN] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 384
ADDP4
CNSTI4 9999
ASGNI4
line 495
;495:	{ client->ps.ammo[WP_SHOTGUN] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 388
ADDP4
CNSTI4 9999
ASGNI4
line 496
;496:	{ client->ps.ammo[WP_BFG] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 412
ADDP4
CNSTI4 9999
ASGNI4
line 497
;497:	{ client->ps.ammo[WP_RAILGUN] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 404
ADDP4
CNSTI4 9999
ASGNI4
line 498
;498:	{ client->ps.ammo[WP_CHAINGUN] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 428
ADDP4
CNSTI4 9999
ASGNI4
line 499
;499:	{ client->ps.ammo[WP_LIGHTNING] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 400
ADDP4
CNSTI4 9999
ASGNI4
line 500
;500:	{ client->ps.ammo[WP_NAILGUN] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 420
ADDP4
CNSTI4 9999
ASGNI4
line 501
;501:	{ client->ps.ammo[WP_PROX_LAUNCHER] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 424
ADDP4
CNSTI4 9999
ASGNI4
line 502
;502:	{ client->ps.ammo[WP_FLAMETHROWER] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 432
ADDP4
CNSTI4 9999
ASGNI4
line 503
;503:	{ client->ps.ammo[WP_ANTIMATTER] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 436
ADDP4
CNSTI4 9999
ASGNI4
line 504
;504:	}
LABELV $308
line 505
;505:	}
LABELV $305
line 508
;506:
;507:	// scout inf ammo
;508:	if( bg_itemlist[client->ps.stats[STAT_PERSISTANT_POWERUP]].giTag == PW_SCOUT ) {
CNSTI4 56
ADDRLP4 0
INDIRP4
CNSTI4 192
ADDP4
INDIRI4
MULI4
ADDRGP4 bg_itemlist+44
ADDP4
INDIRI4
CNSTI4 10
NEI4 $311
line 509
;509:	if (g_scout_infammo.integer == 1){
ADDRGP4 g_scout_infammo+12
INDIRI4
CNSTI4 1
NEI4 $314
line 510
;510:	{ client->ps.ammo[WP_ROCKET_LAUNCHER] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 396
ADDP4
CNSTI4 9999
ASGNI4
line 511
;511:	{ client->ps.ammo[WP_GRENADE_LAUNCHER] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 392
ADDP4
CNSTI4 9999
ASGNI4
line 512
;512:	{ client->ps.ammo[WP_PLASMAGUN] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 408
ADDP4
CNSTI4 9999
ASGNI4
line 513
;513:	{ client->ps.ammo[WP_MACHINEGUN] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 384
ADDP4
CNSTI4 9999
ASGNI4
line 514
;514:	{ client->ps.ammo[WP_SHOTGUN] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 388
ADDP4
CNSTI4 9999
ASGNI4
line 515
;515:	{ client->ps.ammo[WP_BFG] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 412
ADDP4
CNSTI4 9999
ASGNI4
line 516
;516:	{ client->ps.ammo[WP_RAILGUN] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 404
ADDP4
CNSTI4 9999
ASGNI4
line 517
;517:	{ client->ps.ammo[WP_CHAINGUN] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 428
ADDP4
CNSTI4 9999
ASGNI4
line 518
;518:	{ client->ps.ammo[WP_LIGHTNING] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 400
ADDP4
CNSTI4 9999
ASGNI4
line 519
;519:	{ client->ps.ammo[WP_NAILGUN] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 420
ADDP4
CNSTI4 9999
ASGNI4
line 520
;520:	{ client->ps.ammo[WP_PROX_LAUNCHER] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 424
ADDP4
CNSTI4 9999
ASGNI4
line 521
;521:	{ client->ps.ammo[WP_FLAMETHROWER] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 432
ADDP4
CNSTI4 9999
ASGNI4
line 522
;522:	{ client->ps.ammo[WP_ANTIMATTER] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 436
ADDP4
CNSTI4 9999
ASGNI4
line 523
;523:	}
LABELV $314
line 524
;524:	}
LABELV $311
line 527
;525:
;526:	// doubler inf ammo
;527:	if( bg_itemlist[client->ps.stats[STAT_PERSISTANT_POWERUP]].giTag == PW_DOUBLER ) {
CNSTI4 56
ADDRLP4 0
INDIRP4
CNSTI4 192
ADDP4
INDIRI4
MULI4
ADDRGP4 bg_itemlist+44
ADDP4
INDIRI4
CNSTI4 12
NEI4 $317
line 528
;528:	if (g_doubler_infammo.integer == 1){
ADDRGP4 g_doubler_infammo+12
INDIRI4
CNSTI4 1
NEI4 $320
line 529
;529:	{ client->ps.ammo[WP_ROCKET_LAUNCHER] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 396
ADDP4
CNSTI4 9999
ASGNI4
line 530
;530:	{ client->ps.ammo[WP_GRENADE_LAUNCHER] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 392
ADDP4
CNSTI4 9999
ASGNI4
line 531
;531:	{ client->ps.ammo[WP_PLASMAGUN] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 408
ADDP4
CNSTI4 9999
ASGNI4
line 532
;532:	{ client->ps.ammo[WP_MACHINEGUN] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 384
ADDP4
CNSTI4 9999
ASGNI4
line 533
;533:	{ client->ps.ammo[WP_SHOTGUN] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 388
ADDP4
CNSTI4 9999
ASGNI4
line 534
;534:	{ client->ps.ammo[WP_BFG] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 412
ADDP4
CNSTI4 9999
ASGNI4
line 535
;535:	{ client->ps.ammo[WP_RAILGUN] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 404
ADDP4
CNSTI4 9999
ASGNI4
line 536
;536:	{ client->ps.ammo[WP_CHAINGUN] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 428
ADDP4
CNSTI4 9999
ASGNI4
line 537
;537:	{ client->ps.ammo[WP_LIGHTNING] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 400
ADDP4
CNSTI4 9999
ASGNI4
line 538
;538:	{ client->ps.ammo[WP_NAILGUN] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 420
ADDP4
CNSTI4 9999
ASGNI4
line 539
;539:	{ client->ps.ammo[WP_PROX_LAUNCHER] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 424
ADDP4
CNSTI4 9999
ASGNI4
line 540
;540:	{ client->ps.ammo[WP_FLAMETHROWER] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 432
ADDP4
CNSTI4 9999
ASGNI4
line 541
;541:	{ client->ps.ammo[WP_ANTIMATTER] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 436
ADDP4
CNSTI4 9999
ASGNI4
line 542
;542:	}
LABELV $320
line 543
;543:	}
LABELV $317
line 546
;544:
;545:	//team red infammo
;546:	if(client->sess.sessionTeam == TEAM_RED){
ADDRLP4 0
INDIRP4
CNSTI4 1032
ADDP4
INDIRI4
CNSTI4 1
NEI4 $323
line 547
;547:	if (g_teamred_infammo.integer == 1){
ADDRGP4 g_teamred_infammo+12
INDIRI4
CNSTI4 1
NEI4 $325
line 548
;548:	{ client->ps.ammo[WP_ROCKET_LAUNCHER] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 396
ADDP4
CNSTI4 9999
ASGNI4
line 549
;549:	{ client->ps.ammo[WP_GRENADE_LAUNCHER] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 392
ADDP4
CNSTI4 9999
ASGNI4
line 550
;550:	{ client->ps.ammo[WP_PLASMAGUN] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 408
ADDP4
CNSTI4 9999
ASGNI4
line 551
;551:	{ client->ps.ammo[WP_MACHINEGUN] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 384
ADDP4
CNSTI4 9999
ASGNI4
line 552
;552:	{ client->ps.ammo[WP_SHOTGUN] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 388
ADDP4
CNSTI4 9999
ASGNI4
line 553
;553:	{ client->ps.ammo[WP_BFG] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 412
ADDP4
CNSTI4 9999
ASGNI4
line 554
;554:	{ client->ps.ammo[WP_RAILGUN] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 404
ADDP4
CNSTI4 9999
ASGNI4
line 555
;555:	{ client->ps.ammo[WP_CHAINGUN] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 428
ADDP4
CNSTI4 9999
ASGNI4
line 556
;556:	{ client->ps.ammo[WP_LIGHTNING] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 400
ADDP4
CNSTI4 9999
ASGNI4
line 557
;557:	{ client->ps.ammo[WP_NAILGUN] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 420
ADDP4
CNSTI4 9999
ASGNI4
line 558
;558:	{ client->ps.ammo[WP_PROX_LAUNCHER] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 424
ADDP4
CNSTI4 9999
ASGNI4
line 559
;559:	{ client->ps.ammo[WP_FLAMETHROWER] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 432
ADDP4
CNSTI4 9999
ASGNI4
line 560
;560:	{ client->ps.ammo[WP_ANTIMATTER] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 436
ADDP4
CNSTI4 9999
ASGNI4
line 561
;561:	}
LABELV $325
line 562
;562:	}
LABELV $323
line 565
;563:
;564:	//team blue infammo
;565:	if(client->sess.sessionTeam == TEAM_BLUE){
ADDRLP4 0
INDIRP4
CNSTI4 1032
ADDP4
INDIRI4
CNSTI4 2
NEI4 $328
line 566
;566:	if (g_teamblue_infammo.integer == 1){
ADDRGP4 g_teamblue_infammo+12
INDIRI4
CNSTI4 1
NEI4 $330
line 567
;567:	{ client->ps.ammo[WP_ROCKET_LAUNCHER] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 396
ADDP4
CNSTI4 9999
ASGNI4
line 568
;568:	{ client->ps.ammo[WP_GRENADE_LAUNCHER] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 392
ADDP4
CNSTI4 9999
ASGNI4
line 569
;569:	{ client->ps.ammo[WP_PLASMAGUN] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 408
ADDP4
CNSTI4 9999
ASGNI4
line 570
;570:	{ client->ps.ammo[WP_MACHINEGUN] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 384
ADDP4
CNSTI4 9999
ASGNI4
line 571
;571:	{ client->ps.ammo[WP_SHOTGUN] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 388
ADDP4
CNSTI4 9999
ASGNI4
line 572
;572:	{ client->ps.ammo[WP_BFG] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 412
ADDP4
CNSTI4 9999
ASGNI4
line 573
;573:	{ client->ps.ammo[WP_RAILGUN] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 404
ADDP4
CNSTI4 9999
ASGNI4
line 574
;574:	{ client->ps.ammo[WP_CHAINGUN] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 428
ADDP4
CNSTI4 9999
ASGNI4
line 575
;575:	{ client->ps.ammo[WP_LIGHTNING] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 400
ADDP4
CNSTI4 9999
ASGNI4
line 576
;576:	{ client->ps.ammo[WP_NAILGUN] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 420
ADDP4
CNSTI4 9999
ASGNI4
line 577
;577:	{ client->ps.ammo[WP_PROX_LAUNCHER] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 424
ADDP4
CNSTI4 9999
ASGNI4
line 578
;578:	{ client->ps.ammo[WP_FLAMETHROWER] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 432
ADDP4
CNSTI4 9999
ASGNI4
line 579
;579:	{ client->ps.ammo[WP_ANTIMATTER] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 436
ADDP4
CNSTI4 9999
ASGNI4
line 580
;580:	}
LABELV $330
line 581
;581:	}
LABELV $328
line 583
;582:
;583:	if(ent->botskill == 6){
ADDRFP4 0
INDIRP4
CNSTI4 1040
ADDP4
INDIRI4
CNSTI4 6
NEI4 $333
line 584
;584:	{ client->ps.ammo[WP_ROCKET_LAUNCHER] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 396
ADDP4
CNSTI4 9999
ASGNI4
line 585
;585:	{ client->ps.ammo[WP_GRENADE_LAUNCHER] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 392
ADDP4
CNSTI4 9999
ASGNI4
line 586
;586:	{ client->ps.ammo[WP_PLASMAGUN] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 408
ADDP4
CNSTI4 9999
ASGNI4
line 587
;587:	{ client->ps.ammo[WP_MACHINEGUN] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 384
ADDP4
CNSTI4 9999
ASGNI4
line 588
;588:	{ client->ps.ammo[WP_SHOTGUN] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 388
ADDP4
CNSTI4 9999
ASGNI4
line 589
;589:	{ client->ps.ammo[WP_BFG] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 412
ADDP4
CNSTI4 9999
ASGNI4
line 590
;590:	{ client->ps.ammo[WP_RAILGUN] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 404
ADDP4
CNSTI4 9999
ASGNI4
line 591
;591:	{ client->ps.ammo[WP_CHAINGUN] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 428
ADDP4
CNSTI4 9999
ASGNI4
line 592
;592:	{ client->ps.ammo[WP_LIGHTNING] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 400
ADDP4
CNSTI4 9999
ASGNI4
line 593
;593:	{ client->ps.ammo[WP_NAILGUN] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 420
ADDP4
CNSTI4 9999
ASGNI4
line 594
;594:	{ client->ps.ammo[WP_PROX_LAUNCHER] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 424
ADDP4
CNSTI4 9999
ASGNI4
line 595
;595:	{ client->ps.ammo[WP_FLAMETHROWER] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 432
ADDP4
CNSTI4 9999
ASGNI4
line 596
;596:	{ client->ps.ammo[WP_ANTIMATTER] = 9999; }
ADDRLP4 0
INDIRP4
CNSTI4 436
ADDP4
CNSTI4 9999
ASGNI4
line 597
;597:	}
LABELV $333
line 600
;598:
;599:		//Stop in elimination!!!
;600:		if (client->ps.pm_flags & PMF_ELIMWARMUP)
ADDRLP4 0
INDIRP4
CNSTI4 12
ADDP4
INDIRI4
CNSTI4 32768
BANDI4
CNSTI4 0
EQI4 $335
line 601
;601:			continue;
ADDRGP4 $264
JUMPV
LABELV $335
line 604
;602:
;603:		// regenerate
;604:		if( bg_itemlist[client->ps.stats[STAT_PERSISTANT_POWERUP]].giTag == PW_GUARD ) {
CNSTI4 56
ADDRLP4 0
INDIRP4
CNSTI4 192
ADDP4
INDIRI4
MULI4
ADDRGP4 bg_itemlist+44
ADDP4
INDIRI4
CNSTI4 11
NEI4 $337
line 605
;605:			maxHealth = client->ps.stats[STAT_MAX_HEALTH];
ADDRLP4 4
ADDRLP4 0
INDIRP4
CNSTI4 212
ADDP4
INDIRI4
ASGNI4
line 606
;606:		}
ADDRGP4 $338
JUMPV
LABELV $337
line 607
;607:		else if ( client->ps.powerups[PW_REGEN] ) {
ADDRLP4 0
INDIRP4
CNSTI4 332
ADDP4
INDIRI4
CNSTI4 0
EQI4 $340
line 608
;608:			maxHealth = client->ps.stats[STAT_MAX_HEALTH];
ADDRLP4 4
ADDRLP4 0
INDIRP4
CNSTI4 212
ADDP4
INDIRI4
ASGNI4
line 609
;609:		}
ADDRGP4 $341
JUMPV
LABELV $340
line 610
;610:		else {
line 611
;611:			maxHealth = 0;
ADDRLP4 4
CNSTI4 0
ASGNI4
line 612
;612:		}
LABELV $341
LABELV $338
line 613
;613:		if( maxHealth ) {
ADDRLP4 4
INDIRI4
CNSTI4 0
EQI4 $342
line 614
;614:			if ( ent->health < maxHealth ) {
ADDRFP4 0
INDIRP4
CNSTI4 808
ADDP4
INDIRI4
ADDRLP4 4
INDIRI4
GEI4 $344
line 615
;615:				ent->health += g_fasthealthregen.integer;
ADDRLP4 28
ADDRFP4 0
INDIRP4
CNSTI4 808
ADDP4
ASGNP4
ADDRLP4 28
INDIRP4
ADDRLP4 28
INDIRP4
INDIRI4
ADDRGP4 g_fasthealthregen+12
INDIRI4
ADDI4
ASGNI4
line 616
;616:				if ( ent->health > maxHealth * 1.1 ) {
ADDRFP4 0
INDIRP4
CNSTI4 808
ADDP4
INDIRI4
CVIF4 4
CNSTF4 1066192077
ADDRLP4 4
INDIRI4
CVIF4 4
MULF4
LEF4 $347
line 617
;617:					ent->health = maxHealth * 1.1;
ADDRFP4 0
INDIRP4
CNSTI4 808
ADDP4
CNSTF4 1066192077
ADDRLP4 4
INDIRI4
CVIF4 4
MULF4
CVFI4 4
ASGNI4
line 618
;618:				}
LABELV $347
line 619
;619:				G_AddEvent( ent, EV_POWERUP_REGEN, 0 );
ADDRFP4 0
INDIRP4
ARGP4
CNSTI4 64
ARGI4
CNSTI4 0
ARGI4
ADDRGP4 G_AddEvent
CALLV
pop
line 620
;620:			} else if ( ent->health < maxHealth * 2) {
ADDRGP4 $343
JUMPV
LABELV $344
ADDRFP4 0
INDIRP4
CNSTI4 808
ADDP4
INDIRI4
ADDRLP4 4
INDIRI4
CNSTI4 1
LSHI4
GEI4 $343
line 621
;621:				ent->health += g_slowhealthregen.integer;
ADDRLP4 28
ADDRFP4 0
INDIRP4
CNSTI4 808
ADDP4
ASGNP4
ADDRLP4 28
INDIRP4
ADDRLP4 28
INDIRP4
INDIRI4
ADDRGP4 g_slowhealthregen+12
INDIRI4
ADDI4
ASGNI4
line 622
;622:				if ( ent->health > maxHealth * 2 ) {
ADDRFP4 0
INDIRP4
CNSTI4 808
ADDP4
INDIRI4
ADDRLP4 4
INDIRI4
CNSTI4 1
LSHI4
LEI4 $352
line 623
;623:					ent->health = maxHealth * 2;
ADDRFP4 0
INDIRP4
CNSTI4 808
ADDP4
ADDRLP4 4
INDIRI4
CNSTI4 1
LSHI4
ASGNI4
line 624
;624:				}
LABELV $352
line 625
;625:				G_AddEvent( ent, EV_POWERUP_REGEN, 0 );
ADDRFP4 0
INDIRP4
ARGP4
CNSTI4 64
ARGI4
CNSTI4 0
ARGI4
ADDRGP4 G_AddEvent
CALLV
pop
line 626
;626:			}
line 627
;627:		} else {
ADDRGP4 $343
JUMPV
LABELV $342
line 629
;628:			// count down health when over max
;629:			if ( !ent->singlebot ){
ADDRFP4 0
INDIRP4
CNSTI4 1028
ADDP4
INDIRI4
CNSTI4 0
NEI4 $354
line 630
;630:			if ( ent->health > client->ps.stats[STAT_MAX_HEALTH] ) {
ADDRFP4 0
INDIRP4
CNSTI4 808
ADDP4
INDIRI4
ADDRLP4 0
INDIRP4
CNSTI4 212
ADDP4
INDIRI4
LEI4 $356
line 631
;631:				ent->health--;
ADDRLP4 28
ADDRFP4 0
INDIRP4
CNSTI4 808
ADDP4
ASGNP4
ADDRLP4 28
INDIRP4
ADDRLP4 28
INDIRP4
INDIRI4
CNSTI4 1
SUBI4
ASGNI4
line 632
;632:			}
LABELV $356
line 633
;633:			}
LABELV $354
line 635
;634:			
;635:			client->ps.stats[STAT_MONEY] = client->pers.oldmoney;
ADDRLP4 0
INDIRP4
CNSTI4 220
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 1028
ADDP4
INDIRI4
ASGNI4
line 639
;636:			
;637:			
;638:			//Start killing players in LMS, if we are in overtime
;639:			if(g_elimination_roundtime.integer&&g_gametype.integer==GT_LMS && TeamHealthCount( -1, TEAM_FREE ) != ent->health &&(level.roundNumber==level.roundNumberStarted)&&(level.time>=level.roundStartTime+1000*g_elimination_roundtime.integer)) {
ADDRLP4 32
CNSTI4 0
ASGNI4
ADDRGP4 g_elimination_roundtime+12
INDIRI4
ADDRLP4 32
INDIRI4
EQI4 $358
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 11
NEI4 $358
CNSTI4 -1
ARGI4
ADDRLP4 32
INDIRI4
ARGI4
ADDRLP4 36
ADDRGP4 TeamHealthCount
CALLI4
ASGNI4
ADDRLP4 36
INDIRI4
ADDRFP4 0
INDIRP4
CNSTI4 808
ADDP4
INDIRI4
EQI4 $358
ADDRGP4 level+10004
INDIRI4
ADDRGP4 level+10008
INDIRI4
NEI4 $358
ADDRGP4 level+32
INDIRI4
ADDRGP4 level+10000
INDIRI4
CNSTI4 1000
ADDRGP4 g_elimination_roundtime+12
INDIRI4
MULI4
ADDI4
LTI4 $358
line 640
;640:				ent->damage=5;
ADDRFP4 0
INDIRP4
CNSTI4 924
ADDP4
CNSTI4 5
ASGNI4
line 641
;641:				G_Damage (ent, NULL, NULL, NULL, NULL,
ADDRLP4 40
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 40
INDIRP4
ARGP4
ADDRLP4 44
CNSTP4 0
ASGNP4
ADDRLP4 44
INDIRP4
ARGP4
ADDRLP4 44
INDIRP4
ARGP4
ADDRLP4 48
CNSTP4 0
ASGNP4
ADDRLP4 48
INDIRP4
ARGP4
ADDRLP4 48
INDIRP4
ARGP4
ADDRLP4 40
INDIRP4
CNSTI4 924
ADDP4
INDIRI4
ARGI4
CNSTI4 2
ARGI4
CNSTI4 0
ARGI4
ADDRGP4 G_Damage
CALLV
pop
line 643
;642:					ent->damage, DAMAGE_NO_ARMOR, MOD_UNKNOWN);
;643:			}
ADDRGP4 $359
JUMPV
LABELV $358
line 645
;644:			else
;645:			if ( ent->health < client->ps.stats[STAT_MAX_HEALTH] ) {
ADDRFP4 0
INDIRP4
CNSTI4 808
ADDP4
INDIRI4
ADDRLP4 0
INDIRP4
CNSTI4 212
ADDP4
INDIRI4
GEI4 $367
line 646
;646:				ent->health+=g_regen.integer;
ADDRLP4 40
ADDRFP4 0
INDIRP4
CNSTI4 808
ADDP4
ASGNP4
ADDRLP4 40
INDIRP4
ADDRLP4 40
INDIRP4
INDIRI4
ADDRGP4 g_regen+12
INDIRI4
ADDI4
ASGNI4
line 647
;647:				if(ent->health>client->ps.stats[STAT_MAX_HEALTH])
ADDRFP4 0
INDIRP4
CNSTI4 808
ADDP4
INDIRI4
ADDRLP4 0
INDIRP4
CNSTI4 212
ADDP4
INDIRI4
LEI4 $370
line 648
;648:					ent->health= client->ps.stats[STAT_MAX_HEALTH];
ADDRFP4 0
INDIRP4
CNSTI4 808
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 212
ADDP4
INDIRI4
ASGNI4
LABELV $370
line 649
;649:			}
LABELV $367
LABELV $359
line 650
;650:		}
LABELV $343
line 652
;651:
;652:		G_SendWeaponProperties( ent );		//send game setting to client for sync
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 G_SendWeaponProperties
CALLV
pop
line 653
;653:		G_SendSwepWeapons( ent );				//send sweps list to client for sync
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 G_SendSwepWeapons
CALLV
pop
line 656
;654:
;655:		// count down armor when over max
;656:		if ( !ent->singlebot ){
ADDRFP4 0
INDIRP4
CNSTI4 1028
ADDP4
INDIRI4
CNSTI4 0
NEI4 $372
line 657
;657:		if ( client->ps.stats[STAT_ARMOR] > client->ps.stats[STAT_MAX_HEALTH] ) {
ADDRLP4 0
INDIRP4
CNSTI4 200
ADDP4
INDIRI4
ADDRLP4 0
INDIRP4
CNSTI4 212
ADDP4
INDIRI4
LEI4 $374
line 658
;658:			client->ps.stats[STAT_ARMOR]--;
ADDRLP4 32
ADDRLP4 0
INDIRP4
CNSTI4 200
ADDP4
ASGNP4
ADDRLP4 32
INDIRP4
ADDRLP4 32
INDIRP4
INDIRI4
CNSTI4 1
SUBI4
ASGNI4
line 659
;659:		}
LABELV $374
line 660
;660:		}
LABELV $372
line 661
;661:		if ( client->ps.stats[STAT_ARMOR] < client->ps.stats[STAT_MAX_HEALTH] ) {
ADDRLP4 0
INDIRP4
CNSTI4 200
ADDP4
INDIRI4
ADDRLP4 0
INDIRP4
CNSTI4 212
ADDP4
INDIRI4
GEI4 $376
line 662
;662:			client->ps.stats[STAT_ARMOR]+=g_regenarmor.integer;
ADDRLP4 32
ADDRLP4 0
INDIRP4
CNSTI4 200
ADDP4
ASGNP4
ADDRLP4 32
INDIRP4
ADDRLP4 32
INDIRP4
INDIRI4
ADDRGP4 g_regenarmor+12
INDIRI4
ADDI4
ASGNI4
line 663
;663:		}
LABELV $376
line 664
;664:	}
LABELV $264
line 470
ADDRLP4 0
INDIRP4
CNSTI4 1356
ADDP4
INDIRI4
CNSTI4 1000
GEI4 $263
line 665
;665:	if( bg_itemlist[client->ps.stats[STAT_PERSISTANT_POWERUP]].giTag == PW_AMMOREGEN ) {
CNSTI4 56
ADDRLP4 0
INDIRP4
CNSTI4 192
ADDP4
INDIRI4
MULI4
ADDRGP4 bg_itemlist+44
ADDP4
INDIRI4
CNSTI4 13
NEI4 $379
line 667
;666:		int w, max, inc, t, i;
;667:    int weapList[]={WP_MACHINEGUN,WP_SHOTGUN,WP_GRENADE_LAUNCHER,WP_ROCKET_LAUNCHER,WP_LIGHTNING,WP_RAILGUN,WP_PLASMAGUN,WP_BFG,WP_NAILGUN,WP_PROX_LAUNCHER,WP_CHAINGUN,WP_FLAMETHROWER,WP_ANTIMATTER};
ADDRLP4 44
ADDRGP4 $382
INDIRB
ASGNB 52
line 668
;668:    int weapCount = sizeof(weapList) / sizeof(int);
ADDRLP4 96
CNSTI4 13
ASGNI4
line 670
;669:		//
;670:    for (i = 0; i < weapCount; i++) {
ADDRLP4 36
CNSTI4 0
ASGNI4
ADDRGP4 $386
JUMPV
LABELV $383
line 671
;671:		  w = weapList[i];
ADDRLP4 24
ADDRLP4 36
INDIRI4
CNSTI4 2
LSHI4
ADDRLP4 44
ADDP4
INDIRI4
ASGNI4
line 673
;672:
;673:		  switch(w) {
ADDRLP4 104
CNSTI4 2
ASGNI4
ADDRLP4 24
INDIRI4
ADDRLP4 104
INDIRI4
LTI4 $387
ADDRLP4 24
INDIRI4
CNSTI4 15
GTI4 $387
ADDRLP4 24
INDIRI4
ADDRLP4 104
INDIRI4
LSHI4
ADDRGP4 $402-8
ADDP4
INDIRP4
JUMPV
lit
align 4
LABELV $402
address $389
address $390
address $391
address $392
address $393
address $394
address $395
address $396
address $387
address $397
address $398
address $399
address $400
address $401
code
LABELV $389
line 674
;674:			  case WP_MACHINEGUN: max = 50; inc = 4; t = 1000; break;
ADDRLP4 32
CNSTI4 50
ASGNI4
ADDRLP4 40
CNSTI4 4
ASGNI4
ADDRLP4 28
CNSTI4 1000
ASGNI4
ADDRGP4 $388
JUMPV
LABELV $390
line 675
;675:			  case WP_SHOTGUN: max = 10; inc = 1; t = 1500; break;
ADDRLP4 32
CNSTI4 10
ASGNI4
ADDRLP4 40
CNSTI4 1
ASGNI4
ADDRLP4 28
CNSTI4 1500
ASGNI4
ADDRGP4 $388
JUMPV
LABELV $391
line 676
;676:			  case WP_GRENADE_LAUNCHER: max = 10; inc = 1; t = 2000; break;
ADDRLP4 32
CNSTI4 10
ASGNI4
ADDRLP4 40
CNSTI4 1
ASGNI4
ADDRLP4 28
CNSTI4 2000
ASGNI4
ADDRGP4 $388
JUMPV
LABELV $392
line 677
;677:			  case WP_ROCKET_LAUNCHER: max = 10; inc = 1; t = 1750; break;
ADDRLP4 32
CNSTI4 10
ASGNI4
ADDRLP4 40
CNSTI4 1
ASGNI4
ADDRLP4 28
CNSTI4 1750
ASGNI4
ADDRGP4 $388
JUMPV
LABELV $393
line 678
;678:			  case WP_LIGHTNING: max = 50; inc = 5; t = 1500; break;
ADDRLP4 32
CNSTI4 50
ASGNI4
ADDRLP4 40
CNSTI4 5
ASGNI4
ADDRLP4 28
CNSTI4 1500
ASGNI4
ADDRGP4 $388
JUMPV
LABELV $394
line 679
;679:			  case WP_RAILGUN: max = 10; inc = 1; t = 1750; break;
ADDRLP4 32
CNSTI4 10
ASGNI4
ADDRLP4 40
CNSTI4 1
ASGNI4
ADDRLP4 28
CNSTI4 1750
ASGNI4
ADDRGP4 $388
JUMPV
LABELV $395
line 680
;680:			  case WP_PLASMAGUN: max = 50; inc = 5; t = 1500; break;
ADDRLP4 32
CNSTI4 50
ASGNI4
ADDRLP4 40
CNSTI4 5
ASGNI4
ADDRLP4 28
CNSTI4 1500
ASGNI4
ADDRGP4 $388
JUMPV
LABELV $396
line 681
;681:			  case WP_BFG: max = 10; inc = 1; t = 4000; break;
ADDRLP4 32
CNSTI4 10
ASGNI4
ADDRLP4 40
CNSTI4 1
ASGNI4
ADDRLP4 28
CNSTI4 4000
ASGNI4
ADDRGP4 $388
JUMPV
LABELV $397
line 682
;682:			  case WP_NAILGUN: max = 10; inc = 1; t = 1250; break;
ADDRLP4 32
CNSTI4 10
ASGNI4
ADDRLP4 40
CNSTI4 1
ASGNI4
ADDRLP4 28
CNSTI4 1250
ASGNI4
ADDRGP4 $388
JUMPV
LABELV $398
line 683
;683:			  case WP_PROX_LAUNCHER: max = 5; inc = 1; t = 2000; break;
ADDRLP4 32
CNSTI4 5
ASGNI4
ADDRLP4 40
CNSTI4 1
ASGNI4
ADDRLP4 28
CNSTI4 2000
ASGNI4
ADDRGP4 $388
JUMPV
LABELV $399
line 684
;684:			  case WP_CHAINGUN: max = 100; inc = 5; t = 1000; break;
ADDRLP4 32
CNSTI4 100
ASGNI4
ADDRLP4 40
CNSTI4 5
ASGNI4
ADDRLP4 28
CNSTI4 1000
ASGNI4
ADDRGP4 $388
JUMPV
LABELV $400
line 685
;685:			  case WP_FLAMETHROWER: max = 100; inc = 5; t = 1000; break;
ADDRLP4 32
CNSTI4 100
ASGNI4
ADDRLP4 40
CNSTI4 5
ASGNI4
ADDRLP4 28
CNSTI4 1000
ASGNI4
ADDRGP4 $388
JUMPV
LABELV $401
line 686
;686:			  case WP_ANTIMATTER: max = 5; inc = 1; t = 4000; break;
ADDRLP4 32
CNSTI4 5
ASGNI4
ADDRLP4 40
CNSTI4 1
ASGNI4
ADDRLP4 28
CNSTI4 4000
ASGNI4
ADDRGP4 $388
JUMPV
LABELV $387
line 687
;687:			  default: max = 0; inc = 0; t = 1000; break;
ADDRLP4 32
CNSTI4 0
ASGNI4
ADDRLP4 40
CNSTI4 0
ASGNI4
ADDRLP4 28
CNSTI4 1000
ASGNI4
LABELV $388
line 689
;688:		  }
;689:		  client->ammoTimes[w] += msec;
ADDRLP4 108
ADDRLP4 24
INDIRI4
CNSTI4 2
LSHI4
ADDRLP4 0
INDIRP4
CNSTI4 1368
ADDP4
ADDP4
ASGNP4
ADDRLP4 108
INDIRP4
ADDRLP4 108
INDIRP4
INDIRI4
ADDRFP4 4
INDIRI4
ADDI4
ASGNI4
line 690
;690:		  if (g_ammoregen_infammo.integer == 1) {
ADDRGP4 g_ammoregen_infammo+12
INDIRI4
CNSTI4 1
NEI4 $404
line 691
;691:			  max = 9999;
ADDRLP4 32
CNSTI4 9999
ASGNI4
line 692
;692:			  inc = 9999;
ADDRLP4 40
CNSTI4 9999
ASGNI4
line 693
;693:			  t = 1;
ADDRLP4 28
CNSTI4 1
ASGNI4
line 694
;694:		  }
LABELV $404
line 696
;695:
;696:		  if ( client->ps.ammo[w] >= max ) {
ADDRLP4 24
INDIRI4
CNSTI4 2
LSHI4
ADDRLP4 0
INDIRP4
CNSTI4 376
ADDP4
ADDP4
INDIRI4
ADDRLP4 32
INDIRI4
LTI4 $407
line 697
;697:			  client->ammoTimes[w] = 0;
ADDRLP4 24
INDIRI4
CNSTI4 2
LSHI4
ADDRLP4 0
INDIRP4
CNSTI4 1368
ADDP4
ADDP4
CNSTI4 0
ASGNI4
line 698
;698:		  }
LABELV $407
line 699
;699:		  if ( client->ammoTimes[w] >= t ) {
ADDRLP4 24
INDIRI4
CNSTI4 2
LSHI4
ADDRLP4 0
INDIRP4
CNSTI4 1368
ADDP4
ADDP4
INDIRI4
ADDRLP4 28
INDIRI4
LTI4 $409
ADDRGP4 $412
JUMPV
LABELV $411
line 701
;700:			  while ( client->ammoTimes[w] >= t )
;701:				  client->ammoTimes[w] -= t;
ADDRLP4 112
ADDRLP4 24
INDIRI4
CNSTI4 2
LSHI4
ADDRLP4 0
INDIRP4
CNSTI4 1368
ADDP4
ADDP4
ASGNP4
ADDRLP4 112
INDIRP4
ADDRLP4 112
INDIRP4
INDIRI4
ADDRLP4 28
INDIRI4
SUBI4
ASGNI4
LABELV $412
line 700
ADDRLP4 24
INDIRI4
CNSTI4 2
LSHI4
ADDRLP4 0
INDIRP4
CNSTI4 1368
ADDP4
ADDP4
INDIRI4
ADDRLP4 28
INDIRI4
GEI4 $411
line 702
;702:			  client->ps.ammo[w] += inc;
ADDRLP4 116
ADDRLP4 24
INDIRI4
CNSTI4 2
LSHI4
ADDRLP4 0
INDIRP4
CNSTI4 376
ADDP4
ADDP4
ASGNP4
ADDRLP4 116
INDIRP4
ADDRLP4 116
INDIRP4
INDIRI4
ADDRLP4 40
INDIRI4
ADDI4
ASGNI4
line 703
;703:			  if ( client->ps.ammo[w] > max ) {
ADDRLP4 24
INDIRI4
CNSTI4 2
LSHI4
ADDRLP4 0
INDIRP4
CNSTI4 376
ADDP4
ADDP4
INDIRI4
ADDRLP4 32
INDIRI4
LEI4 $414
line 704
;704:				  client->ps.ammo[w] = max;
ADDRLP4 24
INDIRI4
CNSTI4 2
LSHI4
ADDRLP4 0
INDIRP4
CNSTI4 376
ADDP4
ADDP4
ADDRLP4 32
INDIRI4
ASGNI4
line 705
;705:			  }
LABELV $414
line 706
;706:		  }
LABELV $409
line 707
;707:    }
LABELV $384
line 670
ADDRLP4 36
ADDRLP4 36
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $386
ADDRLP4 36
INDIRI4
ADDRLP4 96
INDIRI4
LTI4 $383
line 708
;708:	}
LABELV $379
line 709
;709:}
LABELV $257
endproc ClientTimerActions 120 32
export ClientIntermissionThink
proc ClientIntermissionThink 24 0
line 716
;710:
;711:/*
;712:====================
;713:ClientIntermissionThink
;714:====================
;715:*/
;716:void ClientIntermissionThink( gclient_t *client ) {
line 717
;717:	client->ps.eFlags &= ~EF_TALK;
ADDRLP4 0
ADDRFP4 0
INDIRP4
CNSTI4 104
ADDP4
ASGNP4
ADDRLP4 0
INDIRP4
ADDRLP4 0
INDIRP4
INDIRI4
CNSTI4 -4097
BANDI4
ASGNI4
line 718
;718:	client->ps.eFlags &= ~EF_FIRING;
ADDRLP4 4
ADDRFP4 0
INDIRP4
CNSTI4 104
ADDP4
ASGNP4
ADDRLP4 4
INDIRP4
ADDRLP4 4
INDIRP4
INDIRI4
CNSTI4 -257
BANDI4
ASGNI4
line 722
;719:
;720:	// the level will exit when everyone wants to or after timeouts
;721:
;722:        if( g_entities[client->ps.clientNum].r.svFlags & SVF_BOT )
CNSTI4 2492
ADDRFP4 0
INDIRP4
CNSTI4 140
ADDP4
INDIRI4
MULI4
ADDRGP4 g_entities+228+236
ADDP4
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
EQI4 $417
line 723
;723:            return; //Bots cannot mark themself as ready
ADDRGP4 $416
JUMPV
LABELV $417
line 726
;724:
;725:	// swap and latch button actions
;726:	client->oldbuttons = client->buttons;
ADDRLP4 8
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 8
INDIRP4
CNSTI4 1240
ADDP4
ADDRLP4 8
INDIRP4
CNSTI4 1236
ADDP4
INDIRI4
ASGNI4
line 727
;727:	client->buttons = client->pers.cmd.buttons;
ADDRLP4 12
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 12
INDIRP4
CNSTI4 1236
ADDP4
ADDRLP4 12
INDIRP4
CNSTI4 492
ADDP4
INDIRI4
ASGNI4
line 728
;728:	if ( client->buttons & ( BUTTON_ATTACK | BUTTON_USE_HOLDABLE ) & ( client->oldbuttons ^ client->buttons ) ) {
ADDRLP4 16
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 20
ADDRLP4 16
INDIRP4
CNSTI4 1236
ADDP4
INDIRI4
ASGNI4
ADDRLP4 20
INDIRI4
CNSTI4 5
BANDI4
ADDRLP4 16
INDIRP4
CNSTI4 1240
ADDP4
INDIRI4
ADDRLP4 20
INDIRI4
BXORI4
BANDI4
CNSTI4 0
EQI4 $421
line 730
;729:		// this used to be an ^1 but once a player says ready, it should stick
;730:		client->readyToExit = 1;
ADDRFP4 0
INDIRP4
CNSTI4 1228
ADDP4
CNSTI4 1
ASGNI4
line 731
;731:	}
LABELV $421
line 732
;732:}
LABELV $416
endproc ClientIntermissionThink 24 0
export ClientEvents
proc ClientEvents 92 32
line 743
;733:
;734:
;735:/*
;736:================
;737:ClientEvents
;738:
;739:Events will be passed on to the clients for presentation,
;740:but any server game effects are handled here
;741:================
;742:*/
;743:void ClientEvents( gentity_t *ent, int oldEventSequence ) {
line 754
;744:	int		i, j;
;745:	int		event;
;746:	gclient_t *client;
;747:	int		damage;
;748:	vec3_t	dir;
;749:	vec3_t	origin, angles;
;750://	qboolean	fired;
;751:	gitem_t *item;
;752:	gentity_t *drop;
;753:
;754:	client = ent->client;
ADDRLP4 8
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
ASGNP4
line 756
;755:
;756:	if ( oldEventSequence < client->ps.eventSequence - MAX_PS_EVENTS ) {
ADDRFP4 4
INDIRI4
ADDRLP4 8
INDIRP4
CNSTI4 108
ADDP4
INDIRI4
CNSTI4 2
SUBI4
GEI4 $424
line 757
;757:		oldEventSequence = client->ps.eventSequence - MAX_PS_EVENTS;
ADDRFP4 4
ADDRLP4 8
INDIRP4
CNSTI4 108
ADDP4
INDIRI4
CNSTI4 2
SUBI4
ASGNI4
line 758
;758:	}
LABELV $424
line 759
;759:	for ( i = oldEventSequence ; i < client->ps.eventSequence ; i++ ) {
ADDRLP4 0
ADDRFP4 4
INDIRI4
ASGNI4
ADDRGP4 $429
JUMPV
LABELV $426
line 760
;760:		event = client->ps.events[ i & (MAX_PS_EVENTS-1) ];
ADDRLP4 4
ADDRLP4 0
INDIRI4
CNSTI4 1
BANDI4
CNSTI4 2
LSHI4
ADDRLP4 8
INDIRP4
CNSTI4 112
ADDP4
ADDP4
INDIRI4
ASGNI4
line 762
;761:
;762:		switch ( event ) {
ADDRLP4 68
CNSTI4 11
ASGNI4
ADDRLP4 4
INDIRI4
ADDRLP4 68
INDIRI4
EQI4 $432
ADDRLP4 4
INDIRI4
CNSTI4 12
EQI4 $432
ADDRLP4 4
INDIRI4
ADDRLP4 68
INDIRI4
LTI4 $431
LABELV $493
ADDRLP4 4
INDIRI4
CNSTI4 23
LTI4 $431
ADDRLP4 4
INDIRI4
CNSTI4 29
GTI4 $431
ADDRLP4 4
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 $494-92
ADDP4
INDIRP4
JUMPV
lit
align 4
LABELV $494
address $445
address $431
address $446
address $484
address $486
address $487
address $490
code
LABELV $432
line 765
;763:		case EV_FALL_MEDIUM:
;764:		case EV_FALL_FAR:
;765:			if ( ent->s.eType != ET_PLAYER ) {
ADDRFP4 0
INDIRP4
CNSTI4 4
ADDP4
INDIRI4
CNSTI4 1
EQI4 $433
line 766
;766:				break;		// not in the player model
ADDRGP4 $431
JUMPV
LABELV $433
line 768
;767:			}
;768:			if ( g_dmflags.integer & DF_NO_FALLING ) {
ADDRGP4 g_dmflags+12
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
EQI4 $435
line 769
;769:				break;
ADDRGP4 $431
JUMPV
LABELV $435
line 771
;770:			}
;771:			if ( event == EV_FALL_FAR ) {
ADDRLP4 4
INDIRI4
CNSTI4 12
NEI4 $438
line 772
;772:				damage = g_falldamagebig.integer;
ADDRLP4 36
ADDRGP4 g_falldamagebig+12
INDIRI4
ASGNI4
line 773
;773:			} else {
ADDRGP4 $439
JUMPV
LABELV $438
line 774
;774:				damage = g_falldamagesmall.integer;
ADDRLP4 36
ADDRGP4 g_falldamagesmall+12
INDIRI4
ASGNI4
line 775
;775:			}
LABELV $439
line 776
;776:			VectorSet (dir, 0, 0, 1);
ADDRLP4 76
CNSTF4 0
ASGNF4
ADDRLP4 24
ADDRLP4 76
INDIRF4
ASGNF4
ADDRLP4 24+4
ADDRLP4 76
INDIRF4
ASGNF4
ADDRLP4 24+8
CNSTF4 1065353216
ASGNF4
line 777
;777:			ent->pain_debounce_time = level.time + 200;	// no normal pain sound
ADDRFP4 0
INDIRP4
CNSTI4 796
ADDP4
ADDRGP4 level+32
INDIRI4
CNSTI4 200
ADDI4
ASGNI4
line 778
;778:			G_Damage (ent, NULL, NULL, NULL, NULL, damage, 0, MOD_FALLING);
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 80
CNSTP4 0
ASGNP4
ADDRLP4 80
INDIRP4
ARGP4
ADDRLP4 80
INDIRP4
ARGP4
ADDRLP4 84
CNSTP4 0
ASGNP4
ADDRLP4 84
INDIRP4
ARGP4
ADDRLP4 84
INDIRP4
ARGP4
ADDRLP4 36
INDIRI4
ARGI4
CNSTI4 0
ARGI4
CNSTI4 24
ARGI4
ADDRGP4 G_Damage
CALLV
pop
line 779
;779:			break;
ADDRGP4 $431
JUMPV
LABELV $445
line 782
;780:
;781:		case EV_FIRE_WEAPON:
;782:			FireWeapon( ent );
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 FireWeapon
CALLV
pop
line 783
;783:			break;
ADDRGP4 $431
JUMPV
LABELV $446
line 787
;784:
;785:		case EV_USE_ITEM1:		// teleporter
;786:			// drop flags in CTF
;787:			item = NULL;
ADDRLP4 16
CNSTP4 0
ASGNP4
line 788
;788:			j = 0;
ADDRLP4 12
CNSTI4 0
ASGNI4
line 790
;789:
;790:			if ( ent->client->ps.powerups[ PW_REDFLAG ] ) {
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 340
ADDP4
INDIRI4
CNSTI4 0
EQI4 $447
line 791
;791:				item = BG_FindItemForPowerup( PW_REDFLAG );
CNSTI4 7
ARGI4
ADDRLP4 88
ADDRGP4 BG_FindItemForPowerup
CALLP4
ASGNP4
ADDRLP4 16
ADDRLP4 88
INDIRP4
ASGNP4
line 792
;792:				j = PW_REDFLAG;
ADDRLP4 12
CNSTI4 7
ASGNI4
line 793
;793:			} else if ( ent->client->ps.powerups[ PW_BLUEFLAG ] ) {
ADDRGP4 $448
JUMPV
LABELV $447
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 344
ADDP4
INDIRI4
CNSTI4 0
EQI4 $449
line 794
;794:				item = BG_FindItemForPowerup( PW_BLUEFLAG );
CNSTI4 8
ARGI4
ADDRLP4 88
ADDRGP4 BG_FindItemForPowerup
CALLP4
ASGNP4
ADDRLP4 16
ADDRLP4 88
INDIRP4
ASGNP4
line 795
;795:				j = PW_BLUEFLAG;
ADDRLP4 12
CNSTI4 8
ASGNI4
line 796
;796:			} else if ( ent->client->ps.powerups[ PW_NEUTRALFLAG ] ) {
ADDRGP4 $450
JUMPV
LABELV $449
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 348
ADDP4
INDIRI4
CNSTI4 0
EQI4 $451
line 797
;797:				item = BG_FindItemForPowerup( PW_NEUTRALFLAG );
CNSTI4 9
ARGI4
ADDRLP4 88
ADDRGP4 BG_FindItemForPowerup
CALLP4
ASGNP4
ADDRLP4 16
ADDRLP4 88
INDIRP4
ASGNP4
line 798
;798:				j = PW_NEUTRALFLAG;
ADDRLP4 12
CNSTI4 9
ASGNI4
line 799
;799:			}
LABELV $451
LABELV $450
LABELV $448
line 801
;800:
;801:			if ( item ) {
ADDRLP4 16
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $453
line 802
;802:				drop = Drop_Item( ent, item, 0 );
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 16
INDIRP4
ARGP4
CNSTF4 0
ARGF4
ADDRLP4 88
ADDRGP4 Drop_Item
CALLP4
ASGNP4
ADDRLP4 20
ADDRLP4 88
INDIRP4
ASGNP4
line 804
;803:				// decide how many seconds it has left
;804:				drop->count = ( ent->client->ps.powerups[ j ] - level.time ) / 1000;
ADDRLP4 20
INDIRP4
CNSTI4 944
ADDP4
ADDRLP4 12
INDIRI4
CNSTI4 2
LSHI4
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 312
ADDP4
ADDP4
INDIRI4
ADDRGP4 level+32
INDIRI4
SUBI4
CNSTI4 1000
DIVI4
ASGNI4
line 805
;805:				if ( drop->count < 1 ) {
ADDRLP4 20
INDIRP4
CNSTI4 944
ADDP4
INDIRI4
CNSTI4 1
GEI4 $456
line 806
;806:					drop->count = 1;
ADDRLP4 20
INDIRP4
CNSTI4 944
ADDP4
CNSTI4 1
ASGNI4
line 807
;807:				}
LABELV $456
line 809
;808:
;809:				ent->client->ps.powerups[ j ] = 0;
ADDRLP4 12
INDIRI4
CNSTI4 2
LSHI4
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 312
ADDP4
ADDP4
CNSTI4 0
ASGNI4
line 810
;810:			}
LABELV $453
line 812
;811:
;812:			if ( g_gametype.integer == GT_HARVESTER ) {
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 8
NEI4 $458
line 813
;813:				if ( ent->client->ps.generic1 > 0 ) {
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 440
ADDP4
INDIRI4
CNSTI4 0
LEI4 $461
line 814
;814:					if ( ent->client->sess.sessionTeam == TEAM_RED ) {
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 1032
ADDP4
INDIRI4
CNSTI4 1
NEI4 $463
line 815
;815:						item = BG_FindItem( "Blue Cube" );
ADDRGP4 $465
ARGP4
ADDRLP4 88
ADDRGP4 BG_FindItem
CALLP4
ASGNP4
ADDRLP4 16
ADDRLP4 88
INDIRP4
ASGNP4
line 816
;816:					} else {
ADDRGP4 $464
JUMPV
LABELV $463
line 817
;817:						item = BG_FindItem( "Red Cube" );
ADDRGP4 $466
ARGP4
ADDRLP4 88
ADDRGP4 BG_FindItem
CALLP4
ASGNP4
ADDRLP4 16
ADDRLP4 88
INDIRP4
ASGNP4
line 818
;818:					}
LABELV $464
line 819
;819:					if ( item ) {
ADDRLP4 16
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $467
line 820
;820:						for ( j = 0; j < ent->client->ps.generic1; j++ ) {
ADDRLP4 12
CNSTI4 0
ASGNI4
ADDRGP4 $472
JUMPV
LABELV $469
line 821
;821:							drop = Drop_Item( ent, item, 0 );
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 16
INDIRP4
ARGP4
CNSTF4 0
ARGF4
ADDRLP4 88
ADDRGP4 Drop_Item
CALLP4
ASGNP4
ADDRLP4 20
ADDRLP4 88
INDIRP4
ASGNP4
line 822
;822:							if ( ent->client->sess.sessionTeam == TEAM_RED ) {
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 1032
ADDP4
INDIRI4
CNSTI4 1
NEI4 $473
line 823
;823:								drop->spawnflags = TEAM_BLUE;
ADDRLP4 20
INDIRP4
CNSTI4 568
ADDP4
CNSTI4 2
ASGNI4
line 824
;824:							} else {
ADDRGP4 $474
JUMPV
LABELV $473
line 825
;825:								drop->spawnflags = TEAM_RED;
ADDRLP4 20
INDIRP4
CNSTI4 568
ADDP4
CNSTI4 1
ASGNI4
line 826
;826:							}
LABELV $474
line 827
;827:						}
LABELV $470
line 820
ADDRLP4 12
ADDRLP4 12
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $472
ADDRLP4 12
INDIRI4
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 440
ADDP4
INDIRI4
LTI4 $469
line 828
;828:					}
LABELV $467
line 829
;829:					ent->client->ps.generic1 = 0;
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 440
ADDP4
CNSTI4 0
ASGNI4
line 830
;830:				}
LABELV $461
line 831
;831:			}
LABELV $458
line 832
;832:			if ( ent->teleporterTarget ) {
ADDRFP4 0
INDIRP4
CNSTI4 1072
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $475
line 833
;833:				FindTeleporterTarget( ent, origin, angles );
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 40
ARGP4
ADDRLP4 52
ARGP4
ADDRGP4 FindTeleporterTarget
CALLI4
pop
line 834
;834:				ent->teleporterTarget = NULL;		//reset the teleporter target again
ADDRFP4 0
INDIRP4
CNSTI4 1072
ADDP4
CNSTP4 0
ASGNP4
line 835
;835:			}
ADDRGP4 $431
JUMPV
LABELV $475
line 838
;836:			else
;837:				
;838:			if (g_gametype.integer == GT_DOUBLE_D) {
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 12
NEI4 $477
line 839
;839:			SelectDoubleDominationSpawnPoint (ent->client->sess.sessionTeam, origin, angles);
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 1032
ADDP4
INDIRI4
ARGI4
ADDRLP4 40
ARGP4
ADDRLP4 52
ARGP4
ADDRGP4 SelectDoubleDominationSpawnPoint
CALLP4
pop
line 840
;840:			TeleportPlayer( ent, origin, angles );
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 40
ARGP4
ADDRLP4 52
ARGP4
ADDRGP4 TeleportPlayer
CALLV
pop
line 841
;841:			} else if (g_gametype.integer >= GT_CTF && g_ffa_gt==0 && g_gametype.integer!= GT_DOMINATION) {
ADDRGP4 $431
JUMPV
LABELV $477
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 5
LTI4 $480
ADDRGP4 g_ffa_gt
INDIRI4
CNSTI4 0
NEI4 $480
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 13
EQI4 $480
line 842
;842:			SelectCTFSpawnPoint ( ent->client->sess.sessionTeam, ent->client->pers.teamState.state, origin, angles);
ADDRLP4 88
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
ASGNP4
ADDRLP4 88
INDIRP4
CNSTI4 1032
ADDP4
INDIRI4
ARGI4
ADDRLP4 88
INDIRP4
CNSTI4 560
ADDP4
INDIRI4
ARGI4
ADDRLP4 40
ARGP4
ADDRLP4 52
ARGP4
ADDRGP4 SelectCTFSpawnPoint
CALLP4
pop
line 843
;843:			TeleportPlayer( ent, origin, angles );
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 40
ARGP4
ADDRLP4 52
ARGP4
ADDRGP4 TeleportPlayer
CALLV
pop
line 844
;844:			} else {
ADDRGP4 $431
JUMPV
LABELV $480
line 845
;845:			SelectSpawnPoint( ent->client->ps.origin, origin, angles );
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 20
ADDP4
ARGP4
ADDRLP4 40
ARGP4
ADDRLP4 52
ARGP4
ADDRGP4 SelectSpawnPoint
CALLP4
pop
line 846
;846:			TeleportPlayer( ent, origin, angles );
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 40
ARGP4
ADDRLP4 52
ARGP4
ADDRGP4 TeleportPlayer
CALLV
pop
line 847
;847:			}
line 848
;848:			break;
ADDRGP4 $431
JUMPV
LABELV $484
line 851
;849:
;850:		case EV_USE_ITEM2:		// medkit
;851:			ent->health += g_medkitmodifier.integer;
ADDRLP4 88
ADDRFP4 0
INDIRP4
CNSTI4 808
ADDP4
ASGNP4
ADDRLP4 88
INDIRP4
ADDRLP4 88
INDIRP4
INDIRI4
ADDRGP4 g_medkitmodifier+12
INDIRI4
ADDI4
ASGNI4
line 853
;852:
;853:			break;
ADDRGP4 $431
JUMPV
LABELV $486
line 857
;854:
;855:		case EV_USE_ITEM3:		// kamikaze
;856:			// make sure the invulnerability is off
;857:			ent->client->invulnerabilityTime = 0;
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 1432
ADDP4
CNSTI4 0
ASGNI4
line 859
;858:			// start the kamikze
;859:			G_StartKamikaze( ent );
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 G_StartKamikaze
CALLV
pop
line 860
;860:			break;
ADDRGP4 $431
JUMPV
LABELV $487
line 863
;861:
;862:		case EV_USE_ITEM4:		// portal
;863:			if( ent->client->portalID ) {
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 1364
ADDP4
INDIRI4
CNSTI4 0
EQI4 $488
line 864
;864:				DropPortalSource( ent );
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 DropPortalSource
CALLV
pop
line 865
;865:			}
ADDRGP4 $431
JUMPV
LABELV $488
line 866
;866:			else {
line 867
;867:				DropPortalDestination( ent );
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 DropPortalDestination
CALLV
pop
line 868
;868:			}
line 869
;869:			break;
ADDRGP4 $431
JUMPV
LABELV $490
line 871
;870:		case EV_USE_ITEM5:		// invulnerability
;871:			ent->client->invulnerabilityTime = level.time + g_invultime.integer*1000;
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 1432
ADDP4
ADDRGP4 level+32
INDIRI4
CNSTI4 1000
ADDRGP4 g_invultime+12
INDIRI4
MULI4
ADDI4
ASGNI4
line 872
;872:			break;
line 875
;873:
;874:		default:
;875:			break;
LABELV $431
line 877
;876:		}
;877:	}
LABELV $427
line 759
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $429
ADDRLP4 0
INDIRI4
ADDRLP4 8
INDIRP4
CNSTI4 108
ADDP4
INDIRI4
LTI4 $426
line 879
;878:
;879:}
LABELV $423
endproc ClientEvents 92 32
proc StuckInOtherClient 8 0
line 886
;880:
;881:/*
;882:==============
;883:StuckInOtherClient
;884:==============
;885:*/
;886:static int StuckInOtherClient(gentity_t *ent) {
line 890
;887:	int i;
;888:	gentity_t	*ent2;
;889:
;890:	ent2 = &g_entities[0];
ADDRLP4 0
ADDRGP4 g_entities
ASGNP4
line 891
;891:	for ( i = 0; i < MAX_CLIENTS; i++, ent2++ ) {
ADDRLP4 4
CNSTI4 0
ASGNI4
LABELV $497
line 892
;892:		if ( ent2 == ent ) {
ADDRLP4 0
INDIRP4
CVPU4 4
ADDRFP4 0
INDIRP4
CVPU4 4
NEU4 $501
line 893
;893:			continue;
ADDRGP4 $498
JUMPV
LABELV $501
line 895
;894:		}
;895:		if ( !ent2->inuse ) {
ADDRLP4 0
INDIRP4
CNSTI4 560
ADDP4
INDIRI4
CNSTI4 0
NEI4 $503
line 896
;896:			continue;
ADDRGP4 $498
JUMPV
LABELV $503
line 898
;897:		}
;898:		if ( !ent2->client ) {
ADDRLP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $505
line 899
;899:			continue;
ADDRGP4 $498
JUMPV
LABELV $505
line 901
;900:		}
;901:		if ( ent2->health <= 0 ) {
ADDRLP4 0
INDIRP4
CNSTI4 808
ADDP4
INDIRI4
CNSTI4 0
GTI4 $507
line 902
;902:			continue;
ADDRGP4 $498
JUMPV
LABELV $507
line 905
;903:		}
;904:		//
;905:		if (ent2->r.absmin[0] > ent->r.absmax[0])
ADDRLP4 0
INDIRP4
CNSTI4 504
ADDP4
INDIRF4
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRF4
LEF4 $509
line 906
;906:			continue;
ADDRGP4 $498
JUMPV
LABELV $509
line 907
;907:		if (ent2->r.absmin[1] > ent->r.absmax[1])
ADDRLP4 0
INDIRP4
CNSTI4 508
ADDP4
INDIRF4
ADDRFP4 0
INDIRP4
CNSTI4 520
ADDP4
INDIRF4
LEF4 $511
line 908
;908:			continue;
ADDRGP4 $498
JUMPV
LABELV $511
line 909
;909:		if (ent2->r.absmin[2] > ent->r.absmax[2])
ADDRLP4 0
INDIRP4
CNSTI4 512
ADDP4
INDIRF4
ADDRFP4 0
INDIRP4
CNSTI4 524
ADDP4
INDIRF4
LEF4 $513
line 910
;910:			continue;
ADDRGP4 $498
JUMPV
LABELV $513
line 911
;911:		if (ent2->r.absmax[0] < ent->r.absmin[0])
ADDRLP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRF4
ADDRFP4 0
INDIRP4
CNSTI4 504
ADDP4
INDIRF4
GEF4 $515
line 912
;912:			continue;
ADDRGP4 $498
JUMPV
LABELV $515
line 913
;913:		if (ent2->r.absmax[1] < ent->r.absmin[1])
ADDRLP4 0
INDIRP4
CNSTI4 520
ADDP4
INDIRF4
ADDRFP4 0
INDIRP4
CNSTI4 508
ADDP4
INDIRF4
GEF4 $517
line 914
;914:			continue;
ADDRGP4 $498
JUMPV
LABELV $517
line 915
;915:		if (ent2->r.absmax[2] < ent->r.absmin[2])
ADDRLP4 0
INDIRP4
CNSTI4 524
ADDP4
INDIRF4
ADDRFP4 0
INDIRP4
CNSTI4 512
ADDP4
INDIRF4
GEF4 $519
line 916
;916:			continue;
ADDRGP4 $498
JUMPV
LABELV $519
line 917
;917:		return qtrue;
CNSTI4 1
RETI4
ADDRGP4 $496
JUMPV
LABELV $498
line 891
ADDRLP4 4
ADDRLP4 4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 0
ADDRLP4 0
INDIRP4
CNSTI4 2492
ADDP4
ASGNP4
ADDRLP4 4
INDIRI4
CNSTI4 256
LTI4 $497
line 919
;918:	}
;919:	return qfalse;
CNSTI4 0
RETI4
LABELV $496
endproc StuckInOtherClient 8 0
export SendPendingPredictableEvents
proc SendPendingPredictableEvents 40 12
line 929
;920:}
;921:
;922:void BotTestSolid(vec3_t origin);
;923:
;924:/*
;925:==============
;926:SendPendingPredictableEvents
;927:==============
;928:*/
;929:void SendPendingPredictableEvents( playerState_t *ps ) {
line 935
;930:	gentity_t *t;
;931:	int event, seq;
;932:	int extEvent, number;
;933:
;934:	// if there are still events pending
;935:	if ( ps->entityEventSequence < ps->eventSequence ) {
ADDRLP4 20
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 20
INDIRP4
CNSTI4 468
ADDP4
INDIRI4
ADDRLP4 20
INDIRP4
CNSTI4 108
ADDP4
INDIRI4
GEI4 $522
line 938
;936:		// create a temporary entity for this event which is sent to everyone
;937:		// except the client who generated the event
;938:		seq = ps->entityEventSequence & (MAX_PS_EVENTS-1);
ADDRLP4 8
ADDRFP4 0
INDIRP4
CNSTI4 468
ADDP4
INDIRI4
CNSTI4 1
BANDI4
ASGNI4
line 939
;939:		event = ps->events[ seq ] | ( ( ps->entityEventSequence & 3 ) << 8 );
ADDRLP4 24
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 4
ADDRLP4 8
INDIRI4
CNSTI4 2
LSHI4
ADDRLP4 24
INDIRP4
CNSTI4 112
ADDP4
ADDP4
INDIRI4
ADDRLP4 24
INDIRP4
CNSTI4 468
ADDP4
INDIRI4
CNSTI4 3
BANDI4
CNSTI4 8
LSHI4
BORI4
ASGNI4
line 941
;940:		// set external event to zero before calling BG_PlayerStateToEntityState
;941:		extEvent = ps->externalEvent;
ADDRLP4 12
ADDRFP4 0
INDIRP4
CNSTI4 128
ADDP4
INDIRI4
ASGNI4
line 942
;942:		ps->externalEvent = 0;
ADDRFP4 0
INDIRP4
CNSTI4 128
ADDP4
CNSTI4 0
ASGNI4
line 944
;943:		// create temporary entity for event
;944:		t = G_TempEntity( ps->origin, event );
ADDRFP4 0
INDIRP4
CNSTI4 20
ADDP4
ARGP4
ADDRLP4 4
INDIRI4
ARGI4
ADDRLP4 28
ADDRGP4 G_TempEntity
CALLP4
ASGNP4
ADDRLP4 0
ADDRLP4 28
INDIRP4
ASGNP4
line 945
;945:		number = t->s.number;
ADDRLP4 16
ADDRLP4 0
INDIRP4
INDIRI4
ASGNI4
line 946
;946:		BG_PlayerStateToEntityState( ps, &t->s, qtrue );
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
CNSTI4 1
ARGI4
ADDRGP4 BG_PlayerStateToEntityState
CALLV
pop
line 947
;947:		t->s.number = number;
ADDRLP4 0
INDIRP4
ADDRLP4 16
INDIRI4
ASGNI4
line 948
;948:		t->s.eType = ET_EVENTS + event;
ADDRLP4 0
INDIRP4
CNSTI4 4
ADDP4
ADDRLP4 4
INDIRI4
CNSTI4 15
ADDI4
ASGNI4
line 949
;949:		t->s.eFlags |= EF_PLAYER_EVENT;
ADDRLP4 32
ADDRLP4 0
INDIRP4
CNSTI4 8
ADDP4
ASGNP4
ADDRLP4 32
INDIRP4
ADDRLP4 32
INDIRP4
INDIRI4
CNSTI4 16
BORI4
ASGNI4
line 950
;950:		t->s.otherEntityNum = ps->clientNum;
ADDRLP4 0
INDIRP4
CNSTI4 152
ADDP4
ADDRFP4 0
INDIRP4
CNSTI4 140
ADDP4
INDIRI4
ASGNI4
line 952
;951:		// send to everyone except the client who generated the event
;952:		t->r.svFlags |= SVF_NOTSINGLECLIENT;
ADDRLP4 36
ADDRLP4 0
INDIRP4
CNSTI4 464
ADDP4
ASGNP4
ADDRLP4 36
INDIRP4
ADDRLP4 36
INDIRP4
INDIRI4
CNSTI4 2048
BORI4
ASGNI4
line 953
;953:		t->r.singleClient = ps->clientNum;
ADDRLP4 0
INDIRP4
CNSTI4 468
ADDP4
ADDRFP4 0
INDIRP4
CNSTI4 140
ADDP4
INDIRI4
ASGNI4
line 955
;954:		// set back external event
;955:		ps->externalEvent = extEvent;
ADDRFP4 0
INDIRP4
CNSTI4 128
ADDP4
ADDRLP4 12
INDIRI4
ASGNI4
line 956
;956:	}
LABELV $522
line 957
;957:}
LABELV $521
endproc SendPendingPredictableEvents 40 12
export PhysgunHold
proc PhysgunHold 84 12
line 959
;958:
;959:void PhysgunHold(gentity_t *player) {
line 964
;960:	gentity_t *findent;
;961:	vec3_t		end;
;962:	vec3_t		newvelocity;
;963:	
;964:	if(!g_allowphysgun.integer){
ADDRGP4 g_allowphysgun+12
INDIRI4
CNSTI4 0
NEI4 $525
line 965
;965:		return; 
ADDRGP4 $524
JUMPV
LABELV $525
line 968
;966:	}
;967:
;968:	if (player->client->ps.weapon == WP_GRAVITYGUN){
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 144
ADDP4
INDIRI4
CNSTI4 18
NEI4 $528
line 969
;969:		return; 
ADDRGP4 $524
JUMPV
LABELV $528
line 972
;970:	}
;971:	
;972:    if (player->client->ps.weapon == WP_PHYSGUN && player->client->buttons & BUTTON_ATTACK && player->client->ps.stats[STAT_HEALTH] && player->client->ps.pm_type != PM_DEAD) {
ADDRLP4 28
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
ASGNP4
ADDRLP4 28
INDIRP4
CNSTI4 144
ADDP4
INDIRI4
CNSTI4 17
NEI4 $530
ADDRLP4 32
CNSTI4 0
ASGNI4
ADDRLP4 28
INDIRP4
CNSTI4 1236
ADDP4
INDIRI4
CNSTI4 1
BANDI4
ADDRLP4 32
INDIRI4
EQI4 $530
ADDRLP4 28
INDIRP4
CNSTI4 184
ADDP4
INDIRI4
ADDRLP4 32
INDIRI4
EQI4 $530
ADDRLP4 28
INDIRP4
CNSTI4 4
ADDP4
INDIRI4
CNSTI4 3
EQI4 $530
line 973
;973:        if (!player->grabbedEntity) {
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $532
line 974
;974:            findent = FindEntityForPhysgun(player, PHYSGUN_RANGE);
ADDRFP4 0
INDIRP4
ARGP4
CNSTI4 4096
ARGI4
ADDRLP4 36
ADDRGP4 FindEntityForPhysgun
CALLP4
ASGNP4
ADDRLP4 24
ADDRLP4 36
INDIRP4
ASGNP4
line 975
;975:			if(findent && findent->isGrabbed == qfalse ){
ADDRLP4 40
ADDRLP4 24
INDIRP4
ASGNP4
ADDRLP4 40
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $534
ADDRLP4 40
INDIRP4
CNSTI4 2452
ADDP4
INDIRI4
CNSTI4 0
NEI4 $534
line 976
;976:			if(findent->owner != player->s.clientNum + 1){
ADDRLP4 24
INDIRP4
CNSTI4 820
ADDP4
INDIRI4
ADDRFP4 0
INDIRP4
CNSTI4 180
ADDP4
INDIRI4
CNSTI4 1
ADDI4
EQI4 $536
line 977
;977:				if(findent->owner != 0){
ADDRLP4 24
INDIRP4
CNSTI4 820
ADDP4
INDIRI4
CNSTI4 0
EQI4 $538
line 978
;978:					trap_SendServerCommand( player->s.clientNum, va( "cp \"Owned by %s\n\"", findent->ownername ));
ADDRGP4 $540
ARGP4
ADDRLP4 24
INDIRP4
CNSTI4 828
ADDP4
INDIRP4
ARGP4
ADDRLP4 44
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CNSTI4 180
ADDP4
INDIRI4
ARGI4
ADDRLP4 44
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 979
;979:					return;
ADDRGP4 $524
JUMPV
LABELV $538
line 981
;980:				}	
;981:			}
LABELV $536
line 982
;982:			if(!findent->client){
ADDRLP4 24
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $541
line 983
;983:			player->grabbedEntity = findent;
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
ADDRLP4 24
INDIRP4
ASGNP4
line 984
;984:			} else if (findent->singlebot) {
ADDRGP4 $542
JUMPV
LABELV $541
ADDRLP4 24
INDIRP4
CNSTI4 1028
ADDP4
INDIRI4
CNSTI4 0
EQI4 $543
line 985
;985:			player->grabbedEntity = findent;
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
ADDRLP4 24
INDIRP4
ASGNP4
line 986
;986:			}
LABELV $543
LABELV $542
line 987
;987:			}
LABELV $534
line 988
;988:            if (player->grabbedEntity) {
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $531
line 989
;989:                player->grabbedEntity->isGrabbed = qtrue;
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 2452
ADDP4
CNSTI4 1
ASGNI4
line 990
;990:				if(!player->grabbedEntity->client){
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $531
line 991
;991:				player->grabbedEntity->grabNewPhys = 2;
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 2484
ADDP4
CNSTI4 2
ASGNI4
line 992
;992:				player->grabbedEntity->s.pos.trType = TR_GRAVITY;
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 12
ADDP4
CNSTI4 5
ASGNI4
line 993
;993:				player->grabbedEntity->physicsObject = qtrue;
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 604
ADDP4
CNSTI4 1
ASGNI4
line 994
;994:				player->grabbedEntity->sb_phys = 2;
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 888
ADDP4
CNSTI4 2
ASGNI4
line 995
;995:				G_EnablePropPhysics(player->grabbedEntity);
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
ARGP4
ADDRGP4 G_EnablePropPhysics
CALLI4
pop
line 996
;996:				}
line 997
;997:            }
line 998
;998:        } else {
ADDRGP4 $531
JUMPV
LABELV $532
line 999
;999:			trap_UnlinkEntity( player->grabbedEntity );			//Unlink entity for check coll for other props
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
ARGP4
ADDRGP4 trap_UnlinkEntity
CALLV
pop
line 1000
;1000:			CrosshairPointPhys(player, player->grabDist, end);	//player->grabDist set in FindEntityForPhysgun()
ADDRLP4 36
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 36
INDIRP4
ARGP4
ADDRLP4 36
INDIRP4
CNSTI4 2456
ADDP4
INDIRF4
CVFI4 4
ARGI4
ADDRLP4 12
ARGP4
ADDRGP4 CrosshairPointPhys
CALLV
pop
line 1001
;1001:			trap_LinkEntity( player->grabbedEntity );			//Link entity for work prop-flight
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
ARGP4
ADDRGP4 trap_LinkEntity
CALLV
pop
line 1002
;1002:			VectorAdd(end, player->grabOffset, end);			//physgun offset
ADDRLP4 40
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 12
ADDRLP4 12
INDIRF4
ADDRLP4 40
INDIRP4
CNSTI4 2460
ADDP4
INDIRF4
ADDF4
ASGNF4
ADDRLP4 12+4
ADDRLP4 12+4
INDIRF4
ADDRLP4 40
INDIRP4
CNSTI4 2464
ADDP4
INDIRF4
ADDF4
ASGNF4
ADDRLP4 12+8
ADDRLP4 12+8
INDIRF4
ADDRFP4 0
INDIRP4
CNSTI4 2468
ADDP4
INDIRF4
ADDF4
ASGNF4
line 1003
;1003:			VectorCopy(player->grabbedEntity->r.currentOrigin, player->grabbedEntity->grabOldOrigin);	//save old frame for speed apply
ADDRLP4 44
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
ASGNP4
ADDRLP4 44
INDIRP4
CNSTI4 2472
ADDP4
ADDRLP4 44
INDIRP4
CNSTI4 528
ADDP4
INDIRB
ASGNB 12
line 1004
;1004:			player->grabbedEntity->lastPlayer = player;		//for save attacker
ADDRLP4 48
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 48
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 2488
ADDP4
ADDRLP4 48
INDIRP4
ASGNP4
line 1005
;1005:			if(!player->grabbedEntity->client){
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $553
line 1006
;1006:			VectorCopy(end, player->grabbedEntity->s.origin);
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 92
ADDP4
ADDRLP4 12
INDIRB
ASGNB 12
line 1007
;1007:			VectorCopy(end, player->grabbedEntity->s.pos.trBase);
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 24
ADDP4
ADDRLP4 12
INDIRB
ASGNB 12
line 1008
;1008:			VectorCopy(end, player->grabbedEntity->r.currentOrigin);
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 528
ADDP4
ADDRLP4 12
INDIRB
ASGNB 12
line 1009
;1009:			G_EnablePropPhysics(player->grabbedEntity);
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
ARGP4
ADDRGP4 G_EnablePropPhysics
CALLI4
pop
line 1010
;1010:			} else {
ADDRGP4 $554
JUMPV
LABELV $553
line 1011
;1011:			VectorCopy ( end, player->grabbedEntity->client->ps.origin );
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 20
ADDP4
ADDRLP4 12
INDIRB
ASGNB 12
line 1012
;1012:			player->grabbedEntity->client->ps.origin[2] += 1;				//player not stuck
ADDRLP4 52
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 28
ADDP4
ASGNP4
ADDRLP4 52
INDIRP4
ADDRLP4 52
INDIRP4
INDIRF4
CNSTF4 1065353216
ADDF4
ASGNF4
line 1013
;1013:			VectorCopy( player->grabbedEntity->client->ps.origin, player->grabbedEntity->r.currentOrigin );
ADDRLP4 56
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
ASGNP4
ADDRLP4 56
INDIRP4
CNSTI4 528
ADDP4
ADDRLP4 56
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 20
ADDP4
INDIRB
ASGNB 12
line 1014
;1014:			}
LABELV $554
line 1015
;1015:			VectorSubtract(player->grabbedEntity->r.currentOrigin, player->grabbedEntity->grabOldOrigin, newvelocity);		//calc speed with old frame
ADDRLP4 52
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
ASGNP4
ADDRLP4 56
ADDRLP4 52
INDIRP4
INDIRP4
ASGNP4
ADDRLP4 0
ADDRLP4 56
INDIRP4
CNSTI4 528
ADDP4
INDIRF4
ADDRLP4 56
INDIRP4
CNSTI4 2472
ADDP4
INDIRF4
SUBF4
ASGNF4
ADDRLP4 60
ADDRLP4 52
INDIRP4
INDIRP4
ASGNP4
ADDRLP4 0+4
ADDRLP4 60
INDIRP4
CNSTI4 532
ADDP4
INDIRF4
ADDRLP4 60
INDIRP4
CNSTI4 2476
ADDP4
INDIRF4
SUBF4
ASGNF4
ADDRLP4 64
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
ASGNP4
ADDRLP4 0+8
ADDRLP4 64
INDIRP4
CNSTI4 536
ADDP4
INDIRF4
ADDRLP4 64
INDIRP4
CNSTI4 2480
ADDP4
INDIRF4
SUBF4
ASGNF4
line 1016
;1016:			if(!player->grabbedEntity->client){
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $557
line 1017
;1017:			VectorScale(newvelocity, 45, newvelocity);																		//vector sens
ADDRLP4 68
CNSTF4 1110704128
ASGNF4
ADDRLP4 0
ADDRLP4 68
INDIRF4
ADDRLP4 0
INDIRF4
MULF4
ASGNF4
ADDRLP4 0+4
ADDRLP4 68
INDIRF4
ADDRLP4 0+4
INDIRF4
MULF4
ASGNF4
ADDRLP4 0+8
CNSTF4 1110704128
ADDRLP4 0+8
INDIRF4
MULF4
ASGNF4
line 1018
;1018:			VectorAdd(player->grabbedEntity->s.pos.trDelta, newvelocity, player->grabbedEntity->s.pos.trDelta);				//apply new speed
ADDRLP4 72
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 36
ADDP4
ASGNP4
ADDRLP4 72
INDIRP4
ADDRLP4 72
INDIRP4
INDIRF4
ADDRLP4 0
INDIRF4
ADDF4
ASGNF4
ADDRLP4 76
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 40
ADDP4
ASGNP4
ADDRLP4 76
INDIRP4
ADDRLP4 76
INDIRP4
INDIRF4
ADDRLP4 0+4
INDIRF4
ADDF4
ASGNF4
ADDRLP4 80
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 44
ADDP4
ASGNP4
ADDRLP4 80
INDIRP4
ADDRLP4 80
INDIRP4
INDIRF4
ADDRLP4 0+8
INDIRF4
ADDF4
ASGNF4
line 1019
;1019:			} else {
ADDRGP4 $531
JUMPV
LABELV $557
line 1020
;1020:			VectorScale(newvelocity, 5, newvelocity);																		//vector player sens
ADDRLP4 68
CNSTF4 1084227584
ASGNF4
ADDRLP4 0
ADDRLP4 68
INDIRF4
ADDRLP4 0
INDIRF4
MULF4
ASGNF4
ADDRLP4 0+4
ADDRLP4 68
INDIRF4
ADDRLP4 0+4
INDIRF4
MULF4
ASGNF4
ADDRLP4 0+8
CNSTF4 1084227584
ADDRLP4 0+8
INDIRF4
MULF4
ASGNF4
line 1021
;1021:			VectorAdd(player->grabbedEntity->client->ps.velocity, newvelocity, player->grabbedEntity->client->ps.velocity);		//apply new player speed	
ADDRLP4 72
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 32
ADDP4
ASGNP4
ADDRLP4 72
INDIRP4
ADDRLP4 72
INDIRP4
INDIRF4
ADDRLP4 0
INDIRF4
ADDF4
ASGNF4
ADDRLP4 76
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 36
ADDP4
ASGNP4
ADDRLP4 76
INDIRP4
ADDRLP4 76
INDIRP4
INDIRF4
ADDRLP4 0+4
INDIRF4
ADDF4
ASGNF4
ADDRLP4 80
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 40
ADDP4
ASGNP4
ADDRLP4 80
INDIRP4
ADDRLP4 80
INDIRP4
INDIRF4
ADDRLP4 0+8
INDIRF4
ADDF4
ASGNF4
line 1022
;1022:			}
line 1023
;1023:        }
line 1024
;1024:    } else if (player->grabbedEntity) {
ADDRGP4 $531
JUMPV
LABELV $530
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $571
line 1025
;1025:        player->grabbedEntity->isGrabbed = qfalse;				//start
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 2452
ADDP4
CNSTI4 0
ASGNI4
line 1026
;1026:		if(player->grabbedEntity->grabNewPhys == 1){
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 2484
ADDP4
INDIRI4
CNSTI4 1
NEI4 $573
line 1027
;1027:			if(!player->grabbedEntity->client){
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $575
line 1028
;1028:			player->grabbedEntity->s.pos.trType = TR_STATIONARY;	//phys 1 settings
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 12
ADDP4
CNSTI4 0
ASGNI4
line 1029
;1029:			player->grabbedEntity->physicsObject = qfalse;			//phys 1 settings
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 604
ADDP4
CNSTI4 0
ASGNI4
line 1030
;1030:			player->grabbedEntity->sb_phys = 1;						//phys 1 settings
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 888
ADDP4
CNSTI4 1
ASGNI4
line 1031
;1031:			VectorClear( player->grabbedEntity->s.pos.trDelta );	//clear speed
ADDRLP4 36
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
ASGNP4
ADDRLP4 40
CNSTF4 0
ASGNF4
ADDRLP4 36
INDIRP4
CNSTI4 44
ADDP4
ADDRLP4 40
INDIRF4
ASGNF4
ADDRLP4 36
INDIRP4
CNSTI4 40
ADDP4
ADDRLP4 40
INDIRF4
ASGNF4
ADDRLP4 36
INDIRP4
CNSTI4 36
ADDP4
ADDRLP4 40
INDIRF4
ASGNF4
line 1032
;1032:			} else {
ADDRGP4 $576
JUMPV
LABELV $575
line 1033
;1033:			VectorClear( player->grabbedEntity->client->ps.velocity );	//clear speed
ADDRLP4 36
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
ASGNP4
ADDRLP4 40
CNSTF4 0
ASGNF4
ADDRLP4 36
INDIRP4
CNSTI4 40
ADDP4
ADDRLP4 40
INDIRF4
ASGNF4
ADDRLP4 36
INDIRP4
CNSTI4 36
ADDP4
ADDRLP4 40
INDIRF4
ASGNF4
ADDRLP4 36
INDIRP4
CNSTI4 32
ADDP4
ADDRLP4 40
INDIRF4
ASGNF4
line 1034
;1034:			VectorSubtract(player->grabbedEntity->r.currentOrigin, player->grabbedEntity->grabOldOrigin, newvelocity);		//calc player speed with old frame
ADDRLP4 44
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
ASGNP4
ADDRLP4 48
ADDRLP4 44
INDIRP4
INDIRP4
ASGNP4
ADDRLP4 0
ADDRLP4 48
INDIRP4
CNSTI4 528
ADDP4
INDIRF4
ADDRLP4 48
INDIRP4
CNSTI4 2472
ADDP4
INDIRF4
SUBF4
ASGNF4
ADDRLP4 52
ADDRLP4 44
INDIRP4
INDIRP4
ASGNP4
ADDRLP4 0+4
ADDRLP4 52
INDIRP4
CNSTI4 532
ADDP4
INDIRF4
ADDRLP4 52
INDIRP4
CNSTI4 2476
ADDP4
INDIRF4
SUBF4
ASGNF4
ADDRLP4 56
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
ASGNP4
ADDRLP4 0+8
ADDRLP4 56
INDIRP4
CNSTI4 536
ADDP4
INDIRF4
ADDRLP4 56
INDIRP4
CNSTI4 2480
ADDP4
INDIRF4
SUBF4
ASGNF4
line 1035
;1035:			VectorScale(newvelocity, 5, newvelocity);																		//vector player sens
ADDRLP4 60
CNSTF4 1084227584
ASGNF4
ADDRLP4 0
ADDRLP4 60
INDIRF4
ADDRLP4 0
INDIRF4
MULF4
ASGNF4
ADDRLP4 0+4
ADDRLP4 60
INDIRF4
ADDRLP4 0+4
INDIRF4
MULF4
ASGNF4
ADDRLP4 0+8
CNSTF4 1084227584
ADDRLP4 0+8
INDIRF4
MULF4
ASGNF4
line 1036
;1036:			VectorAdd(player->grabbedEntity->client->ps.velocity, newvelocity, player->grabbedEntity->client->ps.velocity);		//apply new player speed	
ADDRLP4 64
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 32
ADDP4
ASGNP4
ADDRLP4 64
INDIRP4
ADDRLP4 64
INDIRP4
INDIRF4
ADDRLP4 0
INDIRF4
ADDF4
ASGNF4
ADDRLP4 68
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 36
ADDP4
ASGNP4
ADDRLP4 68
INDIRP4
ADDRLP4 68
INDIRP4
INDIRF4
ADDRLP4 0+4
INDIRF4
ADDF4
ASGNF4
ADDRLP4 72
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 40
ADDP4
ASGNP4
ADDRLP4 72
INDIRP4
ADDRLP4 72
INDIRP4
INDIRF4
ADDRLP4 0+8
INDIRF4
ADDF4
ASGNF4
line 1037
;1037:			}
LABELV $576
line 1038
;1038:		}
LABELV $573
line 1039
;1039:		if(player->grabbedEntity->grabNewPhys == 2){
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 2484
ADDP4
INDIRI4
CNSTI4 2
NEI4 $585
line 1040
;1040:			if(!player->grabbedEntity->client){
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $587
line 1041
;1041:			player->grabbedEntity->s.pos.trType = TR_GRAVITY;		//phys 2 settings
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 12
ADDP4
CNSTI4 5
ASGNI4
line 1042
;1042:			player->grabbedEntity->s.pos.trTime = level.time;		//phys 2 settings
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 16
ADDP4
ADDRGP4 level+32
INDIRI4
ASGNI4
line 1043
;1043:			player->grabbedEntity->physicsObject = qtrue;			//phys 2 settings
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 604
ADDP4
CNSTI4 1
ASGNI4
line 1044
;1044:			player->grabbedEntity->sb_phys = 2;						//phys 2 settings
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 888
ADDP4
CNSTI4 2
ASGNI4
line 1045
;1045:			VectorClear( player->grabbedEntity->s.pos.trDelta );	//clear speed
ADDRLP4 36
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
ASGNP4
ADDRLP4 40
CNSTF4 0
ASGNF4
ADDRLP4 36
INDIRP4
CNSTI4 44
ADDP4
ADDRLP4 40
INDIRF4
ASGNF4
ADDRLP4 36
INDIRP4
CNSTI4 40
ADDP4
ADDRLP4 40
INDIRF4
ASGNF4
ADDRLP4 36
INDIRP4
CNSTI4 36
ADDP4
ADDRLP4 40
INDIRF4
ASGNF4
line 1046
;1046:			} else {
ADDRGP4 $588
JUMPV
LABELV $587
line 1047
;1047:			VectorClear( player->grabbedEntity->client->ps.velocity );	//clear player speed	
ADDRLP4 36
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
ASGNP4
ADDRLP4 40
CNSTF4 0
ASGNF4
ADDRLP4 36
INDIRP4
CNSTI4 40
ADDP4
ADDRLP4 40
INDIRF4
ASGNF4
ADDRLP4 36
INDIRP4
CNSTI4 36
ADDP4
ADDRLP4 40
INDIRF4
ASGNF4
ADDRLP4 36
INDIRP4
CNSTI4 32
ADDP4
ADDRLP4 40
INDIRF4
ASGNF4
line 1048
;1048:			}
LABELV $588
line 1049
;1049:			VectorSubtract(player->grabbedEntity->r.currentOrigin, player->grabbedEntity->grabOldOrigin, newvelocity);		//calc speed with old frame
ADDRLP4 36
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
ASGNP4
ADDRLP4 40
ADDRLP4 36
INDIRP4
INDIRP4
ASGNP4
ADDRLP4 0
ADDRLP4 40
INDIRP4
CNSTI4 528
ADDP4
INDIRF4
ADDRLP4 40
INDIRP4
CNSTI4 2472
ADDP4
INDIRF4
SUBF4
ASGNF4
ADDRLP4 44
ADDRLP4 36
INDIRP4
INDIRP4
ASGNP4
ADDRLP4 0+4
ADDRLP4 44
INDIRP4
CNSTI4 532
ADDP4
INDIRF4
ADDRLP4 44
INDIRP4
CNSTI4 2476
ADDP4
INDIRF4
SUBF4
ASGNF4
ADDRLP4 48
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
ASGNP4
ADDRLP4 0+8
ADDRLP4 48
INDIRP4
CNSTI4 536
ADDP4
INDIRF4
ADDRLP4 48
INDIRP4
CNSTI4 2480
ADDP4
INDIRF4
SUBF4
ASGNF4
line 1050
;1050:			if(!player->grabbedEntity->client){
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $592
line 1051
;1051:			VectorScale(newvelocity, 15, newvelocity);																		//vector sens
ADDRLP4 52
CNSTF4 1097859072
ASGNF4
ADDRLP4 0
ADDRLP4 52
INDIRF4
ADDRLP4 0
INDIRF4
MULF4
ASGNF4
ADDRLP4 0+4
ADDRLP4 52
INDIRF4
ADDRLP4 0+4
INDIRF4
MULF4
ASGNF4
ADDRLP4 0+8
CNSTF4 1097859072
ADDRLP4 0+8
INDIRF4
MULF4
ASGNF4
line 1052
;1052:			VectorAdd(player->grabbedEntity->s.pos.trDelta, newvelocity, player->grabbedEntity->s.pos.trDelta);				//apply new speed
ADDRLP4 56
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 36
ADDP4
ASGNP4
ADDRLP4 56
INDIRP4
ADDRLP4 56
INDIRP4
INDIRF4
ADDRLP4 0
INDIRF4
ADDF4
ASGNF4
ADDRLP4 60
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 40
ADDP4
ASGNP4
ADDRLP4 60
INDIRP4
ADDRLP4 60
INDIRP4
INDIRF4
ADDRLP4 0+4
INDIRF4
ADDF4
ASGNF4
ADDRLP4 64
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 44
ADDP4
ASGNP4
ADDRLP4 64
INDIRP4
ADDRLP4 64
INDIRP4
INDIRF4
ADDRLP4 0+8
INDIRF4
ADDF4
ASGNF4
line 1053
;1053:			} else {
ADDRGP4 $593
JUMPV
LABELV $592
line 1054
;1054:			VectorScale(newvelocity, 5, newvelocity);																		//vector player sens
ADDRLP4 52
CNSTF4 1084227584
ASGNF4
ADDRLP4 0
ADDRLP4 52
INDIRF4
ADDRLP4 0
INDIRF4
MULF4
ASGNF4
ADDRLP4 0+4
ADDRLP4 52
INDIRF4
ADDRLP4 0+4
INDIRF4
MULF4
ASGNF4
ADDRLP4 0+8
CNSTF4 1084227584
ADDRLP4 0+8
INDIRF4
MULF4
ASGNF4
line 1055
;1055:			VectorAdd(player->grabbedEntity->client->ps.velocity, newvelocity, player->grabbedEntity->client->ps.velocity);		//apply new player speed
ADDRLP4 56
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 32
ADDP4
ASGNP4
ADDRLP4 56
INDIRP4
ADDRLP4 56
INDIRP4
INDIRF4
ADDRLP4 0
INDIRF4
ADDF4
ASGNF4
ADDRLP4 60
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 36
ADDP4
ASGNP4
ADDRLP4 60
INDIRP4
ADDRLP4 60
INDIRP4
INDIRF4
ADDRLP4 0+4
INDIRF4
ADDF4
ASGNF4
ADDRLP4 64
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 40
ADDP4
ASGNP4
ADDRLP4 64
INDIRP4
ADDRLP4 64
INDIRP4
INDIRF4
ADDRLP4 0+8
INDIRF4
ADDF4
ASGNF4
line 1056
;1056:			}
LABELV $593
line 1057
;1057:		}
LABELV $585
line 1058
;1058:		VectorClear( player->grabOffset );																				//clear offset
ADDRLP4 36
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 40
CNSTF4 0
ASGNF4
ADDRLP4 36
INDIRP4
CNSTI4 2468
ADDP4
ADDRLP4 40
INDIRF4
ASGNF4
ADDRLP4 36
INDIRP4
CNSTI4 2464
ADDP4
ADDRLP4 40
INDIRF4
ASGNF4
ADDRLP4 36
INDIRP4
CNSTI4 2460
ADDP4
ADDRLP4 40
INDIRF4
ASGNF4
line 1059
;1059:		player->grabbedEntity = 0;																						//end
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
CNSTP4 0
ASGNP4
line 1060
;1060:    }
LABELV $571
LABELV $531
line 1061
;1061:}
LABELV $524
endproc PhysgunHold 84 12
export GravitygunHold
proc GravitygunHold 76 12
line 1063
;1062:
;1063:void GravitygunHold(gentity_t *player) {
line 1068
;1064:	gentity_t *findent;
;1065:	vec3_t		end;
;1066:	vec3_t		newvelocity;
;1067:	
;1068:	if(!g_allowgravitygun.integer){
ADDRGP4 g_allowgravitygun+12
INDIRI4
CNSTI4 0
NEI4 $607
line 1069
;1069:		return; 
ADDRGP4 $606
JUMPV
LABELV $607
line 1072
;1070:	}
;1071:
;1072:	if (player->client->ps.weapon == WP_PHYSGUN){
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 144
ADDP4
INDIRI4
CNSTI4 17
NEI4 $610
line 1073
;1073:		return; 
ADDRGP4 $606
JUMPV
LABELV $610
line 1076
;1074:	}
;1075:	
;1076:    if (player->client->ps.weapon == WP_GRAVITYGUN && player->client->buttons & BUTTON_ATTACK && player->client->ps.stats[STAT_HEALTH] && player->client->ps.pm_type != PM_DEAD) {
ADDRLP4 28
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
ASGNP4
ADDRLP4 28
INDIRP4
CNSTI4 144
ADDP4
INDIRI4
CNSTI4 18
NEI4 $612
ADDRLP4 32
CNSTI4 0
ASGNI4
ADDRLP4 28
INDIRP4
CNSTI4 1236
ADDP4
INDIRI4
CNSTI4 1
BANDI4
ADDRLP4 32
INDIRI4
EQI4 $612
ADDRLP4 28
INDIRP4
CNSTI4 184
ADDP4
INDIRI4
ADDRLP4 32
INDIRI4
EQI4 $612
ADDRLP4 28
INDIRP4
CNSTI4 4
ADDP4
INDIRI4
CNSTI4 3
EQI4 $612
line 1077
;1077:        if (!player->grabbedEntity) {
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $614
line 1078
;1078:            findent = FindEntityForGravitygun(player, GRAVITYGUN_RANGE);
ADDRFP4 0
INDIRP4
ARGP4
CNSTI4 512
ARGI4
ADDRLP4 36
ADDRGP4 FindEntityForGravitygun
CALLP4
ASGNP4
ADDRLP4 12
ADDRLP4 36
INDIRP4
ASGNP4
line 1079
;1079:			if(findent && findent->isGrabbed == qfalse ){
ADDRLP4 40
ADDRLP4 12
INDIRP4
ASGNP4
ADDRLP4 40
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $616
ADDRLP4 40
INDIRP4
CNSTI4 2452
ADDP4
INDIRI4
CNSTI4 0
NEI4 $616
line 1080
;1080:			if(findent->owner != player->s.clientNum + 1){
ADDRLP4 12
INDIRP4
CNSTI4 820
ADDP4
INDIRI4
ADDRFP4 0
INDIRP4
CNSTI4 180
ADDP4
INDIRI4
CNSTI4 1
ADDI4
EQI4 $618
line 1081
;1081:				if(findent->owner != 0){
ADDRLP4 12
INDIRP4
CNSTI4 820
ADDP4
INDIRI4
CNSTI4 0
EQI4 $620
line 1082
;1082:					trap_SendServerCommand( player->s.clientNum, va( "cp \"Owned by %s\n\"", findent->ownername ));
ADDRGP4 $540
ARGP4
ADDRLP4 12
INDIRP4
CNSTI4 828
ADDP4
INDIRP4
ARGP4
ADDRLP4 44
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CNSTI4 180
ADDP4
INDIRI4
ARGI4
ADDRLP4 44
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1083
;1083:					return;
ADDRGP4 $606
JUMPV
LABELV $620
line 1085
;1084:				}	
;1085:			}
LABELV $618
line 1086
;1086:			if(!findent->client){
ADDRLP4 12
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $622
line 1087
;1087:			player->grabbedEntity = findent;
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
ADDRLP4 12
INDIRP4
ASGNP4
line 1088
;1088:			} else if (findent->singlebot) {
ADDRGP4 $623
JUMPV
LABELV $622
ADDRLP4 12
INDIRP4
CNSTI4 1028
ADDP4
INDIRI4
CNSTI4 0
EQI4 $624
line 1089
;1089:			player->grabbedEntity = findent;
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
ADDRLP4 12
INDIRP4
ASGNP4
line 1090
;1090:			}
LABELV $624
LABELV $623
line 1091
;1091:			}
LABELV $616
line 1092
;1092:            if (player->grabbedEntity) {
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $613
line 1093
;1093:                player->grabbedEntity->isGrabbed = qtrue;
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 2452
ADDP4
CNSTI4 1
ASGNI4
line 1094
;1094:				if(!player->grabbedEntity->client){
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $613
line 1095
;1095:				player->grabbedEntity->s.pos.trType = TR_GRAVITY;
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 12
ADDP4
CNSTI4 5
ASGNI4
line 1096
;1096:				player->grabbedEntity->physicsObject = qtrue;
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 604
ADDP4
CNSTI4 1
ASGNI4
line 1097
;1097:				player->grabbedEntity->sb_phys = 2;
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 888
ADDP4
CNSTI4 2
ASGNI4
line 1098
;1098:				G_EnablePropPhysics(player->grabbedEntity);
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
ARGP4
ADDRGP4 G_EnablePropPhysics
CALLI4
pop
line 1099
;1099:				}
line 1100
;1100:            }
line 1101
;1101:        } else {
ADDRGP4 $613
JUMPV
LABELV $614
line 1102
;1102:			trap_UnlinkEntity( player->grabbedEntity );			//Unlink entity for check coll for other props
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
ARGP4
ADDRGP4 trap_UnlinkEntity
CALLV
pop
line 1103
;1103:			CrosshairPointGravity(player, GRAVITYGUN_DIST, end);			//player->grabDist set in FindEntityForPhysgun()
ADDRFP4 0
INDIRP4
ARGP4
CNSTI4 128
ARGI4
ADDRLP4 16
ARGP4
ADDRGP4 CrosshairPointGravity
CALLV
pop
line 1104
;1104:			trap_LinkEntity( player->grabbedEntity );			//Link entity for work prop-flight
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
ARGP4
ADDRGP4 trap_LinkEntity
CALLV
pop
line 1105
;1105:			VectorCopy(player->grabbedEntity->r.currentOrigin, player->grabbedEntity->grabOldOrigin);	//save old frame for speed apply
ADDRLP4 36
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
ASGNP4
ADDRLP4 36
INDIRP4
CNSTI4 2472
ADDP4
ADDRLP4 36
INDIRP4
CNSTI4 528
ADDP4
INDIRB
ASGNB 12
line 1106
;1106:			player->grabbedEntity->lastPlayer = player;		//for save attacker
ADDRLP4 40
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 40
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 2488
ADDP4
ADDRLP4 40
INDIRP4
ASGNP4
line 1107
;1107:			if(!player->grabbedEntity->client){
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $630
line 1108
;1108:			VectorCopy(end, player->grabbedEntity->s.origin);
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 92
ADDP4
ADDRLP4 16
INDIRB
ASGNB 12
line 1109
;1109:			VectorCopy(end, player->grabbedEntity->s.pos.trBase);
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 24
ADDP4
ADDRLP4 16
INDIRB
ASGNB 12
line 1110
;1110:			VectorCopy(end, player->grabbedEntity->r.currentOrigin);
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 528
ADDP4
ADDRLP4 16
INDIRB
ASGNB 12
line 1111
;1111:			VectorClear( player->grabbedEntity->s.pos.trDelta );	//clear speed
ADDRLP4 44
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
ASGNP4
ADDRLP4 48
CNSTF4 0
ASGNF4
ADDRLP4 44
INDIRP4
CNSTI4 44
ADDP4
ADDRLP4 48
INDIRF4
ASGNF4
ADDRLP4 44
INDIRP4
CNSTI4 40
ADDP4
ADDRLP4 48
INDIRF4
ASGNF4
ADDRLP4 44
INDIRP4
CNSTI4 36
ADDP4
ADDRLP4 48
INDIRF4
ASGNF4
line 1112
;1112:			G_EnablePropPhysics(player->grabbedEntity);
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
ARGP4
ADDRGP4 G_EnablePropPhysics
CALLI4
pop
line 1113
;1113:			} else {
ADDRGP4 $613
JUMPV
LABELV $630
line 1114
;1114:			VectorClear( player->grabbedEntity->client->ps.velocity );	//clear player speed	
ADDRLP4 44
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
ASGNP4
ADDRLP4 48
CNSTF4 0
ASGNF4
ADDRLP4 44
INDIRP4
CNSTI4 40
ADDP4
ADDRLP4 48
INDIRF4
ASGNF4
ADDRLP4 44
INDIRP4
CNSTI4 36
ADDP4
ADDRLP4 48
INDIRF4
ASGNF4
ADDRLP4 44
INDIRP4
CNSTI4 32
ADDP4
ADDRLP4 48
INDIRF4
ASGNF4
line 1115
;1115:			VectorCopy ( end, player->grabbedEntity->client->ps.origin );
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 20
ADDP4
ADDRLP4 16
INDIRB
ASGNB 12
line 1116
;1116:			VectorCopy( player->grabbedEntity->client->ps.origin, player->grabbedEntity->r.currentOrigin );
ADDRLP4 52
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
ASGNP4
ADDRLP4 52
INDIRP4
CNSTI4 528
ADDP4
ADDRLP4 52
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 20
ADDP4
INDIRB
ASGNB 12
line 1117
;1117:			}
line 1118
;1118:        }
line 1119
;1119:    } else if (player->grabbedEntity) {
ADDRGP4 $613
JUMPV
LABELV $612
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $632
line 1120
;1120:        player->grabbedEntity->isGrabbed = qfalse;				//start
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 2452
ADDP4
CNSTI4 0
ASGNI4
line 1121
;1121:			if(!player->grabbedEntity->client){
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $634
line 1122
;1122:			player->grabbedEntity->physicsObject = qtrue;			//phys 2 settings
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 604
ADDP4
CNSTI4 1
ASGNI4
line 1123
;1123:			player->grabbedEntity->sb_phys = 2;						//phys 2 settings
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 888
ADDP4
CNSTI4 2
ASGNI4
line 1124
;1124:			G_EnablePropPhysics(player->grabbedEntity);				//turn phys
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
ARGP4
ADDRGP4 G_EnablePropPhysics
CALLI4
pop
line 1125
;1125:			VectorClear( player->grabbedEntity->s.pos.trDelta );	//clear speed
ADDRLP4 36
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
ASGNP4
ADDRLP4 40
CNSTF4 0
ASGNF4
ADDRLP4 36
INDIRP4
CNSTI4 44
ADDP4
ADDRLP4 40
INDIRF4
ASGNF4
ADDRLP4 36
INDIRP4
CNSTI4 40
ADDP4
ADDRLP4 40
INDIRF4
ASGNF4
ADDRLP4 36
INDIRP4
CNSTI4 36
ADDP4
ADDRLP4 40
INDIRF4
ASGNF4
line 1126
;1126:			} else {
ADDRGP4 $635
JUMPV
LABELV $634
line 1127
;1127:			VectorClear( player->grabbedEntity->client->ps.velocity );	//clear player speed	
ADDRLP4 36
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
ASGNP4
ADDRLP4 40
CNSTF4 0
ASGNF4
ADDRLP4 36
INDIRP4
CNSTI4 40
ADDP4
ADDRLP4 40
INDIRF4
ASGNF4
ADDRLP4 36
INDIRP4
CNSTI4 36
ADDP4
ADDRLP4 40
INDIRF4
ASGNF4
ADDRLP4 36
INDIRP4
CNSTI4 32
ADDP4
ADDRLP4 40
INDIRF4
ASGNF4
line 1128
;1128:			}
LABELV $635
line 1129
;1129:			VectorSubtract(player->grabbedEntity->r.currentOrigin, player->r.currentOrigin, newvelocity);		//calc speed with player pos and prop pos
ADDRLP4 36
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 40
ADDRLP4 36
INDIRP4
CNSTI4 2448
ADDP4
ASGNP4
ADDRLP4 44
CNSTI4 528
ASGNI4
ADDRLP4 0
ADDRLP4 40
INDIRP4
INDIRP4
ADDRLP4 44
INDIRI4
ADDP4
INDIRF4
ADDRLP4 36
INDIRP4
ADDRLP4 44
INDIRI4
ADDP4
INDIRF4
SUBF4
ASGNF4
ADDRLP4 48
CNSTI4 532
ASGNI4
ADDRLP4 0+4
ADDRLP4 40
INDIRP4
INDIRP4
ADDRLP4 48
INDIRI4
ADDP4
INDIRF4
ADDRLP4 36
INDIRP4
ADDRLP4 48
INDIRI4
ADDP4
INDIRF4
SUBF4
ASGNF4
ADDRLP4 52
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 56
CNSTI4 536
ASGNI4
ADDRLP4 0+8
ADDRLP4 52
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
ADDRLP4 56
INDIRI4
ADDP4
INDIRF4
ADDRLP4 52
INDIRP4
ADDRLP4 56
INDIRI4
ADDP4
INDIRF4
SUBF4
ASGNF4
line 1130
;1130:			if(!player->grabbedEntity->client){
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $638
line 1131
;1131:			VectorScale(newvelocity, 10, newvelocity);																		//vector sens
ADDRLP4 60
CNSTF4 1092616192
ASGNF4
ADDRLP4 0
ADDRLP4 60
INDIRF4
ADDRLP4 0
INDIRF4
MULF4
ASGNF4
ADDRLP4 0+4
ADDRLP4 60
INDIRF4
ADDRLP4 0+4
INDIRF4
MULF4
ASGNF4
ADDRLP4 0+8
CNSTF4 1092616192
ADDRLP4 0+8
INDIRF4
MULF4
ASGNF4
line 1132
;1132:			VectorAdd(player->grabbedEntity->s.pos.trDelta, newvelocity, player->grabbedEntity->s.pos.trDelta);				//apply new speed
ADDRLP4 64
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 36
ADDP4
ASGNP4
ADDRLP4 64
INDIRP4
ADDRLP4 64
INDIRP4
INDIRF4
ADDRLP4 0
INDIRF4
ADDF4
ASGNF4
ADDRLP4 68
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 40
ADDP4
ASGNP4
ADDRLP4 68
INDIRP4
ADDRLP4 68
INDIRP4
INDIRF4
ADDRLP4 0+4
INDIRF4
ADDF4
ASGNF4
ADDRLP4 72
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 44
ADDP4
ASGNP4
ADDRLP4 72
INDIRP4
ADDRLP4 72
INDIRP4
INDIRF4
ADDRLP4 0+8
INDIRF4
ADDF4
ASGNF4
line 1133
;1133:			} else {
ADDRGP4 $639
JUMPV
LABELV $638
line 1134
;1134:			VectorScale(newvelocity, 10, newvelocity);																			//vector player sens
ADDRLP4 60
CNSTF4 1092616192
ASGNF4
ADDRLP4 0
ADDRLP4 60
INDIRF4
ADDRLP4 0
INDIRF4
MULF4
ASGNF4
ADDRLP4 0+4
ADDRLP4 60
INDIRF4
ADDRLP4 0+4
INDIRF4
MULF4
ASGNF4
ADDRLP4 0+8
CNSTF4 1092616192
ADDRLP4 0+8
INDIRF4
MULF4
ASGNF4
line 1135
;1135:			VectorAdd(player->grabbedEntity->client->ps.velocity, newvelocity, player->grabbedEntity->client->ps.velocity);		//apply new player speed
ADDRLP4 64
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 32
ADDP4
ASGNP4
ADDRLP4 64
INDIRP4
ADDRLP4 64
INDIRP4
INDIRF4
ADDRLP4 0
INDIRF4
ADDF4
ASGNF4
ADDRLP4 68
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 36
ADDP4
ASGNP4
ADDRLP4 68
INDIRP4
ADDRLP4 68
INDIRP4
INDIRF4
ADDRLP4 0+4
INDIRF4
ADDF4
ASGNF4
ADDRLP4 72
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 40
ADDP4
ASGNP4
ADDRLP4 72
INDIRP4
ADDRLP4 72
INDIRP4
INDIRF4
ADDRLP4 0+8
INDIRF4
ADDF4
ASGNF4
line 1136
;1136:			}
LABELV $639
line 1137
;1137:		VectorClear( player->grabOffset );																				//clear offset
ADDRLP4 60
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 64
CNSTF4 0
ASGNF4
ADDRLP4 60
INDIRP4
CNSTI4 2468
ADDP4
ADDRLP4 64
INDIRF4
ASGNF4
ADDRLP4 60
INDIRP4
CNSTI4 2464
ADDP4
ADDRLP4 64
INDIRF4
ASGNF4
ADDRLP4 60
INDIRP4
CNSTI4 2460
ADDP4
ADDRLP4 64
INDIRF4
ASGNF4
line 1138
;1138:		player->grabbedEntity = 0;																						//end
ADDRFP4 0
INDIRP4
CNSTI4 2448
ADDP4
CNSTP4 0
ASGNP4
line 1139
;1139:		G_AddEvent( player, EV_GRAVITYSOUND, 0 );
ADDRFP4 0
INDIRP4
ARGP4
CNSTI4 106
ARGI4
CNSTI4 0
ARGI4
ADDRGP4 G_AddEvent
CALLV
pop
line 1140
;1140:    }
LABELV $632
LABELV $613
line 1141
;1141:}
LABELV $606
endproc GravitygunHold 76 12
export CheckCarCollisions
proc CheckCarCollisions 208 28
line 1143
;1142:
;1143:void CheckCarCollisions(gentity_t *ent) {
line 1151
;1144:	vec3_t newMins, newMaxs;
;1145:    trace_t tr;
;1146:	gentity_t *hit;
;1147:	float impactForce;
;1148:	vec3_t impactVector;
;1149:	vec3_t end, start, forward, up, right;
;1150:	
;1151:	if(BG_VehicleCheckClass(ent->client->ps.stats[STAT_VEHICLE]) != VCLASS_CAR && ent->botskill != 9){
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 232
ADDP4
INDIRI4
ARGI4
ADDRLP4 160
ADDRGP4 BG_VehicleCheckClass
CALLI4
ASGNI4
ADDRLP4 160
INDIRI4
CNSTI4 1
EQI4 $653
ADDRFP4 0
INDIRP4
CNSTI4 1040
ADDP4
INDIRI4
CNSTI4 9
EQI4 $653
line 1152
;1152:	return;
ADDRGP4 $652
JUMPV
LABELV $653
line 1156
;1153:	}
;1154:	
;1155:	//Set Aiming Directions
;1156:	AngleVectors(ent->client->ps.viewangles, forward, right, up);
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 152
ADDP4
ARGP4
ADDRLP4 24
ARGP4
ADDRLP4 132
ARGP4
ADDRLP4 120
ARGP4
ADDRGP4 AngleVectors
CALLV
pop
line 1157
;1157:	CalcMuzzlePoint(ent, forward, right, up, start);
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 24
ARGP4
ADDRLP4 132
ARGP4
ADDRLP4 120
ARGP4
ADDRLP4 48
ARGP4
ADDRGP4 CalcMuzzlePoint
CALLV
pop
line 1158
;1158:	VectorMA (start, 1, forward, end);
ADDRLP4 164
CNSTF4 1065353216
ASGNF4
ADDRLP4 36
ADDRLP4 48
INDIRF4
ADDRLP4 164
INDIRF4
ADDRLP4 24
INDIRF4
MULF4
ADDF4
ASGNF4
ADDRLP4 36+4
ADDRLP4 48+4
INDIRF4
ADDRLP4 164
INDIRF4
ADDRLP4 24+4
INDIRF4
MULF4
ADDF4
ASGNF4
ADDRLP4 36+8
ADDRLP4 48+8
INDIRF4
CNSTF4 1065353216
ADDRLP4 24+8
INDIRF4
MULF4
ADDF4
ASGNF4
line 1160
;1159:	
;1160:	VectorCopy(ent->r.mins, newMins);
ADDRLP4 0
ADDRFP4 0
INDIRP4
CNSTI4 476
ADDP4
INDIRB
ASGNB 12
line 1161
;1161:	VectorCopy(ent->r.maxs, newMaxs);
ADDRLP4 12
ADDRFP4 0
INDIRP4
CNSTI4 488
ADDP4
INDIRB
ASGNB 12
line 1162
;1162:	VectorScale(newMins, 1.15, newMins);
ADDRLP4 168
CNSTF4 1066611507
ASGNF4
ADDRLP4 0
ADDRLP4 168
INDIRF4
ADDRLP4 0
INDIRF4
MULF4
ASGNF4
ADDRLP4 0+4
ADDRLP4 168
INDIRF4
ADDRLP4 0+4
INDIRF4
MULF4
ASGNF4
ADDRLP4 0+8
CNSTF4 1066611507
ADDRLP4 0+8
INDIRF4
MULF4
ASGNF4
line 1163
;1163:	VectorScale(newMaxs, 1.15, newMaxs);
ADDRLP4 172
CNSTF4 1066611507
ASGNF4
ADDRLP4 12
ADDRLP4 172
INDIRF4
ADDRLP4 12
INDIRF4
MULF4
ASGNF4
ADDRLP4 12+4
ADDRLP4 172
INDIRF4
ADDRLP4 12+4
INDIRF4
MULF4
ASGNF4
ADDRLP4 12+8
CNSTF4 1066611507
ADDRLP4 12+8
INDIRF4
MULF4
ASGNF4
line 1164
;1164:	newMins[2] *= 0.20;
ADDRLP4 0+8
CNSTF4 1045220557
ADDRLP4 0+8
INDIRF4
MULF4
ASGNF4
line 1165
;1165:	newMaxs[2] *= 0.20;
ADDRLP4 12+8
CNSTF4 1045220557
ADDRLP4 12+8
INDIRF4
MULF4
ASGNF4
line 1166
;1166:	trap_Trace(&tr, ent->r.currentOrigin, newMins, newMaxs, end, ent->s.number, MASK_PLAYERSOLID);
ADDRLP4 60
ARGP4
ADDRLP4 176
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 176
INDIRP4
CNSTI4 528
ADDP4
ARGP4
ADDRLP4 0
ARGP4
ADDRLP4 12
ARGP4
ADDRLP4 36
ARGP4
ADDRLP4 176
INDIRP4
INDIRI4
ARGI4
CNSTI4 33619969
ARGI4
ADDRGP4 trap_Trace
CALLV
pop
line 1168
;1167:	
;1168:	if (tr.fraction < 1.0f && tr.entityNum != ENTITYNUM_NONE) {
ADDRLP4 60+8
INDIRF4
CNSTF4 1065353216
GEF4 $671
ADDRLP4 60+52
INDIRI4
CNSTI4 4095
EQI4 $671
line 1169
;1169:        hit = &g_entities[tr.entityNum];
ADDRLP4 116
CNSTI4 2492
ADDRLP4 60+52
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ASGNP4
line 1171
;1170:
;1171:        if (hit->s.number != ent->s.number) {  // Ignore self
ADDRLP4 116
INDIRP4
INDIRI4
ADDRFP4 0
INDIRP4
INDIRI4
EQI4 $676
line 1173
;1172:            // Calculate the impact force
;1173:            impactForce = sqrt(ent->client->ps.velocity[0] * ent->client->ps.velocity[0] + ent->client->ps.velocity[1] * ent->client->ps.velocity[1]);
ADDRLP4 180
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
ASGNP4
ADDRLP4 184
ADDRLP4 180
INDIRP4
CNSTI4 32
ADDP4
INDIRF4
ASGNF4
ADDRLP4 188
ADDRLP4 180
INDIRP4
CNSTI4 36
ADDP4
INDIRF4
ASGNF4
ADDRLP4 184
INDIRF4
ADDRLP4 184
INDIRF4
MULF4
ADDRLP4 188
INDIRF4
ADDRLP4 188
INDIRF4
MULF4
ADDF4
ARGF4
ADDRLP4 192
ADDRGP4 sqrt
CALLF4
ASGNF4
ADDRLP4 156
ADDRLP4 192
INDIRF4
ASGNF4
line 1176
;1174:
;1175:            // Optionally apply a force or velocity to the hit entity to simulate the push
;1176:			if (impactForce > VEHICLE_SENS) {
ADDRLP4 156
INDIRF4
CNSTF4 1106247680
LEF4 $678
line 1177
;1177:			if (!hit->client){
ADDRLP4 116
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $680
line 1178
;1178:			G_EnablePropPhysics(hit);
ADDRLP4 116
INDIRP4
ARGP4
ADDRGP4 G_EnablePropPhysics
CALLI4
pop
line 1179
;1179:			}
LABELV $680
line 1180
;1180:			VectorCopy(ent->client->ps.velocity, impactVector);
ADDRLP4 144
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 32
ADDP4
INDIRB
ASGNB 12
line 1181
;1181:			VectorScale(impactVector, VEHICLE_PROP_IMPACT, impactVector);
ADDRLP4 144
ADDRLP4 144
INDIRF4
ADDRGP4 g_physimpact+8
INDIRF4
MULF4
ASGNF4
ADDRLP4 144+4
ADDRLP4 144+4
INDIRF4
ADDRGP4 g_physimpact+8
INDIRF4
MULF4
ASGNF4
ADDRLP4 144+8
ADDRLP4 144+8
INDIRF4
ADDRGP4 g_physimpact+8
INDIRF4
MULF4
ASGNF4
line 1182
;1182:			impactVector[2] = impactForce*0.15;
ADDRLP4 144+8
CNSTF4 1041865114
ADDRLP4 156
INDIRF4
MULF4
ASGNF4
line 1183
;1183:			if (!hit->client){
ADDRLP4 116
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $690
line 1184
;1184:			hit->lastPlayer = ent;		//for save attacker
ADDRLP4 116
INDIRP4
CNSTI4 2488
ADDP4
ADDRFP4 0
INDIRP4
ASGNP4
line 1185
;1185:            VectorAdd(hit->s.pos.trDelta, impactVector, hit->s.pos.trDelta);  // Transfer velocity from the prop to the hit entity
ADDRLP4 196
ADDRLP4 116
INDIRP4
CNSTI4 36
ADDP4
ASGNP4
ADDRLP4 196
INDIRP4
ADDRLP4 196
INDIRP4
INDIRF4
ADDRLP4 144
INDIRF4
ADDF4
ASGNF4
ADDRLP4 200
ADDRLP4 116
INDIRP4
CNSTI4 40
ADDP4
ASGNP4
ADDRLP4 200
INDIRP4
ADDRLP4 200
INDIRP4
INDIRF4
ADDRLP4 144+4
INDIRF4
ADDF4
ASGNF4
ADDRLP4 204
ADDRLP4 116
INDIRP4
CNSTI4 44
ADDP4
ASGNP4
ADDRLP4 204
INDIRP4
ADDRLP4 204
INDIRP4
INDIRF4
ADDRLP4 144+8
INDIRF4
ADDF4
ASGNF4
line 1186
;1186:			} else {
ADDRGP4 $691
JUMPV
LABELV $690
line 1187
;1187:			VectorAdd(hit->client->ps.velocity, impactVector, hit->client->ps.velocity);  // Transfer velocity from the prop to the hit player
ADDRLP4 196
ADDRLP4 116
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 32
ADDP4
ASGNP4
ADDRLP4 196
INDIRP4
ADDRLP4 196
INDIRP4
INDIRF4
ADDRLP4 144
INDIRF4
ADDF4
ASGNF4
ADDRLP4 200
ADDRLP4 116
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 36
ADDP4
ASGNP4
ADDRLP4 200
INDIRP4
ADDRLP4 200
INDIRP4
INDIRF4
ADDRLP4 144+4
INDIRF4
ADDF4
ASGNF4
ADDRLP4 204
ADDRLP4 116
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 40
ADDP4
ASGNP4
ADDRLP4 204
INDIRP4
ADDRLP4 204
INDIRP4
INDIRF4
ADDRLP4 144+8
INDIRF4
ADDF4
ASGNF4
line 1188
;1188:			}
LABELV $691
line 1189
;1189:			}
LABELV $678
line 1190
;1190:			if(impactForce > VEHICLE_DAMAGESENS){
ADDRLP4 156
INDIRF4
CNSTF4 1106247680
LEF4 $696
line 1191
;1191:			if(hit->grabbedEntity != ent){
ADDRLP4 116
INDIRP4
CNSTI4 2448
ADDP4
INDIRP4
CVPU4 4
ADDRFP4 0
INDIRP4
CVPU4 4
EQU4 $698
line 1193
;1192:			//if(BG_VehicleCheckClass(ent->client->ps.stats[STAT_VEHICLE]) == VCLASS_CAR){
;1193:			G_CarDamage(hit, ent, (int)(impactForce * VEHICLE_DAMAGE));
ADDRLP4 116
INDIRP4
ARGP4
ADDRFP4 0
INDIRP4
ARGP4
CNSTF4 1028443341
ADDRLP4 156
INDIRF4
MULF4
CVFI4 4
ARGI4
ADDRGP4 G_CarDamage
CALLV
pop
line 1195
;1194:			//}
;1195:			}
LABELV $698
line 1196
;1196:			}
LABELV $696
line 1197
;1197:			if(impactForce > VEHICLE_DAMAGESENS*6){
ADDRLP4 156
INDIRF4
CNSTF4 1127481344
LEF4 $700
line 1198
;1198:				if(BG_VehicleCheckClass(ent->client->ps.stats[STAT_VEHICLE]) == VCLASS_CAR){
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 232
ADDP4
INDIRI4
ARGI4
ADDRLP4 196
ADDRGP4 BG_VehicleCheckClass
CALLI4
ASGNI4
ADDRLP4 196
INDIRI4
CNSTI4 1
NEI4 $702
line 1199
;1199:					G_PropSmoke( ent, impactForce*0.20);
ADDRFP4 0
INDIRP4
ARGP4
CNSTF4 1045220557
ADDRLP4 156
INDIRF4
MULF4
ARGF4
ADDRGP4 G_PropSmoke
CALLI4
pop
line 1200
;1200:				}
LABELV $702
line 1201
;1201:			}
LABELV $700
line 1202
;1202:        }
LABELV $676
line 1203
;1203:    }
LABELV $671
line 1204
;1204:}
LABELV $652
endproc CheckCarCollisions 208 28
lit
align 4
LABELV $852
byte 4 3257401344
byte 4 3257401344
byte 4 3257401344
align 4
LABELV $853
byte 4 1109917696
byte 4 1109917696
byte 4 1109917696
export ClientThink_real
code
proc ClientThink_real 372 12
line 1217
;1205:
;1206:/*
;1207:==============
;1208:ClientThink
;1209:
;1210:This will be called once for each client frame, which will
;1211:usually be a couple times for each server frame on fast clients.
;1212:
;1213:If "g_synchronousClients 1" is set, this will be called exactly
;1214:once for each server frame, which makes for smooth demo recording.
;1215:==============
;1216:*/
;1217:void ClientThink_real( gentity_t *ent ) {
line 1225
;1218:	gclient_t	*client;
;1219:	gentity_t	*vehicle;
;1220:	pmove_t		pm;
;1221:	int			oldEventSequence;
;1222:	int			msec;
;1223:	usercmd_t	*ucmd;
;1224:
;1225:	client = ent->client;
ADDRLP4 0
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
ASGNP4
line 1228
;1226:
;1227:	// don't think if the client is not yet connected (and thus not yet spawned in)
;1228:	if (client->pers.connected != CON_CONNECTED) {
ADDRLP4 0
INDIRP4
CNSTI4 472
ADDP4
INDIRI4
CNSTI4 2
EQI4 $705
line 1229
;1229:		return;
ADDRGP4 $704
JUMPV
LABELV $705
line 1232
;1230:	}
;1231:	// mark the time, so the connection sprite can be removed
;1232:	ucmd = &ent->client->pers.cmd;
ADDRLP4 248
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 476
ADDP4
ASGNP4
line 1235
;1233:
;1234:	// sanity check the command time to prevent speedup cheating
;1235:	if ( ucmd->serverTime > level.time + 200 ) {
ADDRLP4 248
INDIRP4
INDIRI4
ADDRGP4 level+32
INDIRI4
CNSTI4 200
ADDI4
LEI4 $707
line 1236
;1236:		ucmd->serverTime = level.time + 200;
ADDRLP4 248
INDIRP4
ADDRGP4 level+32
INDIRI4
CNSTI4 200
ADDI4
ASGNI4
line 1238
;1237://		G_Printf("serverTime <<<<<\n" );
;1238:	}
LABELV $707
line 1239
;1239:	if ( ucmd->serverTime < level.time - 1000 ) {
ADDRLP4 248
INDIRP4
INDIRI4
ADDRGP4 level+32
INDIRI4
CNSTI4 1000
SUBI4
GEI4 $711
line 1240
;1240:		ucmd->serverTime = level.time - 1000;
ADDRLP4 248
INDIRP4
ADDRGP4 level+32
INDIRI4
CNSTI4 1000
SUBI4
ASGNI4
line 1242
;1241://		G_Printf("serverTime >>>>>\n" );
;1242:	}
LABELV $711
line 1244
;1243:
;1244:	client->frameOffset = trap_Milliseconds() - level.frameStartTime;
ADDRLP4 264
ADDRGP4 trap_Milliseconds
CALLI4
ASGNI4
ADDRLP4 0
INDIRP4
CNSTI4 2184
ADDP4
ADDRLP4 264
INDIRI4
ADDRGP4 level+10240
INDIRI4
SUBI4
ASGNI4
line 1248
;1245:
;1246:	// we use level.previousTime to account for 50ms lag correction
;1247:	// besides, this will turn out numbers more like what players are used to
;1248:	client->pers.pingsamples[client->pers.samplehead] = level.previousTime + client->frameOffset - ucmd->serverTime;
ADDRLP4 0
INDIRP4
CNSTI4 900
ADDP4
INDIRI4
CNSTI4 2
LSHI4
ADDRLP4 0
INDIRP4
CNSTI4 644
ADDP4
ADDP4
ADDRGP4 level+36
INDIRI4
ADDRLP4 0
INDIRP4
CNSTI4 2184
ADDP4
INDIRI4
ADDI4
ADDRLP4 248
INDIRP4
INDIRI4
SUBI4
ASGNI4
line 1249
;1249:	client->pers.samplehead++;
ADDRLP4 272
ADDRLP4 0
INDIRP4
CNSTI4 900
ADDP4
ASGNP4
ADDRLP4 272
INDIRP4
ADDRLP4 272
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 1250
;1250:	if ( client->pers.samplehead >= NUM_PING_SAMPLES ) {
ADDRLP4 0
INDIRP4
CNSTI4 900
ADDP4
INDIRI4
CNSTI4 64
LTI4 $717
line 1251
;1251:		client->pers.samplehead -= NUM_PING_SAMPLES;
ADDRLP4 276
ADDRLP4 0
INDIRP4
CNSTI4 900
ADDP4
ASGNP4
ADDRLP4 276
INDIRP4
ADDRLP4 276
INDIRP4
INDIRI4
CNSTI4 64
SUBI4
ASGNI4
line 1252
;1252:	}
LABELV $717
line 1255
;1253:
;1254:	// initialize the real ping
;1255:	if ( g_truePing.integer ) {
ADDRGP4 g_truePing+12
INDIRI4
CNSTI4 0
EQI4 $719
line 1256
;1256:		int i, sum = 0;
ADDRLP4 280
CNSTI4 0
ASGNI4
line 1259
;1257:
;1258:		// get an average of the samples we saved up
;1259:		for ( i = 0; i < NUM_PING_SAMPLES; i++ ) {
ADDRLP4 276
CNSTI4 0
ASGNI4
LABELV $722
line 1260
;1260:			sum += client->pers.pingsamples[i];
ADDRLP4 280
ADDRLP4 280
INDIRI4
ADDRLP4 276
INDIRI4
CNSTI4 2
LSHI4
ADDRLP4 0
INDIRP4
CNSTI4 644
ADDP4
ADDP4
INDIRI4
ADDI4
ASGNI4
line 1261
;1261:		}
LABELV $723
line 1259
ADDRLP4 276
ADDRLP4 276
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 276
INDIRI4
CNSTI4 64
LTI4 $722
line 1263
;1262:
;1263:		client->pers.realPing = sum / NUM_PING_SAMPLES;
ADDRLP4 0
INDIRP4
CNSTI4 640
ADDP4
ADDRLP4 280
INDIRI4
CNSTI4 64
DIVI4
ASGNI4
line 1264
;1264:	}
ADDRGP4 $720
JUMPV
LABELV $719
line 1265
;1265:	else {
line 1267
;1266:		// if g_truePing is off, use the normal ping
;1267:		client->pers.realPing = client->ps.ping;
ADDRLP4 0
INDIRP4
CNSTI4 640
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 456
ADDP4
INDIRI4
ASGNI4
line 1268
;1268:	}
LABELV $720
line 1270
;1269:	
;1270:	client->attackTime = ucmd->serverTime;
ADDRLP4 0
INDIRP4
CNSTI4 1456
ADDP4
ADDRLP4 248
INDIRP4
INDIRI4
ASGNI4
line 1272
;1271:
;1272:	client->lastUpdateFrame = level.framenum;
ADDRLP4 0
INDIRP4
CNSTI4 2188
ADDP4
ADDRGP4 level+28
INDIRI4
ASGNI4
line 1274
;1273:
;1274:	if ( client->pers.realPing < 0 ) {
ADDRLP4 0
INDIRP4
CNSTI4 640
ADDP4
INDIRI4
CNSTI4 0
GEI4 $727
line 1275
;1275:		client->pers.realPing = 0;
ADDRLP4 0
INDIRP4
CNSTI4 640
ADDP4
CNSTI4 0
ASGNI4
line 1276
;1276:	}
LABELV $727
line 1278
;1277:
;1278:	msec = ucmd->serverTime - client->ps.commandTime;
ADDRLP4 252
ADDRLP4 248
INDIRP4
INDIRI4
ADDRLP4 0
INDIRP4
INDIRI4
SUBI4
ASGNI4
line 1279
;1279:	if ( msec < 1 && client->sess.spectatorState != SPECTATOR_FOLLOW ) {
ADDRLP4 252
INDIRI4
CNSTI4 1
GEI4 $729
ADDRLP4 0
INDIRP4
CNSTI4 1040
ADDP4
INDIRI4
CNSTI4 2
EQI4 $729
line 1280
;1280:		return;
ADDRGP4 $704
JUMPV
LABELV $729
line 1282
;1281:	}
;1282:	if ( msec > 200 ) {
ADDRLP4 252
INDIRI4
CNSTI4 200
LEI4 $731
line 1283
;1283:		msec = 200;
ADDRLP4 252
CNSTI4 200
ASGNI4
line 1284
;1284:	}
LABELV $731
line 1286
;1285:
;1286:	if ( pmove_msec.integer < 8 ) {
ADDRGP4 pmove_msec+12
INDIRI4
CNSTI4 8
GEI4 $733
line 1287
;1287:		trap_Cvar_Set("pmove_msec", "8");
ADDRGP4 $736
ARGP4
ADDRGP4 $737
ARGP4
ADDRGP4 trap_Cvar_Set
CALLV
pop
line 1288
;1288:	}
ADDRGP4 $734
JUMPV
LABELV $733
line 1289
;1289:	else if (pmove_msec.integer > 33) {
ADDRGP4 pmove_msec+12
INDIRI4
CNSTI4 33
LEI4 $738
line 1290
;1290:		trap_Cvar_Set("pmove_msec", "33");
ADDRGP4 $736
ARGP4
ADDRGP4 $741
ARGP4
ADDRGP4 trap_Cvar_Set
CALLV
pop
line 1291
;1291:	}
LABELV $738
LABELV $734
line 1293
;1292:
;1293:	if ( pmove_fixed.integer || client->pers.pmoveFixed ) {
ADDRLP4 276
CNSTI4 0
ASGNI4
ADDRGP4 pmove_fixed+12
INDIRI4
ADDRLP4 276
INDIRI4
NEI4 $745
ADDRLP4 0
INDIRP4
CNSTI4 512
ADDP4
INDIRI4
ADDRLP4 276
INDIRI4
EQI4 $742
LABELV $745
line 1294
;1294:		ucmd->serverTime = ((ucmd->serverTime + pmove_msec.integer-1) / pmove_msec.integer) * pmove_msec.integer;
ADDRLP4 248
INDIRP4
ADDRLP4 248
INDIRP4
INDIRI4
ADDRGP4 pmove_msec+12
INDIRI4
ADDI4
CNSTI4 1
SUBI4
ADDRGP4 pmove_msec+12
INDIRI4
DIVI4
ADDRGP4 pmove_msec+12
INDIRI4
MULI4
ASGNI4
line 1295
;1295:	}
LABELV $742
line 1300
;1296:
;1297:	//
;1298:	// check for exiting intermission
;1299:	//
;1300:	if ( level.intermissiontime ) {
ADDRGP4 level+9912
INDIRI4
CNSTI4 0
EQI4 $749
line 1301
;1301:		ClientIntermissionThink( client );
ADDRLP4 0
INDIRP4
ARGP4
ADDRGP4 ClientIntermissionThink
CALLV
pop
line 1302
;1302:		return;
ADDRGP4 $704
JUMPV
LABELV $749
line 1306
;1303:	}
;1304:
;1305:	// spectators don't do much
;1306:	if ( (client->sess.sessionTeam == TEAM_SPECTATOR) || client->isEliminated ) {
ADDRLP4 0
INDIRP4
CNSTI4 1032
ADDP4
INDIRI4
CNSTI4 3
EQI4 $754
ADDRLP4 0
INDIRP4
CNSTI4 1440
ADDP4
INDIRI4
CNSTI4 0
EQI4 $752
LABELV $754
line 1307
;1307:		if ( client->sess.spectatorState == SPECTATOR_SCOREBOARD ) {
ADDRLP4 0
INDIRP4
CNSTI4 1040
ADDP4
INDIRI4
CNSTI4 3
NEI4 $755
line 1308
;1308:			return;
ADDRGP4 $704
JUMPV
LABELV $755
line 1310
;1309:		}
;1310:		SpectatorThink( ent, ucmd );
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 248
INDIRP4
ARGP4
ADDRGP4 SpectatorThink
CALLV
pop
line 1311
;1311:		return;
ADDRGP4 $704
JUMPV
LABELV $752
line 1315
;1312:	}
;1313:
;1314:	// check for inactivity timer, but never drop the local client of a non-dedicated server
;1315:	if ( !ClientInactivityTimer( client ) ) {
ADDRLP4 0
INDIRP4
ARGP4
ADDRLP4 284
ADDRGP4 ClientInactivityTimer
CALLI4
ASGNI4
ADDRLP4 284
INDIRI4
CNSTI4 0
NEI4 $757
line 1316
;1316:		return;
ADDRGP4 $704
JUMPV
LABELV $757
line 1320
;1317:	}
;1318:
;1319:	// clear the rewards if time
;1320:	if ( level.time > client->rewardTime ) {
ADDRGP4 level+32
INDIRI4
ADDRLP4 0
INDIRP4
CNSTI4 1328
ADDP4
INDIRI4
LEI4 $759
line 1321
;1321:		client->ps.eFlags &= ~(EF_AWARD_IMPRESSIVE | EF_AWARD_EXCELLENT | EF_AWARD_GAUNTLET | EF_AWARD_ASSIST | EF_AWARD_DEFEND | EF_AWARD_CAP );
ADDRLP4 288
ADDRLP4 0
INDIRP4
CNSTI4 104
ADDP4
ASGNP4
ADDRLP4 288
INDIRP4
ADDRLP4 288
INDIRP4
INDIRI4
CNSTI4 -231497
BANDI4
ASGNI4
line 1322
;1322:	}
LABELV $759
line 1324
;1323:
;1324:	if ( client->noclip ) {
ADDRLP4 0
INDIRP4
CNSTI4 1232
ADDP4
INDIRI4
CNSTI4 0
EQI4 $762
line 1325
;1325:		client->ps.pm_type = PM_NOCLIP;
ADDRLP4 0
INDIRP4
CNSTI4 4
ADDP4
CNSTI4 1
ASGNI4
line 1326
;1326:	} else if ( client->ps.stats[STAT_HEALTH] <= 0 ) {
ADDRGP4 $763
JUMPV
LABELV $762
ADDRLP4 0
INDIRP4
CNSTI4 184
ADDP4
INDIRI4
CNSTI4 0
GTI4 $764
line 1327
;1327:		client->ps.pm_type = PM_DEAD;
ADDRLP4 0
INDIRP4
CNSTI4 4
ADDP4
CNSTI4 3
ASGNI4
line 1328
;1328:	} else if ( client->ps.pm_type != PM_FREEZE && client->ps.pm_type != PM_CUTSCENE ) {
ADDRGP4 $765
JUMPV
LABELV $764
ADDRLP4 288
CNSTI4 4
ASGNI4
ADDRLP4 292
ADDRLP4 0
INDIRP4
ADDRLP4 288
INDIRI4
ADDP4
INDIRI4
ASGNI4
ADDRLP4 292
INDIRI4
ADDRLP4 288
INDIRI4
EQI4 $766
ADDRLP4 292
INDIRI4
CNSTI4 7
EQI4 $766
line 1329
;1329:		client->ps.pm_type = PM_NORMAL;
ADDRLP4 0
INDIRP4
CNSTI4 4
ADDP4
CNSTI4 0
ASGNI4
line 1330
;1330:	}
LABELV $766
LABELV $765
LABELV $763
line 1332
;1331:	// set gravity
;1332:if ( !client->ps.gravity ){
ADDRLP4 0
INDIRP4
CNSTI4 48
ADDP4
INDIRI4
CNSTI4 0
NEI4 $768
line 1333
;1333:		if(client->sess.sessionTeam == TEAM_FREE){
ADDRLP4 0
INDIRP4
CNSTI4 1032
ADDP4
INDIRI4
CNSTI4 0
NEI4 $770
line 1334
;1334:			client->ps.gravity = g_gravity.value*g_gravityModifier.value;
ADDRLP4 0
INDIRP4
CNSTI4 48
ADDP4
ADDRGP4 g_gravity+8
INDIRF4
ADDRGP4 g_gravityModifier+8
INDIRF4
MULF4
CVFI4 4
ASGNI4
line 1335
;1335:		}
LABELV $770
line 1336
;1336:		if(client->sess.sessionTeam == TEAM_BLUE){
ADDRLP4 0
INDIRP4
CNSTI4 1032
ADDP4
INDIRI4
CNSTI4 2
NEI4 $774
line 1337
;1337:			client->ps.gravity = g_gravity.value*g_teamblue_gravityModifier.value;
ADDRLP4 0
INDIRP4
CNSTI4 48
ADDP4
ADDRGP4 g_gravity+8
INDIRF4
ADDRGP4 g_teamblue_gravityModifier+8
INDIRF4
MULF4
CVFI4 4
ASGNI4
line 1338
;1338:		}
LABELV $774
line 1339
;1339:		if(client->sess.sessionTeam == TEAM_RED){
ADDRLP4 0
INDIRP4
CNSTI4 1032
ADDP4
INDIRI4
CNSTI4 1
NEI4 $778
line 1340
;1340:			client->ps.gravity = g_gravity.value*g_teamred_gravityModifier.value;
ADDRLP4 0
INDIRP4
CNSTI4 48
ADDP4
ADDRGP4 g_gravity+8
INDIRF4
ADDRGP4 g_teamred_gravityModifier+8
INDIRF4
MULF4
CVFI4 4
ASGNI4
line 1341
;1341:		}
LABELV $778
line 1342
;1342:}
LABELV $768
line 1343
;1343:		if( bg_itemlist[client->ps.stats[STAT_PERSISTANT_POWERUP]].giTag == PW_SCOUT ) {
CNSTI4 56
ADDRLP4 0
INDIRP4
CNSTI4 192
ADDP4
INDIRI4
MULI4
ADDRGP4 bg_itemlist+44
ADDP4
INDIRI4
CNSTI4 10
NEI4 $782
line 1344
;1344:			client->ps.gravity *= g_scoutgravitymodifier.value;
ADDRLP4 296
ADDRLP4 0
INDIRP4
CNSTI4 48
ADDP4
ASGNP4
ADDRLP4 296
INDIRP4
ADDRLP4 296
INDIRP4
INDIRI4
CVIF4 4
ADDRGP4 g_scoutgravitymodifier+8
INDIRF4
MULF4
CVFI4 4
ASGNI4
line 1345
;1345:		}
LABELV $782
line 1346
;1346:		if( bg_itemlist[client->ps.stats[STAT_PERSISTANT_POWERUP]].giTag == PW_AMMOREGEN ) {
CNSTI4 56
ADDRLP4 0
INDIRP4
CNSTI4 192
ADDP4
INDIRI4
MULI4
ADDRGP4 bg_itemlist+44
ADDP4
INDIRI4
CNSTI4 13
NEI4 $786
line 1347
;1347:			client->ps.gravity *= g_ammoregengravitymodifier.value;
ADDRLP4 296
ADDRLP4 0
INDIRP4
CNSTI4 48
ADDP4
ASGNP4
ADDRLP4 296
INDIRP4
ADDRLP4 296
INDIRP4
INDIRI4
CVIF4 4
ADDRGP4 g_ammoregengravitymodifier+8
INDIRF4
MULF4
CVFI4 4
ASGNI4
line 1348
;1348:		}
LABELV $786
line 1349
;1349:		if( bg_itemlist[client->ps.stats[STAT_PERSISTANT_POWERUP]].giTag == PW_DOUBLER ) {
CNSTI4 56
ADDRLP4 0
INDIRP4
CNSTI4 192
ADDP4
INDIRI4
MULI4
ADDRGP4 bg_itemlist+44
ADDP4
INDIRI4
CNSTI4 12
NEI4 $790
line 1350
;1350:			client->ps.gravity *= g_doublergravitymodifier.value;
ADDRLP4 296
ADDRLP4 0
INDIRP4
CNSTI4 48
ADDP4
ASGNP4
ADDRLP4 296
INDIRP4
ADDRLP4 296
INDIRP4
INDIRI4
CVIF4 4
ADDRGP4 g_doublergravitymodifier+8
INDIRF4
MULF4
CVFI4 4
ASGNI4
line 1351
;1351:		}
LABELV $790
line 1352
;1352:		if( bg_itemlist[client->ps.stats[STAT_PERSISTANT_POWERUP]].giTag == PW_GUARD ) {
CNSTI4 56
ADDRLP4 0
INDIRP4
CNSTI4 192
ADDP4
INDIRI4
MULI4
ADDRGP4 bg_itemlist+44
ADDP4
INDIRI4
CNSTI4 11
NEI4 $794
line 1353
;1353:			client->ps.gravity *= g_guardgravitymodifier.value;
ADDRLP4 296
ADDRLP4 0
INDIRP4
CNSTI4 48
ADDP4
ASGNP4
ADDRLP4 296
INDIRP4
ADDRLP4 296
INDIRP4
INDIRI4
CVIF4 4
ADDRGP4 g_guardgravitymodifier+8
INDIRF4
MULF4
CVFI4 4
ASGNI4
line 1354
;1354:		}
LABELV $794
line 1358
;1355:
;1356:
;1357:	// set speed
;1358:if ( !ent->speed ){
ADDRFP4 0
INDIRP4
CNSTI4 744
ADDP4
INDIRF4
CNSTF4 0
NEF4 $798
line 1359
;1359:	if ( !ent->client->noclip ) {
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 1232
ADDP4
INDIRI4
CNSTI4 0
NEI4 $800
line 1360
;1360:	client->ps.speed = g_speed.value;
ADDRLP4 0
INDIRP4
CNSTI4 52
ADDP4
ADDRGP4 g_speed+8
INDIRF4
CVFI4 4
ASGNI4
line 1361
;1361:	} else {
ADDRGP4 $801
JUMPV
LABELV $800
line 1362
;1362:	client->ps.speed = g_speed.value*2.5;	
ADDRLP4 0
INDIRP4
CNSTI4 52
ADDP4
CNSTF4 1075838976
ADDRGP4 g_speed+8
INDIRF4
MULF4
CVFI4 4
ASGNI4
line 1363
;1363:	}
LABELV $801
line 1364
;1364:	if(client->sess.sessionTeam == TEAM_BLUE){
ADDRLP4 0
INDIRP4
CNSTI4 1032
ADDP4
INDIRI4
CNSTI4 2
NEI4 $804
line 1365
;1365:	client->ps.speed = g_teamblue_speed.integer;
ADDRLP4 0
INDIRP4
CNSTI4 52
ADDP4
ADDRGP4 g_teamblue_speed+12
INDIRI4
ASGNI4
line 1366
;1366:	}
LABELV $804
line 1367
;1367:	if(client->sess.sessionTeam == TEAM_RED){
ADDRLP4 0
INDIRP4
CNSTI4 1032
ADDP4
INDIRI4
CNSTI4 1
NEI4 $799
line 1368
;1368:	client->ps.speed = g_teamred_speed.integer;
ADDRLP4 0
INDIRP4
CNSTI4 52
ADDP4
ADDRGP4 g_teamred_speed+12
INDIRI4
ASGNI4
line 1369
;1369:	}
line 1370
;1370:}
ADDRGP4 $799
JUMPV
LABELV $798
line 1371
;1371:	else if ( ent->speed == -1 )
ADDRFP4 0
INDIRP4
CNSTI4 744
ADDP4
INDIRF4
CNSTF4 3212836864
NEF4 $810
line 1372
;1372:		client->ps.speed = 0;
ADDRLP4 0
INDIRP4
CNSTI4 52
ADDP4
CNSTI4 0
ASGNI4
ADDRGP4 $811
JUMPV
LABELV $810
line 1374
;1373:	else
;1374:		client->ps.speed = ent->speed;			//ent->speed holds a modified speed value that's set by a target_playerspeed
ADDRLP4 0
INDIRP4
CNSTI4 52
ADDP4
ADDRFP4 0
INDIRP4
CNSTI4 744
ADDP4
INDIRF4
CVFI4 4
ASGNI4
LABELV $811
LABELV $799
line 1376
;1375:	
;1376:	if(client->vehiclenum){	//VEHICLE-SYSTEM: setup physics for all
ADDRLP4 0
INDIRP4
CNSTI4 1248
ADDP4
INDIRI4
CNSTI4 0
EQI4 $812
line 1377
;1377:	if(G_FindEntityForEntityNum(client->vehiclenum)){
ADDRLP4 0
INDIRP4
CNSTI4 1248
ADDP4
INDIRI4
ARGI4
ADDRLP4 296
ADDRGP4 G_FindEntityForEntityNum
CALLP4
ASGNP4
ADDRLP4 296
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $813
line 1378
;1378:	vehicle = G_FindEntityForEntityNum(client->vehiclenum);
ADDRLP4 0
INDIRP4
CNSTI4 1248
ADDP4
INDIRI4
ARGI4
ADDRLP4 300
ADDRGP4 G_FindEntityForEntityNum
CALLP4
ASGNP4
ADDRLP4 260
ADDRLP4 300
INDIRP4
ASGNP4
line 1379
;1379:	client->ps.stats[STAT_VEHICLE] = vehicle->vehicle;
ADDRLP4 0
INDIRP4
CNSTI4 232
ADDP4
ADDRLP4 260
INDIRP4
CNSTI4 1052
ADDP4
INDIRI4
ASGNI4
line 1380
;1380:	if(BG_VehicleCheckClass(vehicle->vehicle)){
ADDRLP4 260
INDIRP4
CNSTI4 1052
ADDP4
INDIRI4
ARGI4
ADDRLP4 304
ADDRGP4 BG_VehicleCheckClass
CALLI4
ASGNI4
ADDRLP4 304
INDIRI4
CNSTI4 0
EQI4 $813
line 1381
;1381:	client->ps.speed = BG_GetVehicleSettings(vehicle->vehicle, VSET_SPEED);
ADDRLP4 260
INDIRP4
CNSTI4 1052
ADDP4
INDIRI4
ARGI4
CNSTI4 0
ARGI4
ADDRLP4 308
ADDRGP4 BG_GetVehicleSettings
CALLF4
ASGNF4
ADDRLP4 0
INDIRP4
CNSTI4 52
ADDP4
ADDRLP4 308
INDIRF4
CVFI4 4
ASGNI4
line 1382
;1382:	client->ps.gravity = (g_gravity.value*g_gravityModifier.value)*BG_GetVehicleSettings(vehicle->vehicle, VSET_GRAVITY);
ADDRLP4 260
INDIRP4
CNSTI4 1052
ADDP4
INDIRI4
ARGI4
CNSTI4 1
ARGI4
ADDRLP4 312
ADDRGP4 BG_GetVehicleSettings
CALLF4
ASGNF4
ADDRLP4 0
INDIRP4
CNSTI4 48
ADDP4
ADDRGP4 g_gravity+8
INDIRF4
ADDRGP4 g_gravityModifier+8
INDIRF4
MULF4
ADDRLP4 312
INDIRF4
MULF4
CVFI4 4
ASGNI4
line 1383
;1383:	}
line 1384
;1384:	}
line 1385
;1385:	} else {
ADDRGP4 $813
JUMPV
LABELV $812
line 1386
;1386:	client->ps.stats[STAT_VEHICLE] = VCLASS_NONE;
ADDRLP4 0
INDIRP4
CNSTI4 232
ADDP4
CNSTI4 0
ASGNI4
line 1387
;1387:	}
LABELV $813
line 1389
;1388:	
;1389:	if( bg_itemlist[client->ps.stats[STAT_PERSISTANT_POWERUP]].giTag == PW_SCOUT ) {
CNSTI4 56
ADDRLP4 0
INDIRP4
CNSTI4 192
ADDP4
INDIRI4
MULI4
ADDRGP4 bg_itemlist+44
ADDP4
INDIRI4
CNSTI4 10
NEI4 $820
line 1390
;1390:		client->ps.speed *= g_scoutspeedfactor.value;
ADDRLP4 296
ADDRLP4 0
INDIRP4
CNSTI4 52
ADDP4
ASGNP4
ADDRLP4 296
INDIRP4
ADDRLP4 296
INDIRP4
INDIRI4
CVIF4 4
ADDRGP4 g_scoutspeedfactor+8
INDIRF4
MULF4
CVFI4 4
ASGNI4
line 1391
;1391:	}
LABELV $820
line 1392
;1392:	if( bg_itemlist[client->ps.stats[STAT_PERSISTANT_POWERUP]].giTag == PW_AMMOREGEN ) {
CNSTI4 56
ADDRLP4 0
INDIRP4
CNSTI4 192
ADDP4
INDIRI4
MULI4
ADDRGP4 bg_itemlist+44
ADDP4
INDIRI4
CNSTI4 13
NEI4 $824
line 1393
;1393:		client->ps.speed *= g_ammoregenspeedfactor.value;
ADDRLP4 296
ADDRLP4 0
INDIRP4
CNSTI4 52
ADDP4
ASGNP4
ADDRLP4 296
INDIRP4
ADDRLP4 296
INDIRP4
INDIRI4
CVIF4 4
ADDRGP4 g_ammoregenspeedfactor+8
INDIRF4
MULF4
CVFI4 4
ASGNI4
line 1394
;1394:	}
LABELV $824
line 1395
;1395:	if( bg_itemlist[client->ps.stats[STAT_PERSISTANT_POWERUP]].giTag == PW_DOUBLER ) {
CNSTI4 56
ADDRLP4 0
INDIRP4
CNSTI4 192
ADDP4
INDIRI4
MULI4
ADDRGP4 bg_itemlist+44
ADDP4
INDIRI4
CNSTI4 12
NEI4 $828
line 1396
;1396:		client->ps.speed *= g_doublerspeedfactor.value;
ADDRLP4 296
ADDRLP4 0
INDIRP4
CNSTI4 52
ADDP4
ASGNP4
ADDRLP4 296
INDIRP4
ADDRLP4 296
INDIRP4
INDIRI4
CVIF4 4
ADDRGP4 g_doublerspeedfactor+8
INDIRF4
MULF4
CVFI4 4
ASGNI4
line 1397
;1397:	}
LABELV $828
line 1398
;1398:	if( bg_itemlist[client->ps.stats[STAT_PERSISTANT_POWERUP]].giTag == PW_GUARD ) {
CNSTI4 56
ADDRLP4 0
INDIRP4
CNSTI4 192
ADDP4
INDIRI4
MULI4
ADDRGP4 bg_itemlist+44
ADDP4
INDIRI4
CNSTI4 11
NEI4 $832
line 1399
;1399:		client->ps.speed *= g_guardspeedfactor.value;
ADDRLP4 296
ADDRLP4 0
INDIRP4
CNSTI4 52
ADDP4
ASGNP4
ADDRLP4 296
INDIRP4
ADDRLP4 296
INDIRP4
INDIRI4
CVIF4 4
ADDRGP4 g_guardspeedfactor+8
INDIRF4
MULF4
CVFI4 4
ASGNI4
line 1400
;1400:	}
LABELV $832
line 1401
;1401:	if ( client->ps.powerups[PW_HASTE] ) {
ADDRLP4 0
INDIRP4
CNSTI4 324
ADDP4
INDIRI4
CNSTI4 0
EQI4 $836
line 1402
;1402:		client->ps.speed *= g_speedfactor.value;
ADDRLP4 296
ADDRLP4 0
INDIRP4
CNSTI4 52
ADDP4
ASGNP4
ADDRLP4 296
INDIRP4
ADDRLP4 296
INDIRP4
INDIRI4
CVIF4 4
ADDRGP4 g_speedfactor+8
INDIRF4
MULF4
CVFI4 4
ASGNI4
line 1403
;1403:	}
LABELV $836
line 1404
;1404:	if ( ent->botskill == 9 ) {
ADDRFP4 0
INDIRP4
CNSTI4 1040
ADDP4
INDIRI4
CNSTI4 9
NEI4 $839
line 1405
;1405:		client->ps.speed *= 2.75;
ADDRLP4 296
ADDRLP4 0
INDIRP4
CNSTI4 52
ADDP4
ASGNP4
ADDRLP4 296
INDIRP4
CNSTF4 1076887552
ADDRLP4 296
INDIRP4
INDIRI4
CVIF4 4
MULF4
CVFI4 4
ASGNI4
line 1406
;1406:	}
LABELV $839
line 1409
;1407:
;1408:	// Let go of the hook if we aren't firing
;1409:	if ( client->ps.weapon == WP_GRAPPLING_HOOK &&
ADDRLP4 0
INDIRP4
CNSTI4 144
ADDP4
INDIRI4
CNSTI4 10
NEI4 $841
ADDRLP4 0
INDIRP4
CNSTI4 1344
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $841
ADDRLP4 248
INDIRP4
CNSTI4 16
ADDP4
INDIRI4
CNSTI4 1
BANDI4
CNSTI4 0
NEI4 $841
line 1410
;1410:		client->hook && !( ucmd->buttons & BUTTON_ATTACK ) ) {
line 1411
;1411:		Weapon_HookFree(client->hook);
ADDRLP4 0
INDIRP4
CNSTI4 1344
ADDP4
INDIRP4
ARGP4
ADDRGP4 Weapon_HookFree
CALLV
pop
line 1412
;1412:	}
LABELV $841
line 1415
;1413:
;1414:	// set up for pmove
;1415:	oldEventSequence = client->ps.eventSequence;
ADDRLP4 256
ADDRLP4 0
INDIRP4
CNSTI4 108
ADDP4
INDIRI4
ASGNI4
line 1417
;1416:
;1417:	memset (&pm, 0, sizeof(pm));
ADDRLP4 4
ARGP4
CNSTI4 0
ARGI4
CNSTI4 244
ARGI4
ADDRGP4 memset
CALLP4
pop
line 1421
;1418:
;1419:	// check for the hit-scan gauntlet, don't let the action
;1420:	// go through as an attack unless it actually hits something
;1421:	if ( client->ps.weapon == WP_GAUNTLET && !( ucmd->buttons & BUTTON_TALK ) &&
ADDRLP4 304
CNSTI4 1
ASGNI4
ADDRLP4 0
INDIRP4
CNSTI4 144
ADDP4
INDIRI4
ADDRLP4 304
INDIRI4
NEI4 $843
ADDRLP4 308
ADDRLP4 248
INDIRP4
CNSTI4 16
ADDP4
INDIRI4
ASGNI4
ADDRLP4 312
CNSTI4 0
ASGNI4
ADDRLP4 308
INDIRI4
CNSTI4 2
BANDI4
ADDRLP4 312
INDIRI4
NEI4 $843
ADDRLP4 308
INDIRI4
ADDRLP4 304
INDIRI4
BANDI4
ADDRLP4 312
INDIRI4
EQI4 $843
ADDRLP4 0
INDIRP4
CNSTI4 44
ADDP4
INDIRI4
ADDRLP4 312
INDIRI4
GTI4 $843
line 1422
;1422:		( ucmd->buttons & BUTTON_ATTACK ) && client->ps.weaponTime <= 0 ) {
line 1423
;1423:		pm.gauntletHit = CheckGauntletAttack( ent );
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 316
ADDRGP4 CheckGauntletAttack
CALLI4
ASGNI4
ADDRLP4 4+44
ADDRLP4 316
INDIRI4
ASGNI4
line 1424
;1424:	}
LABELV $843
line 1426
;1425:
;1426:	if ( ent->flags & FL_FORCE_GESTURE ) {
ADDRFP4 0
INDIRP4
CNSTI4 576
ADDP4
INDIRI4
CNSTI4 32768
BANDI4
CNSTI4 0
EQI4 $846
line 1427
;1427:		ent->flags &= ~FL_FORCE_GESTURE;
ADDRLP4 316
ADDRFP4 0
INDIRP4
CNSTI4 576
ADDP4
ASGNP4
ADDRLP4 316
INDIRP4
ADDRLP4 316
INDIRP4
INDIRI4
CNSTI4 -32769
BANDI4
ASGNI4
line 1428
;1428:		ent->client->pers.cmd.buttons |= BUTTON_GESTURE;
ADDRLP4 320
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 492
ADDP4
ASGNP4
ADDRLP4 320
INDIRP4
ADDRLP4 320
INDIRP4
INDIRI4
CNSTI4 8
BORI4
ASGNI4
line 1429
;1429:	}
LABELV $846
line 1432
;1430:
;1431:	// check for invulnerability expansion before doing the Pmove
;1432:	if (client->ps.powerups[PW_INVULNERABILITY] ) {
ADDRLP4 0
INDIRP4
CNSTI4 368
ADDP4
INDIRI4
CNSTI4 0
EQI4 $848
line 1433
;1433:		if ( !(client->ps.pm_flags & PMF_INVULEXPAND) ) {
ADDRLP4 0
INDIRP4
CNSTI4 12
ADDP4
INDIRI4
CNSTI4 16384
BANDI4
CNSTI4 0
NEI4 $850
line 1434
;1434:			vec3_t mins = { -42, -42, -42 };
ADDRLP4 316
ADDRGP4 $852
INDIRB
ASGNB 12
line 1435
;1435:			vec3_t maxs = { 42, 42, 42 };
ADDRLP4 328
ADDRGP4 $853
INDIRB
ASGNB 12
line 1438
;1436:			vec3_t oldmins, oldmaxs;
;1437:
;1438:			VectorCopy (ent->r.mins, oldmins);
ADDRLP4 340
ADDRFP4 0
INDIRP4
CNSTI4 476
ADDP4
INDIRB
ASGNB 12
line 1439
;1439:			VectorCopy (ent->r.maxs, oldmaxs);
ADDRLP4 352
ADDRFP4 0
INDIRP4
CNSTI4 488
ADDP4
INDIRB
ASGNB 12
line 1441
;1440:			// expand
;1441:			VectorCopy (mins, ent->r.mins);
ADDRFP4 0
INDIRP4
CNSTI4 476
ADDP4
ADDRLP4 316
INDIRB
ASGNB 12
line 1442
;1442:			VectorCopy (maxs, ent->r.maxs);
ADDRFP4 0
INDIRP4
CNSTI4 488
ADDP4
ADDRLP4 328
INDIRB
ASGNB 12
line 1443
;1443:			trap_LinkEntity(ent);
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 trap_LinkEntity
CALLV
pop
line 1445
;1444:			// check if this would get anyone stuck in this player
;1445:			if ( !StuckInOtherClient(ent) ) {
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 364
ADDRGP4 StuckInOtherClient
CALLI4
ASGNI4
ADDRLP4 364
INDIRI4
CNSTI4 0
NEI4 $854
line 1447
;1446:				// set flag so the expanded size will be set in PM_CheckDuck
;1447:				client->ps.pm_flags |= PMF_INVULEXPAND;
ADDRLP4 368
ADDRLP4 0
INDIRP4
CNSTI4 12
ADDP4
ASGNP4
ADDRLP4 368
INDIRP4
ADDRLP4 368
INDIRP4
INDIRI4
CNSTI4 16384
BORI4
ASGNI4
line 1448
;1448:			}
LABELV $854
line 1450
;1449:			// set back
;1450:			VectorCopy (oldmins, ent->r.mins);
ADDRFP4 0
INDIRP4
CNSTI4 476
ADDP4
ADDRLP4 340
INDIRB
ASGNB 12
line 1451
;1451:			VectorCopy (oldmaxs, ent->r.maxs);
ADDRFP4 0
INDIRP4
CNSTI4 488
ADDP4
ADDRLP4 352
INDIRB
ASGNB 12
line 1452
;1452:			trap_LinkEntity(ent);
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 trap_LinkEntity
CALLV
pop
line 1453
;1453:		}
LABELV $850
line 1454
;1454:	}
LABELV $848
line 1456
;1455:
;1456:	pm.ps = &client->ps;
ADDRLP4 4
ADDRLP4 0
INDIRP4
ASGNP4
line 1457
;1457:	pm.cmd = *ucmd;
ADDRLP4 4+8
ADDRLP4 248
INDIRP4
INDIRB
ASGNB 24
line 1458
;1458:	if ( pm.ps->pm_type == PM_DEAD ) {
ADDRLP4 4
INDIRP4
CNSTI4 4
ADDP4
INDIRI4
CNSTI4 3
NEI4 $857
line 1459
;1459:		pm.tracemask = MASK_PLAYERSOLID & ~CONTENTS_BODY;
ADDRLP4 4+32
CNSTI4 65537
ASGNI4
line 1460
;1460:	}
ADDRGP4 $858
JUMPV
LABELV $857
line 1461
;1461:	else if ( ent->r.svFlags & SVF_BOT ) {
ADDRFP4 0
INDIRP4
CNSTI4 464
ADDP4
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
EQI4 $860
line 1462
;1462:		pm.tracemask = MASK_PLAYERSOLID | CONTENTS_BOTCLIP;
ADDRLP4 4+32
CNSTI4 37814273
ASGNI4
line 1463
;1463:	}
ADDRGP4 $861
JUMPV
LABELV $860
line 1464
;1464:	else {
line 1465
;1465:		pm.tracemask = MASK_PLAYERSOLID;
ADDRLP4 4+32
CNSTI4 33619969
ASGNI4
line 1466
;1466:	}
LABELV $861
LABELV $858
line 1467
;1467:	pm.trace = trap_Trace;
ADDRLP4 4+236
ADDRGP4 trap_Trace
ASGNP4
line 1468
;1468:	pm.pointcontents = trap_PointContents;
ADDRLP4 4+240
ADDRGP4 trap_PointContents
ASGNP4
line 1469
;1469:	pm.debugLevel = g_debugMove.integer;
ADDRLP4 4+36
ADDRGP4 g_debugMove+12
INDIRI4
ASGNI4
line 1470
;1470:	pm.noFootsteps = ( g_dmflags.integer & DF_NO_FOOTSTEPS ) > 0;
ADDRGP4 g_dmflags+12
INDIRI4
CNSTI4 32
BANDI4
CNSTI4 0
LEI4 $871
ADDRLP4 316
CNSTI4 1
ASGNI4
ADDRGP4 $872
JUMPV
LABELV $871
ADDRLP4 316
CNSTI4 0
ASGNI4
LABELV $872
ADDRLP4 4+40
ADDRLP4 316
INDIRI4
ASGNI4
line 1472
;1471:
;1472:	pm.pmove_fixed = pmove_fixed.integer | client->pers.pmoveFixed;
ADDRLP4 4+220
ADDRGP4 pmove_fixed+12
INDIRI4
ADDRLP4 0
INDIRP4
CNSTI4 512
ADDP4
INDIRI4
BORI4
ASGNI4
line 1473
;1473:	pm.pmove_msec = pmove_msec.integer;
ADDRLP4 4+224
ADDRGP4 pmove_msec+12
INDIRI4
ASGNI4
line 1474
;1474:        pm.pmove_float = pmove_float.integer;
ADDRLP4 4+228
ADDRGP4 pmove_float+12
INDIRI4
ASGNI4
line 1475
;1475:        pm.pmove_flags = g_dmflags.integer;
ADDRLP4 4+232
ADDRGP4 g_dmflags+12
INDIRI4
ASGNI4
line 1477
;1476:
;1477:	VectorCopy( client->ps.origin, client->oldOrigin );
ADDRLP4 0
INDIRP4
CNSTI4 1252
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 20
ADDP4
INDIRB
ASGNB 12
line 1480
;1478:
;1479:        #ifdef MISSIONPACK
;1480:		if (level.intermissionQueued != 0 && g_singlePlayer.integer) {
ADDRLP4 324
CNSTI4 0
ASGNI4
ADDRGP4 level+9908
INDIRI4
ADDRLP4 324
INDIRI4
EQI4 $881
ADDRGP4 g_singlePlayer+12
INDIRI4
ADDRLP4 324
INDIRI4
EQI4 $881
line 1481
;1481:			if ( level.time - level.intermissionQueued >= 1000  ) {
ADDRGP4 level+32
INDIRI4
ADDRGP4 level+9908
INDIRI4
SUBI4
CNSTI4 1000
LTI4 $885
line 1482
;1482:				pm.cmd.buttons = 0;
ADDRLP4 4+8+16
CNSTI4 0
ASGNI4
line 1483
;1483:				pm.cmd.forwardmove = 0;
ADDRLP4 4+8+21
CNSTI1 0
ASGNI1
line 1484
;1484:				pm.cmd.rightmove = 0;
ADDRLP4 4+8+22
CNSTI1 0
ASGNI1
line 1485
;1485:				pm.cmd.upmove = 0;
ADDRLP4 4+8+23
CNSTI1 0
ASGNI1
line 1486
;1486:				if ( level.time - level.intermissionQueued >= 2000 && level.time - level.intermissionQueued <= 2500 ) {
ADDRGP4 level+32
INDIRI4
ADDRGP4 level+9908
INDIRI4
SUBI4
CNSTI4 2000
LTI4 $897
ADDRGP4 level+32
INDIRI4
ADDRGP4 level+9908
INDIRI4
SUBI4
CNSTI4 2500
GTI4 $897
line 1487
;1487:					trap_SendConsoleCommand( EXEC_APPEND, "centerview\n");
CNSTI4 2
ARGI4
ADDRGP4 $903
ARGP4
ADDRGP4 trap_SendConsoleCommand
CALLV
pop
line 1488
;1488:				}
LABELV $897
line 1489
;1489:				ent->client->ps.pm_type = PM_SPINTERMISSION;
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 4
ADDP4
CNSTI4 6
ASGNI4
line 1490
;1490:			}
LABELV $885
line 1491
;1491:		}
LABELV $881
line 1493
;1492:        #endif
;1493:	Pmove (&pm);
ADDRLP4 4
ARGP4
ADDRGP4 Pmove
CALLV
pop
line 1496
;1494:
;1495:	// save results of pmove
;1496:	if ( ent->client->ps.eventSequence != oldEventSequence ) {
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 108
ADDP4
INDIRI4
ADDRLP4 256
INDIRI4
EQI4 $904
line 1497
;1497:		ent->eventTime = level.time;
ADDRFP4 0
INDIRP4
CNSTI4 592
ADDP4
ADDRGP4 level+32
INDIRI4
ASGNI4
line 1498
;1498:	}
LABELV $904
line 1499
;1499:	BG_PlayerStateToEntityState( &ent->client->ps, &ent->s, qtrue );
ADDRLP4 328
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 328
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
ARGP4
ADDRLP4 328
INDIRP4
ARGP4
CNSTI4 1
ARGI4
ADDRGP4 BG_PlayerStateToEntityState
CALLV
pop
line 1500
;1500:	SendPendingPredictableEvents( &ent->client->ps );
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
ARGP4
ADDRGP4 SendPendingPredictableEvents
CALLV
pop
line 1502
;1501:
;1502:	if ( !( ent->client->ps.eFlags & EF_FIRING ) ) {
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 104
ADDP4
INDIRI4
CNSTI4 256
BANDI4
CNSTI4 0
NEI4 $907
line 1503
;1503:		client->fireHeld = qfalse;		// for grapple
ADDRLP4 0
INDIRP4
CNSTI4 1340
ADDP4
CNSTI4 0
ASGNI4
line 1504
;1504:	}
LABELV $907
line 1507
;1505:
;1506:	// use the snapped origin for linking so it matches client predicted versions
;1507:	VectorCopy( ent->s.pos.trBase, ent->r.currentOrigin );
ADDRLP4 332
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 332
INDIRP4
CNSTI4 528
ADDP4
ADDRLP4 332
INDIRP4
CNSTI4 24
ADDP4
INDIRB
ASGNB 12
line 1509
;1508:
;1509:	VectorCopy (pm.mins, ent->r.mins);
ADDRFP4 0
INDIRP4
CNSTI4 476
ADDP4
ADDRLP4 4+184
INDIRB
ASGNB 12
line 1510
;1510:	VectorCopy (pm.maxs, ent->r.maxs);
ADDRFP4 0
INDIRP4
CNSTI4 488
ADDP4
ADDRLP4 4+196
INDIRB
ASGNB 12
line 1512
;1511:
;1512:	ent->waterlevel = pm.waterlevel;
ADDRFP4 0
INDIRP4
CNSTI4 992
ADDP4
ADDRLP4 4+212
INDIRI4
ASGNI4
line 1513
;1513:	ent->watertype = pm.watertype;
ADDRFP4 0
INDIRP4
CNSTI4 988
ADDP4
ADDRLP4 4+208
INDIRI4
ASGNI4
line 1514
;1514:	ent->client->ps.stats[STAT_SWEP] = ent->swep_id;
ADDRLP4 336
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 336
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 224
ADDP4
ADDRLP4 336
INDIRP4
CNSTI4 2444
ADDP4
INDIRI4
ASGNI4
line 1515
;1515:	ent->client->ps.stats[STAT_SWEPAMMO] = ent->swep_ammo[ent->swep_id];
ADDRLP4 340
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 340
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 228
ADDP4
ADDRLP4 340
INDIRP4
CNSTI4 2444
ADDP4
INDIRI4
CNSTI4 2
LSHI4
ADDRLP4 340
INDIRP4
CNSTI4 2368
ADDP4
ADDP4
INDIRI4
ASGNI4
line 1516
;1516:	ent->s.generic3 = ent->swep_ammo[ent->swep_id];
ADDRLP4 344
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 344
INDIRP4
CNSTI4 224
ADDP4
ADDRLP4 344
INDIRP4
CNSTI4 2444
ADDP4
INDIRI4
CNSTI4 2
LSHI4
ADDRLP4 344
INDIRP4
CNSTI4 2368
ADDP4
ADDP4
INDIRI4
ASGNI4
line 1517
;1517:	if(ent->singlebot){
ADDRFP4 0
INDIRP4
CNSTI4 1028
ADDP4
INDIRI4
CNSTI4 0
EQI4 $913
line 1518
;1518:	if(!G_NpcFactionProp(NP_PICKUP, ent)){
CNSTI4 8
ARGI4
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 348
ADDRGP4 G_NpcFactionProp
CALLI4
ASGNI4
ADDRLP4 348
INDIRI4
CNSTI4 0
NEI4 $915
line 1519
;1519:	ent->client->ps.stats[STAT_NO_PICKUP] = 1;
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 216
ADDP4
CNSTI4 1
ASGNI4
line 1520
;1520:	ent->wait_to_pickup = 70000000;
ADDRFP4 0
INDIRP4
CNSTI4 1024
ADDP4
CNSTI4 70000000
ASGNI4
line 1521
;1521:	}}
LABELV $915
LABELV $913
line 1524
;1522:
;1523:	// execute client events
;1524:	ClientEvents( ent, oldEventSequence );
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 256
INDIRI4
ARGI4
ADDRGP4 ClientEvents
CALLV
pop
line 1527
;1525:
;1526:	// link entity now, after any personal teleporters have been used
;1527:	trap_LinkEntity (ent);
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 trap_LinkEntity
CALLV
pop
line 1528
;1528:	if ( !ent->client->noclip ) {
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 1232
ADDP4
INDIRI4
CNSTI4 0
NEI4 $917
line 1529
;1529:		G_TouchTriggers( ent );
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 G_TouchTriggers
CALLV
pop
line 1530
;1530:		G_KillVoid( ent );
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 G_KillVoid
CALLV
pop
line 1531
;1531:	}
LABELV $917
line 1534
;1532:
;1533:	// NOTE: now copy the exact origin over otherwise clients can be snapped into solid
;1534:	VectorCopy( ent->client->ps.origin, ent->r.currentOrigin );
ADDRLP4 348
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 348
INDIRP4
CNSTI4 528
ADDP4
ADDRLP4 348
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 20
ADDP4
INDIRB
ASGNB 12
line 1537
;1535:
;1536:	//test for solid areas in the AAS file
;1537:	BotTestAAS(ent->r.currentOrigin);
ADDRFP4 0
INDIRP4
CNSTI4 528
ADDP4
ARGP4
ADDRGP4 BotTestAAS
CALLV
pop
line 1540
;1538:
;1539:	// touch other objects
;1540:	ClientImpacts( ent, &pm );
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 4
ARGP4
ADDRGP4 ClientImpacts
CALLV
pop
line 1543
;1541:
;1542:	// save results of triggers and client events
;1543:	if (ent->client->ps.eventSequence != oldEventSequence) {
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 108
ADDP4
INDIRI4
ADDRLP4 256
INDIRI4
EQI4 $919
line 1544
;1544:		ent->eventTime = level.time;
ADDRFP4 0
INDIRP4
CNSTI4 592
ADDP4
ADDRGP4 level+32
INDIRI4
ASGNI4
line 1545
;1545:	}
LABELV $919
line 1548
;1546:
;1547:	// swap and latch button actions
;1548:	client->oldbuttons = client->buttons;
ADDRLP4 0
INDIRP4
CNSTI4 1240
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 1236
ADDP4
INDIRI4
ASGNI4
line 1549
;1549:	client->buttons = ucmd->buttons;
ADDRLP4 0
INDIRP4
CNSTI4 1236
ADDP4
ADDRLP4 248
INDIRP4
CNSTI4 16
ADDP4
INDIRI4
ASGNI4
line 1550
;1550:	client->latched_buttons |= client->buttons & ~client->oldbuttons;
ADDRLP4 360
ADDRLP4 0
INDIRP4
CNSTI4 1244
ADDP4
ASGNP4
ADDRLP4 360
INDIRP4
ADDRLP4 360
INDIRP4
INDIRI4
ADDRLP4 0
INDIRP4
CNSTI4 1236
ADDP4
INDIRI4
ADDRLP4 0
INDIRP4
CNSTI4 1240
ADDP4
INDIRI4
BCOMI4
BANDI4
BORI4
ASGNI4
line 1552
;1551:
;1552:	PhysgunHold( ent );
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 PhysgunHold
CALLV
pop
line 1553
;1553:	GravitygunHold( ent );
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 GravitygunHold
CALLV
pop
line 1555
;1554:	
;1555:	CheckCarCollisions( ent );
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 CheckCarCollisions
CALLV
pop
line 1558
;1556:
;1557:	// check for respawning
;1558:	if ( client->ps.stats[STAT_HEALTH] <= 0 ) {
ADDRLP4 0
INDIRP4
CNSTI4 184
ADDP4
INDIRI4
CNSTI4 0
GTI4 $922
line 1564
;1559:		// wait for the attack button to be pressed
;1560:		// forcerespawn is to prevent users from waiting out powerups
;1561:		// In Last man standing, we force a quick respawn, since
;1562:		// the player must be able to loose health
;1563:		// pressing attack or use is the normal respawn method
;1564:		if ( ( level.time > client->respawnTime ) &&
ADDRLP4 364
ADDRLP4 0
INDIRP4
CNSTI4 1316
ADDP4
INDIRI4
ASGNI4
ADDRGP4 level+32
INDIRI4
ADDRLP4 364
INDIRI4
LEI4 $704
ADDRGP4 g_forcerespawn+12
INDIRI4
CNSTI4 0
LEI4 $935
ADDRGP4 level+32
INDIRI4
ADDRLP4 364
INDIRI4
SUBI4
CNSTI4 1000
ADDRGP4 g_forcerespawn+12
INDIRI4
MULI4
GTI4 $936
LABELV $935
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 11
EQI4 $939
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 9
EQI4 $939
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 10
NEI4 $937
LABELV $939
ADDRGP4 level+32
INDIRI4
ADDRLP4 0
INDIRP4
CNSTI4 1316
ADDP4
INDIRI4
SUBI4
CNSTI4 0
GTI4 $936
LABELV $937
ADDRLP4 248
INDIRP4
CNSTI4 16
ADDP4
INDIRI4
CNSTI4 5
BANDI4
CNSTI4 0
EQI4 $704
LABELV $936
line 1571
;1565:			( ( ( g_forcerespawn.integer > 0 ) &&
;1566:			( level.time - client->respawnTime  > g_forcerespawn.integer * 1000 ) ) ||
;1567:			( ( ( g_gametype.integer == GT_LMS ) ||
;1568:			( g_gametype.integer == GT_ELIMINATION ) ||
;1569:			( g_gametype.integer == GT_CTF_ELIMINATION ) ) &&
;1570:			( level.time - client->respawnTime > 0 ) ) ||
;1571:			( ucmd->buttons & ( BUTTON_ATTACK | BUTTON_USE_HOLDABLE ) ) ) ) {
line 1573
;1572:
;1573:			ClientRespawn( ent );
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 ClientRespawn
CALLV
pop
line 1574
;1574:		}
line 1575
;1575:		return;
ADDRGP4 $704
JUMPV
LABELV $922
line 1578
;1576:	}
;1577:
;1578:        if ( pm.waterlevel <= 1 && pm.ps->groundEntityNum!=ENTITYNUM_NONE && client->lastSentFlyingTime+500>level.time) {
ADDRLP4 4+212
INDIRI4
CNSTI4 1
GTI4 $940
ADDRLP4 4
INDIRP4
CNSTI4 68
ADDP4
INDIRI4
CNSTI4 4095
EQI4 $940
ADDRLP4 0
INDIRP4
CNSTI4 1452
ADDP4
INDIRI4
CNSTI4 500
ADDI4
ADDRGP4 level+32
INDIRI4
LEI4 $940
line 1579
;1579:			if ( ! (pm.ps->pm_flags & PMF_TIME_KNOCKBACK) ) {
ADDRLP4 4
INDIRP4
CNSTI4 12
ADDP4
INDIRI4
CNSTI4 64
BANDI4
CNSTI4 0
NEI4 $944
line 1580
;1580:                            client->lastSentFlying = -1;
ADDRLP4 0
INDIRP4
CNSTI4 1448
ADDP4
CNSTI4 -1
ASGNI4
line 1581
;1581:			}
LABELV $944
line 1582
;1582:	}
LABELV $940
line 1585
;1583:
;1584:	// perform once-a-second actions
;1585:	ClientTimerActions( ent, msec );
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 252
INDIRI4
ARGI4
ADDRGP4 ClientTimerActions
CALLV
pop
line 1586
;1586:}
LABELV $704
endproc ClientThink_real 372 12
export ClientThink
proc ClientThink 8 8
line 1595
;1587:
;1588:/*
;1589:==================
;1590:ClientThink
;1591:
;1592:A new command has arrived from the client
;1593:==================
;1594:*/
;1595:void ClientThink( int clientNum ) {
line 1598
;1596:	gentity_t *ent;
;1597:
;1598:	ent = g_entities + clientNum;
ADDRLP4 0
CNSTI4 2492
ADDRFP4 0
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ASGNP4
line 1599
;1599:	trap_GetUsercmd( clientNum, &ent->client->pers.cmd );
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 476
ADDP4
ARGP4
ADDRGP4 trap_GetUsercmd
CALLV
pop
line 1601
;1600:
;1601:	if ( !(ent->r.svFlags & SVF_BOT) && !g_synchronousClients.integer ) {
ADDRLP4 4
CNSTI4 0
ASGNI4
ADDRLP4 0
INDIRP4
CNSTI4 464
ADDP4
INDIRI4
CNSTI4 8
BANDI4
ADDRLP4 4
INDIRI4
NEI4 $947
ADDRGP4 g_synchronousClients+12
INDIRI4
ADDRLP4 4
INDIRI4
NEI4 $947
line 1602
;1602:		ClientThink_real( ent );
ADDRLP4 0
INDIRP4
ARGP4
ADDRGP4 ClientThink_real
CALLV
pop
line 1603
;1603:	}
LABELV $947
line 1604
;1604:}
LABELV $946
endproc ClientThink 8 8
export G_RunClient
proc G_RunClient 4 4
line 1607
;1605:
;1606:
;1607:void G_RunClient( gentity_t *ent ) {
line 1608
;1608:	if ( !(ent->r.svFlags & SVF_BOT) && !g_synchronousClients.integer ) {
ADDRLP4 0
CNSTI4 0
ASGNI4
ADDRFP4 0
INDIRP4
CNSTI4 464
ADDP4
INDIRI4
CNSTI4 8
BANDI4
ADDRLP4 0
INDIRI4
NEI4 $951
ADDRGP4 g_synchronousClients+12
INDIRI4
ADDRLP4 0
INDIRI4
NEI4 $951
line 1609
;1609:		return;
ADDRGP4 $950
JUMPV
LABELV $951
line 1611
;1610:	}
;1611:	ent->client->pers.cmd.serverTime = level.time;
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 476
ADDP4
ADDRGP4 level+32
INDIRI4
ASGNI4
line 1612
;1612:	ClientThink_real( ent );
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 ClientThink_real
CALLV
pop
line 1613
;1613:}
LABELV $950
endproc G_RunClient 4 4
export G_CheckSwep
proc G_CheckSwep 4 4
line 1615
;1614:
;1615:qboolean G_CheckSwep( int clientNum, int wp, int finish ) {
line 1618
;1616:gentity_t *ent;
;1617:
;1618:ent = g_entities + clientNum;
ADDRLP4 0
CNSTI4 2492
ADDRFP4 0
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ASGNP4
line 1620
;1619:
;1620:if(ent->swep_list[wp] == 1){
ADDRFP4 4
INDIRI4
CNSTI4 2
LSHI4
ADDRLP4 0
INDIRP4
CNSTI4 2292
ADDP4
ADDP4
INDIRI4
CNSTI4 1
NEI4 $956
line 1621
;1621:	if(finish){
ADDRFP4 8
INDIRI4
CNSTI4 0
EQI4 $958
line 1622
;1622:	ent->swep_id = wp;
ADDRLP4 0
INDIRP4
CNSTI4 2444
ADDP4
ADDRFP4 4
INDIRI4
ASGNI4
line 1623
;1623:	}
LABELV $958
line 1624
;1624:	ClientUserinfoChanged(clientNum);
ADDRFP4 0
INDIRI4
ARGI4
ADDRGP4 ClientUserinfoChanged
CALLV
pop
line 1625
;1625:	return qtrue;
CNSTI4 1
RETI4
ADDRGP4 $955
JUMPV
LABELV $956
line 1626
;1626:} else {
line 1627
;1627:	return qfalse;
CNSTI4 0
RETI4
LABELV $955
endproc G_CheckSwep 4 4
export G_CheckSwepAmmo
proc G_CheckSwepAmmo 4 0
line 1631
;1628:}
;1629:}
;1630:
;1631:int G_CheckSwepAmmo( int clientNum, int wp ) {
line 1634
;1632:gentity_t *ent;
;1633:
;1634:ent = g_entities + clientNum;
ADDRLP4 0
CNSTI4 2492
ADDRFP4 0
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ASGNP4
line 1636
;1635:
;1636:return ent->swep_ammo[wp];
ADDRFP4 4
INDIRI4
CNSTI4 2
LSHI4
ADDRLP4 0
INDIRP4
CNSTI4 2368
ADDP4
ADDP4
INDIRI4
RETI4
LABELV $960
endproc G_CheckSwepAmmo 4 0
export PM_Add_SwepAmmo
proc PM_Add_SwepAmmo 8 0
line 1639
;1637:}
;1638:
;1639:void PM_Add_SwepAmmo( int clientNum, int wp, int count ) {
line 1642
;1640:	gentity_t *ent;
;1641:
;1642:	ent = g_entities + clientNum;
ADDRLP4 0
CNSTI4 2492
ADDRFP4 0
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ASGNP4
line 1644
;1643:	
;1644:if(!(ent->swep_ammo[wp] == -1)){
ADDRFP4 4
INDIRI4
CNSTI4 2
LSHI4
ADDRLP4 0
INDIRP4
CNSTI4 2368
ADDP4
ADDP4
INDIRI4
CNSTI4 -1
EQI4 $962
line 1645
;1645:if(!(ent->swep_ammo[wp] >= 9999)){
ADDRFP4 4
INDIRI4
CNSTI4 2
LSHI4
ADDRLP4 0
INDIRP4
CNSTI4 2368
ADDP4
ADDP4
INDIRI4
CNSTI4 9999
GEI4 $964
line 1646
;1646:	ent->swep_ammo[wp] += count;
ADDRLP4 4
ADDRFP4 4
INDIRI4
CNSTI4 2
LSHI4
ADDRLP4 0
INDIRP4
CNSTI4 2368
ADDP4
ADDP4
ASGNP4
ADDRLP4 4
INDIRP4
ADDRLP4 4
INDIRP4
INDIRI4
ADDRFP4 8
INDIRI4
ADDI4
ASGNI4
line 1648
;1647:	
;1648:}
LABELV $964
line 1649
;1649:}
LABELV $962
line 1650
;1650:}
LABELV $961
endproc PM_Add_SwepAmmo 8 0
export G_DefaultSwep
proc G_DefaultSwep 4 4
line 1652
;1651:
;1652:void G_DefaultSwep( int clientNum, int wp ) {
line 1655
;1653:gentity_t *ent;
;1654:
;1655:ent = g_entities + clientNum;
ADDRLP4 0
CNSTI4 2492
ADDRFP4 0
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ASGNP4
line 1656
;1656:ent->swep_id = wp;
ADDRLP4 0
INDIRP4
CNSTI4 2444
ADDP4
ADDRFP4 4
INDIRI4
ASGNI4
line 1657
;1657:ClientUserinfoChanged(clientNum);
ADDRFP4 0
INDIRI4
ARGI4
ADDRGP4 ClientUserinfoChanged
CALLV
pop
line 1659
;1658:
;1659:return;
LABELV $966
endproc G_DefaultSwep 4 4
export SpectatorClientEndFrame
proc SpectatorClientEndFrame 96 4
line 1669
;1660:}
;1661:
;1662:
;1663:/*
;1664:==================
;1665:SpectatorClientEndFrame
;1666:
;1667:==================
;1668:*/
;1669:void SpectatorClientEndFrame( gentity_t *ent ) {
line 1674
;1670:	gclient_t	*cl;
;1671:	int i, preservedScore[MAX_PERSISTANT]; //for keeping in elimination
;1672:
;1673:	// if we are doing a chase cam or a remote view, grab the latest info
;1674:	if ( ent->client->sess.spectatorState == SPECTATOR_FOLLOW ) {
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 1040
ADDP4
INDIRI4
CNSTI4 2
NEI4 $968
line 1677
;1675:		int		clientNum, flags;
;1676:
;1677:		clientNum = ent->client->sess.spectatorClient;
ADDRLP4 72
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 1044
ADDP4
INDIRI4
ASGNI4
line 1680
;1678:
;1679:		// team follow1 and team follow2 go to whatever clients are playing
;1680:		if ( clientNum == -1 ) {
ADDRLP4 72
INDIRI4
CNSTI4 -1
NEI4 $970
line 1681
;1681:			clientNum = level.follow1;
ADDRLP4 72
ADDRGP4 level+1108
INDIRI4
ASGNI4
line 1682
;1682:		} else if ( clientNum == -2 ) {
ADDRGP4 $971
JUMPV
LABELV $970
ADDRLP4 72
INDIRI4
CNSTI4 -2
NEI4 $973
line 1683
;1683:			clientNum = level.follow2;
ADDRLP4 72
ADDRGP4 level+1112
INDIRI4
ASGNI4
line 1684
;1684:		}
LABELV $973
LABELV $971
line 1685
;1685:		if ( clientNum >= 0 ) {
ADDRLP4 72
INDIRI4
CNSTI4 0
LTI4 $976
line 1686
;1686:			cl = &level.clients[ clientNum ];
ADDRLP4 68
CNSTI4 2324
ADDRLP4 72
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
ASGNP4
line 1687
;1687:			if ( cl->pers.connected == CON_CONNECTED && cl->sess.sessionTeam != TEAM_SPECTATOR ) {
ADDRLP4 80
ADDRLP4 68
INDIRP4
ASGNP4
ADDRLP4 80
INDIRP4
CNSTI4 472
ADDP4
INDIRI4
CNSTI4 2
NEI4 $978
ADDRLP4 80
INDIRP4
CNSTI4 1032
ADDP4
INDIRI4
CNSTI4 3
EQI4 $978
line 1688
;1688:				flags = (cl->ps.eFlags & ~(EF_VOTED | EF_TEAMVOTED)) | (ent->client->ps.eFlags & (EF_VOTED | EF_TEAMVOTED));
ADDRLP4 84
CNSTI4 104
ASGNI4
ADDRLP4 76
ADDRLP4 68
INDIRP4
ADDRLP4 84
INDIRI4
ADDP4
INDIRI4
CNSTI4 -540673
BANDI4
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
ADDRLP4 84
INDIRI4
ADDP4
INDIRI4
CNSTI4 540672
BANDI4
BORI4
ASGNI4
line 1690
;1689:				//this is here LMS/Elimination goes wrong with player follow
;1690:				if(ent->client->sess.sessionTeam!=TEAM_SPECTATOR){
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 1032
ADDP4
INDIRI4
CNSTI4 3
EQI4 $980
line 1691
;1691:					for(i = 0; i < MAX_PERSISTANT; i++)
ADDRLP4 0
CNSTI4 0
ASGNI4
LABELV $982
line 1692
;1692:						preservedScore[i] = ent->client->ps.persistant[i];
ADDRLP4 88
ADDRLP4 0
INDIRI4
CNSTI4 2
LSHI4
ASGNI4
ADDRLP4 88
INDIRI4
ADDRLP4 4
ADDP4
ADDRLP4 88
INDIRI4
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 248
ADDP4
ADDP4
INDIRI4
ASGNI4
LABELV $983
line 1691
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 0
INDIRI4
CNSTI4 16
LTI4 $982
line 1693
;1693:					ent->client->ps = cl->ps;
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
ADDRLP4 68
INDIRP4
INDIRB
ASGNB 472
line 1694
;1694:					for(i = 0; i < MAX_PERSISTANT; i++)
ADDRLP4 0
CNSTI4 0
ASGNI4
LABELV $986
line 1695
;1695:						ent->client->ps.persistant[i] = preservedScore[i];
ADDRLP4 92
ADDRLP4 0
INDIRI4
CNSTI4 2
LSHI4
ASGNI4
ADDRLP4 92
INDIRI4
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 248
ADDP4
ADDP4
ADDRLP4 92
INDIRI4
ADDRLP4 4
ADDP4
INDIRI4
ASGNI4
LABELV $987
line 1694
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 0
INDIRI4
CNSTI4 16
LTI4 $986
line 1696
;1696:				}
ADDRGP4 $981
JUMPV
LABELV $980
line 1698
;1697:				else
;1698:					ent->client->ps = cl->ps;
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
ADDRLP4 68
INDIRP4
INDIRB
ASGNB 472
LABELV $981
line 1699
;1699:				ent->client->ps.pm_flags |= PMF_FOLLOW;
ADDRLP4 88
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 12
ADDP4
ASGNP4
ADDRLP4 88
INDIRP4
ADDRLP4 88
INDIRP4
INDIRI4
CNSTI4 4096
BORI4
ASGNI4
line 1700
;1700:				ent->client->ps.eFlags = flags;
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 104
ADDP4
ADDRLP4 76
INDIRI4
ASGNI4
line 1701
;1701:				return;
ADDRGP4 $967
JUMPV
LABELV $978
line 1702
;1702:			} else {
line 1704
;1703:				// drop them to free spectators unless they are dedicated camera followers
;1704:				if ( ent->client->sess.spectatorClient >= 0 ) {
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 1044
ADDP4
INDIRI4
CNSTI4 0
LTI4 $990
line 1705
;1705:					ent->client->sess.spectatorState = SPECTATOR_FREE;
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 1040
ADDP4
CNSTI4 1
ASGNI4
line 1706
;1706:					ClientBegin( ent->client - level.clients );
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CVPU4 4
ADDRGP4 level
INDIRP4
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 2324
DIVI4
ARGI4
ADDRGP4 ClientBegin
CALLV
pop
line 1707
;1707:				}
LABELV $990
line 1708
;1708:			}
line 1709
;1709:		}
LABELV $976
line 1713
;1710:
;1711:
;1712:
;1713:	}
LABELV $968
line 1715
;1714:
;1715:	if ( ent->client->sess.spectatorState == SPECTATOR_SCOREBOARD ) {
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 1040
ADDP4
INDIRI4
CNSTI4 3
NEI4 $992
line 1716
;1716:		ent->client->ps.pm_flags |= PMF_SCOREBOARD;
ADDRLP4 72
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 12
ADDP4
ASGNP4
ADDRLP4 72
INDIRP4
ADDRLP4 72
INDIRP4
INDIRI4
CNSTI4 8192
BORI4
ASGNI4
line 1717
;1717:	} else {
ADDRGP4 $993
JUMPV
LABELV $992
line 1718
;1718:		ent->client->ps.pm_flags &= ~PMF_SCOREBOARD;
ADDRLP4 72
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 12
ADDP4
ASGNP4
ADDRLP4 72
INDIRP4
ADDRLP4 72
INDIRP4
INDIRI4
CNSTI4 -8193
BANDI4
ASGNI4
line 1719
;1719:	}
LABELV $993
line 1720
;1720:}
LABELV $967
endproc SpectatorClientEndFrame 96 4
export ClientEndFrame
proc ClientEndFrame 44 12
line 1731
;1721:
;1722:/*
;1723:==============
;1724:ClientEndFrame
;1725:
;1726:Called at the end of each server frame for each connected client
;1727:A fast client will have multiple ClientThink for each ClientEdFrame,
;1728:while a slow client may have multiple ClientEndFrame between ClientThink.
;1729:==============
;1730:*/
;1731:void ClientEndFrame( gentity_t *ent ) {
line 1739
;1732:	int			i;
;1733:	clientPersistant_t	*pers;
;1734:
;1735://unlagged - smooth clients #1
;1736:	int frames;
;1737://unlagged - smooth clients #1
;1738:
;1739:	if ( (ent->client->sess.sessionTeam == TEAM_SPECTATOR) || ent->client->isEliminated ) {
ADDRLP4 12
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
ASGNP4
ADDRLP4 12
INDIRP4
CNSTI4 1032
ADDP4
INDIRI4
CNSTI4 3
EQI4 $997
ADDRLP4 12
INDIRP4
CNSTI4 1440
ADDP4
INDIRI4
CNSTI4 0
EQI4 $995
LABELV $997
line 1740
;1740:		SpectatorClientEndFrame( ent );
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 SpectatorClientEndFrame
CALLV
pop
line 1741
;1741:		return;
ADDRGP4 $994
JUMPV
LABELV $995
line 1744
;1742:	}
;1743:
;1744:	pers = &ent->client->pers;
ADDRLP4 8
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 472
ADDP4
ASGNP4
line 1747
;1745:
;1746:	// turn off any expired powerups
;1747:	for ( i = 0 ; i < MAX_POWERUPS ; i++ ) {
ADDRLP4 0
CNSTI4 0
ASGNI4
LABELV $998
line 1748
;1748:		if ( ent->client->ps.powerups[ i ] < level.time ) {
ADDRLP4 0
INDIRI4
CNSTI4 2
LSHI4
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 312
ADDP4
ADDP4
INDIRI4
ADDRGP4 level+32
INDIRI4
GEI4 $1002
line 1749
;1749:			ent->client->ps.powerups[ i ] = 0;
ADDRLP4 0
INDIRI4
CNSTI4 2
LSHI4
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 312
ADDP4
ADDP4
CNSTI4 0
ASGNI4
line 1750
;1750:		}
LABELV $1002
line 1751
;1751:	}
LABELV $999
line 1747
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 0
INDIRI4
CNSTI4 16
LTI4 $998
line 1754
;1752:
;1753:	// set powerup for player animation
;1754:	if( bg_itemlist[ent->client->ps.stats[STAT_PERSISTANT_POWERUP]].giTag == PW_GUARD ) {
CNSTI4 56
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 192
ADDP4
INDIRI4
MULI4
ADDRGP4 bg_itemlist+44
ADDP4
INDIRI4
CNSTI4 11
NEI4 $1005
line 1755
;1755:		ent->client->ps.powerups[PW_GUARD] = level.time;
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 356
ADDP4
ADDRGP4 level+32
INDIRI4
ASGNI4
line 1756
;1756:	}
LABELV $1005
line 1757
;1757:	if( bg_itemlist[ent->client->ps.stats[STAT_PERSISTANT_POWERUP]].giTag == PW_SCOUT ) {
CNSTI4 56
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 192
ADDP4
INDIRI4
MULI4
ADDRGP4 bg_itemlist+44
ADDP4
INDIRI4
CNSTI4 10
NEI4 $1009
line 1758
;1758:		ent->client->ps.powerups[PW_SCOUT] = level.time;
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 352
ADDP4
ADDRGP4 level+32
INDIRI4
ASGNI4
line 1759
;1759:	}
LABELV $1009
line 1760
;1760:	if( bg_itemlist[ent->client->ps.stats[STAT_PERSISTANT_POWERUP]].giTag == PW_DOUBLER ) {
CNSTI4 56
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 192
ADDP4
INDIRI4
MULI4
ADDRGP4 bg_itemlist+44
ADDP4
INDIRI4
CNSTI4 12
NEI4 $1013
line 1761
;1761:		ent->client->ps.powerups[PW_DOUBLER] = level.time;
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 360
ADDP4
ADDRGP4 level+32
INDIRI4
ASGNI4
line 1762
;1762:	}
LABELV $1013
line 1763
;1763:	if( bg_itemlist[ent->client->ps.stats[STAT_PERSISTANT_POWERUP]].giTag == PW_AMMOREGEN ) {
CNSTI4 56
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 192
ADDP4
INDIRI4
MULI4
ADDRGP4 bg_itemlist+44
ADDP4
INDIRI4
CNSTI4 13
NEI4 $1017
line 1764
;1764:		ent->client->ps.powerups[PW_AMMOREGEN] = level.time;
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 364
ADDP4
ADDRGP4 level+32
INDIRI4
ASGNI4
line 1765
;1765:	}
LABELV $1017
line 1766
;1766:	if ( ent->client->invulnerabilityTime > level.time ) {
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 1432
ADDP4
INDIRI4
ADDRGP4 level+32
INDIRI4
LEI4 $1021
line 1767
;1767:		ent->client->ps.powerups[PW_INVULNERABILITY] = level.time;
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 368
ADDP4
ADDRGP4 level+32
INDIRI4
ASGNI4
line 1768
;1768:	}
LABELV $1021
line 1782
;1769:
;1770:	// save network bandwidth
;1771:#if 0
;1772:	if ( !g_synchronousClients->integer && ent->client->ps.pm_type == PM_NORMAL ) {
;1773:		// FIXME: this must change eventually for non-sync demo recording
;1774:		VectorClear( ent->client->ps.viewangles );
;1775:	}
;1776:#endif
;1777:
;1778:	//
;1779:	// If the end of unit layout is displayed, don't give
;1780:	// the player any normal movement attributes
;1781:	//
;1782:	if ( level.intermissiontime ) {
ADDRGP4 level+9912
INDIRI4
CNSTI4 0
EQI4 $1025
line 1783
;1783:		return;
ADDRGP4 $994
JUMPV
LABELV $1025
line 1787
;1784:	}
;1785:
;1786:	// burn from lava, etc
;1787:	P_WorldEffects (ent);
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 P_WorldEffects
CALLV
pop
line 1790
;1788:
;1789:	// apply all the damage taken this frame
;1790:	P_DamageFeedback (ent);
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 P_DamageFeedback
CALLV
pop
line 1800
;1791:
;1792:	//Unlagged: Commented out
;1793:	// add the EF_CONNECTION flag if we haven't gotten commands recently
;1794:	/*if ( level.time - ent->client->lastCmdTime > 1000 ) {
;1795:		ent->s.eFlags |= EF_CONNECTION;
;1796:	} else {
;1797:		ent->s.eFlags &= ~EF_CONNECTION;
;1798:	}*/
;1799:
;1800:	ent->client->ps.stats[STAT_HEALTH] = ent->health;	// FIXME: get rid of ent->health...
ADDRLP4 16
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 16
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 184
ADDP4
ADDRLP4 16
INDIRP4
CNSTI4 808
ADDP4
INDIRI4
ASGNI4
line 1802
;1801:
;1802:	G_SetClientSound (ent);
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 G_SetClientSound
CALLV
pop
line 1810
;1803:
;1804://Unlagged: Always do the else clause
;1805:	// set the latest infor
;1806:/*	if (g_smoothClients.integer) {
;1807:		BG_PlayerStateToEntityStateExtraPolate( &ent->client->ps, &ent->s, ent->client->ps.commandTime, qtrue );
;1808:	}
;1809:	else { */
;1810:		BG_PlayerStateToEntityState( &ent->client->ps, &ent->s, qtrue );
ADDRLP4 20
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 20
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
ARGP4
ADDRLP4 20
INDIRP4
ARGP4
CNSTI4 1
ARGI4
ADDRGP4 BG_PlayerStateToEntityState
CALLV
pop
line 1812
;1811://	}
;1812:	SendPendingPredictableEvents( &ent->client->ps );
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
ARGP4
ADDRGP4 SendPendingPredictableEvents
CALLV
pop
line 1816
;1813:
;1814://unlagged - smooth clients #1
;1815:	// mark as not missing updates initially
;1816:	ent->client->ps.eFlags &= ~EF_CONNECTION;
ADDRLP4 24
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 104
ADDP4
ASGNP4
ADDRLP4 24
INDIRP4
ADDRLP4 24
INDIRP4
INDIRI4
CNSTI4 -8193
BANDI4
ASGNI4
line 1819
;1817:
;1818:	// see how many frames the client has missed
;1819:	frames = level.framenum - ent->client->lastUpdateFrame - 1;
ADDRLP4 4
ADDRGP4 level+28
INDIRI4
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 2188
ADDP4
INDIRI4
SUBI4
CNSTI4 1
SUBI4
ASGNI4
line 1822
;1820:
;1821:	// don't extrapolate more than two frames
;1822:	if ( frames > 2 ) {
ADDRLP4 4
INDIRI4
CNSTI4 2
LEI4 $1029
line 1823
;1823:		frames = 2;
ADDRLP4 4
CNSTI4 2
ASGNI4
line 1826
;1824:
;1825:		// if they missed more than two in a row, show the phone jack
;1826:		ent->client->ps.eFlags |= EF_CONNECTION;
ADDRLP4 28
ADDRFP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRP4
CNSTI4 104
ADDP4
ASGNP4
ADDRLP4 28
INDIRP4
ADDRLP4 28
INDIRP4
INDIRI4
CNSTI4 8192
BORI4
ASGNI4
line 1827
;1827:		ent->s.eFlags |= EF_CONNECTION;
ADDRLP4 32
ADDRFP4 0
INDIRP4
CNSTI4 8
ADDP4
ASGNP4
ADDRLP4 32
INDIRP4
ADDRLP4 32
INDIRP4
INDIRI4
CNSTI4 8192
BORI4
ASGNI4
line 1828
;1828:	}
LABELV $1029
line 1831
;1829:
;1830:	// did the client miss any frames?
;1831:	if ( frames > 0 && g_smoothClients.integer ) {
ADDRLP4 28
CNSTI4 0
ASGNI4
ADDRLP4 4
INDIRI4
ADDRLP4 28
INDIRI4
LEI4 $1031
ADDRGP4 g_smoothClients+12
INDIRI4
ADDRLP4 28
INDIRI4
EQI4 $1031
line 1833
;1832:		// yep, missed one or more, so extrapolate the player's movement
;1833:		G_PredictPlayerMove( ent, (float)frames / sv_fps.integer );
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 4
INDIRI4
CVIF4 4
ADDRGP4 sv_fps+12
INDIRI4
CVIF4 4
DIVF4
ARGF4
ADDRGP4 G_PredictPlayerMove
CALLV
pop
line 1835
;1834:		// save network bandwidth
;1835:		SnapVector( ent->s.pos.trBase );
ADDRLP4 32
ADDRFP4 0
INDIRP4
CNSTI4 24
ADDP4
ASGNP4
ADDRLP4 32
INDIRP4
ADDRLP4 32
INDIRP4
INDIRF4
CVFI4 4
CVIF4 4
ASGNF4
ADDRLP4 36
ADDRFP4 0
INDIRP4
CNSTI4 28
ADDP4
ASGNP4
ADDRLP4 36
INDIRP4
ADDRLP4 36
INDIRP4
INDIRF4
CVFI4 4
CVIF4 4
ASGNF4
ADDRLP4 40
ADDRFP4 0
INDIRP4
CNSTI4 32
ADDP4
ASGNP4
ADDRLP4 40
INDIRP4
ADDRLP4 40
INDIRP4
INDIRF4
CVFI4 4
CVIF4 4
ASGNF4
line 1836
;1836:	}
LABELV $1031
line 1841
;1837://unlagged - smooth clients #1
;1838:
;1839://unlagged - backward reconciliation #1
;1840:	// store the client's position for backward reconciliation later
;1841:	G_StoreHistory( ent );
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 G_StoreHistory
CALLV
pop
line 1847
;1842://unlagged - backward reconciliation #1
;1843:
;1844:	// set the bit for the reachability area the client is currently in
;1845://	i = trap_AAS_PointReachabilityAreaIndex( ent->client->ps.origin );
;1846://	ent->client->areabits[i >> 3] |= 1 << (i & 7);
;1847:}
LABELV $994
endproc ClientEndFrame 44 12
import G_PropSmoke
import G_EnablePropPhysics
import FindTeleporterTarget
import BotTestSolid
import G_admin_namelog_cleanup
import G_admin_cleanup
import G_admin_duration
import G_admin_buffer_end
import G_admin_buffer_begin
import G_admin_buffer_print
import G_admin_print
import G_admin_shuffle
import G_admin_warn
import G_admin_slap
import G_admin_orient
import G_admin_disorient
import G_admin_unlock
import G_admin_lock
import G_admin_namelog
import G_admin_nextmap
import G_admin_restart
import G_admin_rename
import G_admin_spec999
import G_admin_passvote
import G_admin_cancelvote
import G_admin_allready
import G_admin_admintest
import G_admin_help
import G_admin_showbans
import G_admin_mute
import G_admin_map
import G_admin_listplayers
import G_admin_listadmins
import G_admin_putteam
import G_admin_unban
import G_admin_ban
import G_admin_adjustban
import G_admin_kick
import G_admin_setlevel
import G_admin_time
import G_admin_parse_time
import G_admin_level
import G_admin_namelog_update
import G_admin_name_check
import G_admin_permission
import G_admin_readconfig
import G_admin_cmd_check
import G_admin_ban_check
import G_ConfigClientExcellent
import G_checkForMultiKill
import G_CheckForSpree
import G_RunStreakLogic
import G_ReadAltKillSettings
import AU_Cvar_VariableString
import G_ArenaScriptRandom
import G_ArenaScriptAutoFloat
import G_ArenaScriptAutoNonPointChar
import G_ArenaScriptAutoChar
import G_ArenaScriptAutoInt
import G_ArenaScriptFindFloat
import G_ArenaScriptFindChar
import G_ArenaScriptFindInt
import Svcmd_SaveSession_f
import Svcmd_For_f
import Svcmd_SystemCommand_f
import Svcmd_ClientCommand_f
import Svcmd_Editline_f
import Svcmd_Random_f
import Svcmd_Cvar_f
import Svcmd_Operation_f
import Svcmd_Condition_f
import Svcmd_MessageWrapper
import Svcmd_ListIP_f
import Svcmd_Chat_f
import Svcmd_DumpUser_f
import Svcmd_EjectClient_f
import Svcmd_BannerPrint_f
import Svcmd_ReplaceTexture_f
import Svcmd_CenterPrint_f
import Svcmd_TeamMessage_f
import Svcmd_Status_f
import trap_SnapVector
import trap_GeneticParentsAndChildSelection
import trap_BotResetWeaponState
import trap_BotFreeWeaponState
import trap_BotAllocWeaponState
import trap_BotLoadWeaponWeights
import trap_BotGetWeaponInfo
import trap_BotChooseBestFightWeapon
import trap_BotAddAvoidSpot
import trap_BotInitMoveState
import trap_BotFreeMoveState
import trap_BotAllocMoveState
import trap_BotPredictVisiblePosition
import trap_BotMovementViewTarget
import trap_BotReachabilityArea
import trap_BotResetLastAvoidReach
import trap_BotResetAvoidReach
import trap_BotMoveInDirection
import trap_BotMoveToGoal
import trap_BotResetMoveState
import trap_BotFreeGoalState
import trap_BotAllocGoalState
import trap_BotMutateGoalFuzzyLogic
import trap_BotSaveGoalFuzzyLogic
import trap_BotInterbreedGoalFuzzyLogic
import trap_BotFreeItemWeights
import trap_BotLoadItemWeights
import trap_BotUpdateEntityItems
import trap_BotInitLevelItems
import trap_BotSetAvoidGoalTime
import trap_BotAvoidGoalTime
import trap_BotGetLevelItemGoal
import trap_BotGetMapLocationGoal
import trap_BotGetNextCampSpotGoal
import trap_BotItemGoalInVisButNotVisible
import trap_BotTouchingGoal
import trap_BotChooseNBGItem
import trap_BotChooseLTGItem
import trap_BotGetSecondGoal
import trap_BotGetTopGoal
import trap_BotGoalName
import trap_BotDumpGoalStack
import trap_BotDumpAvoidGoals
import trap_BotEmptyGoalStack
import trap_BotPopGoal
import trap_BotPushGoal
import trap_BotResetAvoidGoals
import trap_BotRemoveFromAvoidGoals
import trap_BotResetGoalState
import trap_BotSetChatName
import trap_BotSetChatGender
import trap_BotLoadChatFile
import trap_BotReplaceSynonyms
import trap_UnifyWhiteSpaces
import trap_BotMatchVariable
import trap_BotFindMatch
import trap_StringContains
import trap_BotGetChatMessage
import trap_BotEnterChat
import trap_BotChatLength
import trap_BotReplyChat
import trap_BotNumInitialChats
import trap_BotInitialChat
import trap_BotNumConsoleMessages
import trap_BotNextConsoleMessage
import trap_BotRemoveConsoleMessage
import trap_BotQueueConsoleMessage
import trap_BotFreeChatState
import trap_BotAllocChatState
import trap_Characteristic_String
import trap_Characteristic_BInteger
import trap_Characteristic_Integer
import trap_Characteristic_BFloat
import trap_Characteristic_Float
import trap_BotFreeCharacter
import trap_BotLoadCharacter
import trap_EA_ResetInput
import trap_EA_GetInput
import trap_EA_EndRegular
import trap_EA_View
import trap_EA_Move
import trap_EA_DelayedJump
import trap_EA_Jump
import trap_EA_SelectWeapon
import trap_EA_MoveRight
import trap_EA_MoveLeft
import trap_EA_MoveBack
import trap_EA_MoveForward
import trap_EA_MoveDown
import trap_EA_MoveUp
import trap_EA_Crouch
import trap_EA_Respawn
import trap_EA_Use
import trap_EA_Attack
import trap_EA_Talk
import trap_EA_Gesture
import trap_EA_Action
import trap_EA_Command
import trap_EA_SayTeam
import trap_EA_Say
import trap_AAS_PredictClientMovement
import trap_AAS_Swimming
import trap_AAS_AlternativeRouteGoals
import trap_AAS_PredictRoute
import trap_AAS_EnableRoutingArea
import trap_AAS_AreaTravelTimeToGoalArea
import trap_AAS_AreaReachability
import trap_AAS_IntForBSPEpairKey
import trap_AAS_FloatForBSPEpairKey
import trap_AAS_VectorForBSPEpairKey
import trap_AAS_ValueForBSPEpairKey
import trap_AAS_NextBSPEntity
import trap_AAS_PointContents
import trap_AAS_TraceAreas
import trap_AAS_PointReachabilityAreaIndex
import trap_AAS_PointAreaNum
import trap_AAS_Time
import trap_AAS_PresenceTypeBoundingBox
import trap_AAS_Initialized
import trap_AAS_EntityInfo
import trap_AAS_AreaInfo
import trap_AAS_BBoxAreas
import trap_BotUserCommand
import trap_BotGetServerCommand
import trap_BotGetSnapshotEntity
import trap_BotLibTest
import trap_BotLibUpdateEntity
import trap_BotLibLoadMap
import trap_BotLibStartFrame
import trap_BotLibDefine
import trap_BotLibVarGet
import trap_BotLibVarSet
import trap_BotLibShutdown
import trap_BotLibSetup
import trap_DebugPolygonDelete
import trap_DebugPolygonCreate
import trap_GetEntityToken
import trap_GetUsercmd
import trap_BotFreeClient
import trap_BotAllocateClient
import trap_EntityContact
import trap_EntitiesInBox
import trap_UnlinkEntity
import trap_LinkEntity
import trap_AreasConnected
import trap_AdjustAreaPortalState
import trap_InPVSIgnorePortals
import trap_InPVS
import trap_PointContents
import trap_Trace
import trap_SetBrushModel
import trap_GetServerinfo
import trap_SetUserinfo
import trap_GetUserinfo
import trap_GetConfigstring
import trap_SetConfigstring
import trap_SendServerCommand
import trap_DropClient
import trap_LocateGameData
import trap_Cvar_VariableStringBuffer
import trap_Cvar_VariableValue
import trap_Cvar_VariableIntegerValue
import trap_Cvar_Set
import trap_Cvar_Update
import trap_Cvar_Register
import trap_SendConsoleCommand
import trap_System
import trap_FS_Seek
import trap_FS_GetFileList
import trap_FS_FCloseFile
import trap_FS_Write
import trap_FS_Read
import trap_FS_FOpenFile
import trap_Args
import trap_Argv
import trap_Argc
import trap_RealTime
import trap_Milliseconds
import trap_Error
import trap_Printf
import g_maxNameChanges
import g_minNameChangePeriod
import g_warningExpire
import g_maxWarnings
import g_publicAdminMessages
import g_specChat
import g_adminMaxBan
import g_adminTempBan
import g_adminNameProtect
import g_adminParseSay
import g_adminLog
import g_admin
import g_floodMinTime
import g_floodMaxDemerits
import g_spreeDiv
import g_altExcellent
import g_sprees
import g_lagLightning
import sv_fps
import g_truePing
import g_delagHitscan
import g_blueTeamClientNumbers
import g_redTeamClientNumbers
import g_humanplayers
import g_maxvotes
import g_voteMaxFraglimit
import g_voteMinFraglimit
import g_voteMaxTimelimit
import g_voteMinTimelimit
import g_voteGametypes
import g_voteBan
import g_voteNames
import g_mappools
import g_autonextmap
import g_catchup
import g_persistantpowerups
import g_awardpushing
import g_elimination_ctf_oneway
import g_lms_mode
import g_lms_lives
import g_ffa_gt
import g_regen
import g_vampireMaxHealth
import g_vampire
import g_instantgib
import g_rockets
import g_elimination_lockspectator
import g_eliminationred_holdable
import g_eliminationred_flight
import g_eliminationred_regen
import g_eliminationred_invis
import g_eliminationred_bsuit
import g_eliminationred_haste
import g_eliminationred_quad
import g_eliminationred_antimatter
import g_eliminationred_flame
import g_eliminationred_nail
import g_eliminationred_mine
import g_eliminationred_chain
import g_eliminationred_plasmagun
import g_eliminationred_lightning
import g_eliminationred_railgun
import g_eliminationred_rocket
import g_eliminationred_grenade
import g_eliminationred_shotgun
import g_eliminationred_machinegun
import g_eliminationred_gauntlet
import g_eliminationred_grapple
import g_eliminationred_bfg
import g_eliminationred_startArmor
import g_eliminationred_startHealth
import g_elimination_holdable
import g_elimination_items
import g_elimination_flight
import g_elimination_regen
import g_elimination_invis
import g_elimination_bsuit
import g_elimination_haste
import g_elimination_quad
import g_elimination_antimatter
import g_elimination_flame
import g_elimination_nail
import g_elimination_mine
import g_elimination_chain
import g_elimination_plasmagun
import g_elimination_lightning
import g_elimination_railgun
import g_elimination_rocket
import g_elimination_grenade
import g_elimination_shotgun
import g_elimination_machinegun
import g_elimination_gauntlet
import g_elimination_allgametypes
import g_elimination_activewarmup
import g_elimination_warmup
import g_elimination_roundtime
import g_elimination_grapple
import g_elimination_bfg
import g_elimination_startArmor
import g_elimination_startHealth
import g_elimination_selfdamage
import g_spawnprotect
import g_music
import g_proxMineTimeout
import g_enableBreath
import g_enableDust
import g_blueteam
import g_redteam
import g_singlePlayer
import g_rankings
import pmove_float
import pmove_msec
import pmove_fixed
import g_smoothClients
import g_cubeTimeout
import g_obeliskRespawnDelay
import g_obeliskRegenAmount
import g_obeliskRegenPeriod
import g_obeliskHealth
import g_filterBan
import g_banIPs
import g_teamForceBalance
import g_teamAutoJoin
import g_allowVote
import g_blood
import g_doWarmup
import g_warmup
import g_votecustom
import g_votemaps
import g_motdfile
import g_motd
import g_synchronousClients
import g_weaponTeamRespawn
import g_weaponRespawn
import g_allowSyncCutscene
import g_debugBotspawns
import g_debugVariables
import g_debugScore
import g_debugCameras
import g_debugDamage
import g_debugAlloc
import g_debugMove
import g_disableCutscenes
import g_inactivity
import g_respawntime
import g_forcerespawn
import g_quadfactor
import g_knockback
import g_speed
import g_damageModifier
import g_gravityModifier
import g_gravity
import g_needpass
import g_password
import g_friendlyFire
import g_capturelimit
import g_timelimit
import g_fraglimit
import g_voteflags
import g_elimflags
import g_videoflags
import g_dmflags
import g_restarted
import g_maxGameClients
import g_maxclients
import g_cheats
import g_dedicated
import g_gametype
import g_poweruprespawn
import g_megahealthrespawn
import g_holdablerespawn
import g_ammorespawn
import g_healthrespawn
import g_armorrespawn
import g_ammolimit
import g_drowndamage
import g_speedfactor
import g_jumpheight
import g_respawnwait
import g_armorprotect
import g_medkitmodifier
import g_hastefirespeed
import g_autoflagreturn
import g_droppeditemtime
import g_slowhealthregen
import g_fasthealthregen
import g_invultime
import g_invulmove
import g_portalhealth
import g_portaltimeout
import g_flagrespawn
import g_noplayerclip
import g_falldamagebig
import g_falldamagesmall
import g_randomteleport
import g_maxweaponpickup
import g_slimedamage
import g_lavadamage
import g_waterdamage
import g_medkitlimit
import g_kamikazeinf
import g_portalinf
import g_teleporterinf
import g_medkitinf
import g_invulinf
import g_kamikazeinfinf
import g_kill
import g_mapcycleposition
import g_useMapcycle
import g_mapcycle
import info_zombie
import g_randomItems
import g_accelerate
import g_slickmove
import g_overlay
import g_lavatowater
import onandroid
import eliminationrespawn
import eliminationredrespawn
import g_spectatorspeed
import g_regenarmor
import tex_newname
import tex_name
import g_roundmode
import g_scoreboardlock
import g_connectmsg
import g_currentmap
import g_tests
import cl_language
import cl_selectedmod
import g_maxEntities
import g_npcdrop
import g_safe
import g_allowgravitygun
import g_allowphysgun
import g_allowtoolgun
import g_allownoclip
import g_allowitems
import g_allownpc
import g_allowsettings
import g_allowprops
import save8_epsession
import save8_session0_lvl
import save8_session0
import save7_epsession
import save7_session0_lvl
import save7_session0
import save6_epsession
import save6_session0_lvl
import save6_session0
import save5_epsession
import save5_session0_lvl
import save5_session0
import save4_epsession
import save4_session0_lvl
import save4_session0
import save3_epsession
import save3_session0_lvl
import save3_session0
import save2_epsession
import save2_session0_lvl
import save2_session0
import save1_epsession
import save1_session0_lvl
import save1_session0
import save_epsession
import save_session0_lvl
import save_session0
import save8_curmap
import save7_curmap
import save6_curmap
import save5_curmap
import save4_curmap
import save3_curmap
import save2_curmap
import save1_curmap
import save_curmap
import g_skyColorA
import g_skyColorB
import g_skyColorG
import g_skyColorR
import g_skyShader
import g_fogColorA
import g_fogColorB
import g_fogColorG
import g_fogColorR
import g_fogInterval
import g_fogDistance
import g_fogShader
import g_fogModel
import g_teamred_pickupitems
import g_teamred_respawnwait
import g_teamred_infammo
import g_teamred_damage
import g_teamred_firespeed
import g_teamred_gravityModifier
import g_teamred_speed
import g_teamblue_pickupitems
import g_teamblue_respawnwait
import g_teamblue_infammo
import g_teamblue_damage
import g_teamblue_firespeed
import g_teamblue_gravityModifier
import g_teamblue_speed
import g_amweaponcount
import g_ftweaponcount
import g_cgweaponcount
import g_plweaponcount
import g_ngweaponcount
import g_bfgweaponcount
import g_pgweaponcount
import g_rgweaponcount
import g_lgweaponcount
import g_rlweaponcount
import g_glweaponcount
import g_sgweaponcount
import g_mgweaponcount
import g_ftammocount
import g_cgammocount
import g_plammocount
import g_ngammocount
import g_bfgammocount
import g_pgammocount
import g_rgammocount
import g_lgammocount
import g_rlammocount
import g_glammocount
import g_sgammocount
import g_mgammocount
import g_ammoregenhealthmodifier
import g_ammoregengravitymodifier
import g_ammoregenspeedfactor
import g_ammoregendamagefactor
import g_ammoregen_infammo
import g_ammoregenfirespeed
import g_guard_infammo
import g_guardgravitymodifier
import g_guardspeedfactor
import g_guarddamagefactor
import g_guardfirespeed
import g_guardhealthmodifier
import g_doublerhealthmodifier
import g_doubler_infammo
import g_doublergravitymodifier
import g_doublerspeedfactor
import g_doublerdamagefactor
import g_doublerfirespeed
import g_scouthealthmodifier
import g_scout_infammo
import g_scoutgravitymodifier
import g_scoutdamagefactor
import g_scoutfirespeed
import g_scoutspeedfactor
import g_amguided
import g_amhoming
import g_ftguided
import g_fthoming
import g_ngguided
import g_nghoming
import g_bfgguided
import g_bfghoming
import g_pgguided
import g_pghoming
import g_rlguided
import g_rlhoming
import g_glguided
import g_glhoming
import g_amknockback
import g_ambouncemodifier
import g_aminf
import g_amvampire
import g_amgravity
import g_ambounce
import g_amtimeout
import g_amdamage
import g_amsdamage
import g_amspeed
import g_amsradius
import g_amdelay
import g_ftknockback
import g_ftbouncemodifier
import g_ftinf
import g_ftvampire
import g_ftgravity
import g_ftbounce
import g_fttimeout
import g_ftdamage
import g_ftsdamage
import g_ftspeed
import g_ftsradius
import g_ftdelay
import g_cgknockback
import g_cginf
import g_cgvampire
import g_cgspread
import g_cgdamage
import g_cgdelay
import g_plknockback
import g_plinf
import g_plvampire
import g_plgravity
import g_pldamage
import g_plsdamage
import g_plsradius
import g_pltimeout
import g_plspeed
import g_pldelay
import g_ngknockback
import g_ngbouncemodifier
import g_nginf
import g_ngvampire
import g_ngrandom
import g_nggravity
import g_ngbounce
import g_ngcount
import g_ngtimeout
import g_ngdamage
import g_ngspread
import g_ngspeed
import g_ngdelay
import g_bfgknockback
import g_bfgbouncemodifier
import g_bfginf
import g_bfgvampire
import g_bfggravity
import g_bfgbounce
import g_bfgdamage
import g_bfgsdamage
import g_bfgsradius
import g_bfgtimeout
import g_bfgspeed
import g_bfgdelay
import g_pgknockback
import g_pgbouncemodifier
import g_pginf
import g_pgvampire
import g_pggravity
import g_pgbounce
import g_pgtimeout
import g_pgdamage
import g_pgsdamage
import g_pgspeed
import g_pgsradius
import g_pgdelay
import g_rgknockback
import g_rginf
import g_rgvampire
import g_rgdamage
import g_rgdelay
import g_lgknockback
import g_lginf
import g_lgvampire
import g_lgsradius
import g_lgsdamage
import g_lgexplode
import g_lgrange
import g_lgdelay
import g_lgdamage
import g_rlknockback
import g_rlbouncemodifier
import g_rlinf
import g_rlvampire
import g_rlgravity
import g_rlbounce
import g_rldamage
import g_rlsdamage
import g_rlsradius
import g_rltimeout
import g_rlspeed
import g_rldelay
import g_glknockback
import g_glbouncemodifier
import g_glinf
import g_glvampire
import g_glgravity
import g_glbounce
import g_gldamage
import g_glsdamage
import g_glsradius
import g_gltimeout
import g_glspeed
import g_gldelay
import g_sgknockback
import g_sginf
import g_sgvampire
import g_sgcount
import g_sgsradius
import g_sgsdamage
import g_sgexplode
import g_sgspread
import g_sgdamage
import g_sgdelay
import g_mgknockback
import g_mginf
import g_mgvampire
import g_mgsradius
import g_mgsdamage
import g_mgexplode
import g_mgspread
import g_mgdamage
import g_mgdelay
import g_gknockback
import g_grange
import g_gdamage
import g_gdelay
import mod_ghtimeout
import g_ghtimeout
import g_ghspeed
import g_minigame
import g_physdamage
import g_physimpulse
import g_physimpact
import cl_giantcharheight
import cl_giantcharwidth
import cl_bigcharheight
import cl_bigcharwidth
import cl_smallcharheight
import cl_smallcharwidth
import cl_propgapwidth
import cl_propspacewidth
import cl_propheight
import cl_propsmallsizescale
import mod_gravity
import mod_zsround
import mod_zround
import mod_roundmode
import mod_overlay
import mod_slickmove
import mod_accelerate
import mod_teamred_damage
import mod_teamblue_damage
import mod_invulinf
import mod_kamikazeinf
import mod_portalinf
import mod_teleporterinf
import mod_medkitinf
import mod_medkitlimit
import mod_teamblue_firespeed
import mod_teamred_firespeed
import mod_invulmove
import mod_noplayerclip
import mod_flighttime
import mod_regentime
import mod_invistime
import mod_hastetime
import mod_bsuittime
import mod_quadtime
import mod_doublerfirespeed
import mod_guardfirespeed
import mod_poweruptime
import mod_scoutfirespeed
import mod_ammoregenfirespeed
import mod_hastefirespeed
import mod_vampire_max_health
import mod_amdelay
import mod_ftdelay
import mod_cgspread
import mod_cgdelay
import mod_pldelay
import mod_ngdelay
import mod_bfgdelay
import mod_rgdelay
import mod_pgdelay
import mod_lgrange
import mod_lgdelay
import mod_rldelay
import mod_gldelay
import mod_sgcount
import mod_sgspread
import mod_sgdelay
import mod_mgspread
import mod_mgdelay
import mod_gdelay
import mod_jumpheight
import mod_ammolimit
import cmapname
import CustomModRun
import Newmodcommands
import nailgun_think
import bfg_think
import grenade_think
import rocket_think
import plasma_think
import G_SendSwepWeapons
import G_SendWeaponProperties
import g_entities
import level
import Team_ForceGesture
import Team_DD_bonusAtPoints
import Team_RemoveDoubleDominationPoints
import Team_SpawnDoubleDominationPoints
import Pickup_Team
import CheckTeamStatus
import TeamplayInfoMessage
import Team_GetLocationMsg
import Team_GetLocation
import Team_Dom_SpawnPoints
import SelectDoubleDominationSpawnPoint
import SelectCTFSpawnPoint
import Team_FreeEntity
import Team_ReturnFlag
import Team_InitGame
import Team_CheckHurtCarrier
import Team_FragBonuses
import Team_DroppedFlagThink
import AddTeamScore
import TeamColorString
import OtherTeamName
import TeamName
import OtherTeam
import BotTestAAS
import BotAIStartFrame
import BotAIShutdownClient
import BotAISetupClient
import BotAILoadMap
import BotAIShutdown
import BotAISetup
import G_LoadMapfileAll_f
import G_LoadMapfile_f
import G_LoadMapfileAll
import G_LoadMapfile
import G_WriteMapfileAll_f
import G_WriteMapfile_f
import G_ClassnameAllowedAll
import G_ClassnameAllowed
import G_GetMapLockArena
import SkippedChar
import G_LoadMapcycle
import G_sendMapcycle
import G_drawMapcycle
import G_drawAllowedMaps
import G_mapIsVoteable
import G_GetMapfile
import G_GetNextMap
import G_GetNextMapCycle
import G_GotoNextMapCycle
import getCustomVote
import VoteParseCustomVotes
import allowedFraglimit
import allowedTimelimit
import allowedGametype
import allowedMap
import getMappage
import custom_vote_info
import ClientLeaving
import CountVotes
import CheckVote
import allowedVote
import PlayerStore_restore
import PlayerStore_store
import PlayerStoreInit
import BotInterbreedEndMatch
import Svcmd_BotList_f
import Svcmd_AddBot_f
import G_BotConnect
import G_RemoveQueuedBotBegin
import G_CheckBotSpawn
import G_GetBotInfoByName
import G_GetBotInfoByNumber
import G_InitBots
import SpawnModelsOnVictoryPads
import UpdateTournamentInfo
import G_WriteSessionData
import G_InitWorldSession
import G_SaveClientSessionDataSave
import G_InitSessionData
import G_ReadSessionData
import Svcmd_GameMem_f
import G_TeamFromString
import ShuffleTeams
import CheckObeliskAttack
import Team_CheckDroppedItem
import OnSameTeam
import PrecacheBotAssets
import SetCustomWeapons
import SetSandboxWeapons
import SetUnlimitedWeapons
import SetupCustomBot
import LinkBotSpawnEntity
import DropClientSilently
import ClientCommand
import ClientBegin
import ClientDisconnect
import ClientUserinfoChanged
import ClientConnect
import G_NpcFactionProp
import G_LevelLoadComplete
import CheckTeamVote
import LogExit
import G_Error
import G_Printf
import SendYourTeamMessageToTeam
import SendDominationPointsStatusMessageToAllClients
import SendDDtimetakenMessageToAllClients
import SendEliminationMessageToAllClients
import SendScoreboardMessageToAllClients
import G_LogPrintf
import ExitLevel
import AddTournamentQueue
import G_RunThink
import CheckTeamLeader
import SetLeader
import FindIntermissionPoint
import SendCustomVoteCommands
import DominationPointStatusMessage
import DominationPointNamesMessage
import RespawnTimeMessage
import EliminationMessage
import ObeliskHealthMessage
import AttackingTeamMessage
import YourTeamMessage
import DoubleDominationScoreTimeMessage
import DeathmatchScoreboardMessage
import G_SetStats
import MoveClientToIntermission
import G_StartCarExplode
import G_StartKamikaze
import KamikazeShockWave
import KamikazeRadiusDamage
import CarExplodeDamage
import KamikazeDamage
import FireWeapon
import ClientForString
import G_FilterPacket
import G_ProcessIPBans
import ConsoleCommand
import SpawnPointIsActive
import SpotWouldTelefrag
import CalculateRanks
import AddScore
import player_die
import ClientSpawn
import InitBodyQue
import InitClientResp
import InitClientPersistant
import BeginIntermission
import ClientRespawn
import CopyToBodyQue
import SelectSpawnPoint
import SetClientViewAngle
import PickTeam
import TeamLeader
import LMSpoint
import EndEliminationRound
import DisableWeapons
import EnableWeapons
import RespawnDead
import RespawnAll
import TeamHealthCount
import TeamLivingCount
import TeamCount
import G_PredictPlayerMove
import G_UnTimeShiftClient
import G_UndoTimeShiftFor
import G_DoTimeShiftFor
import G_UnTimeShiftAllClients
import G_TimeShiftAllClients
import G_StoreHistory
import G_ResetHistory
import Laser_Think
import Laser_Gen
import Weapon_HookThink
import Weapon_HookFree
import CheckGauntletAttack
import SnapVectorTowards
import CalcMuzzlePoint
import LogAccuracyHit
import G_FindEntityForClientNum
import G_FindEntityForEntityNum
import G_ShowObjects
import G_HideObjects
import G_BounceProp
import G_RunProp
import G_ModProp
import DropPortalDestination
import DropPortalSource
import TeleportPlayer
import lock_touch
import trigger_teleporter_touch
import Break_Breakable
import Touch_DoorTrigger
import G_RunMover
import fire_antimatter
import fire_flame
import fire_prox
import fire_nail
import fire_nails
import fire_grapple
import fire_bfg
import fire_rocket
import fire_grenade
import fire_plasma
import fire_custom
import fire_blaster
import ProximityMine_RemoveAll
import G_RunMissile
import TossClientCubes
import TossClientPersistantPowerups
import TossClientItems
import body_die
import G_InvulnerabilityEffect
import G_RadiusDamage
import G_ExitVehicle
import G_CarDamage
import G_PropDamage
import G_Damage
import CanDamage
import target_finish_use
import target_finish_think
import BuildShaderStateConfig
import AddRemap
import G_SetTargetname
import G_SetTarget
import G_SetOrigin
import G_AddEvent
import G_AddPredictableEvent
import vtos
import tv
import G_TouchSolids
import G_EntitiesFree
import G_FreeEntity
import G_GlobalSound
import G_Sound
import G_TempEntity
import G_Spawn
import findradius
import G_InitGentity
import CrosshairPointGravity
import CrosshairPointPhys
import FindEntityForGravitygun
import FindEntityForPhysgun
import VehiclePhys
import botsandbox_check
import G_CalculatePlayerScore
import G_FadeIn
import G_FadeOut
import G_Fade
import G_GetScoringMapName
import G_SetMovedir
import G_UseDeathTargets
import G_UseTargets
import G_PickTarget
import G_ScrFind
import G_Find
import G_KillBox
import G_TeamCommand
import G_SoundIndex
import G_ModelIndex
import Throw_Item
import SaveRegisteredItems
import RegisterItem
import ClearRegisteredItems
import Touch_Item2
import Touch_Item
import Set_Weapon
import Set_Ammo
import Add_Ammo
import ArmorIndex
import Think_Weapon
import FinishSpawningItem
import G_SpawnItem
import SetRespawn
import LaunchBackpack
import LaunchItem
import Drop_Item
import PrecacheItem
import UseHoldableItem
import RespawnItemCtf
import RespawnItem
import G_RunItem
import G_CheckTeamItems
import writeFile_string
import writeFile_int
import readFile_string
import readFile_int
import SanitizeString
import G_ClientIsLagging
import G_ClientNumberFromString
import Cmd_AdminMessage_f
import G_FloodLimited
import G_ClientNumbersFromString
import G_SanitiseString
import G_MatchOnePlayer
import G_DecolorString
import G_SayConcatArgs
import G_SayArgv
import G_SayArgc
import NextCustomRound_f
import G_Say
import ConcatArgs
import Cmd_FollowCycle_f
import SetTeam
import BroadcastTeamChange
import StopFollowing
import Cmd_Score_f
import G_NewString
import G_SpawnEntitiesFromString
import G_SpawnVector4
import G_SpawnVector
import G_SpawnInt
import G_SpawnFloat
import G_SpawnString
import MiTechEntityList
import BG_TeamName
import BG_GetVehicleSettings
import BG_VehicleCheckClass
import BG_PlayerTouchesItem
import BG_PlayerStateToEntityStateExtraPolate
import BG_PlayerStateToEntityState
import BG_TouchJumpPad
import BG_AddPredictableEventToPlayerstate
import BG_EvaluateTrajectoryDelta
import BG_EvaluateTrajectory
import BG_DefragmentMemory
import BG_Free
import BG_InitMemory
import BG_Alloc
import BG_CanAlloc
import BG_CanItemBeGrabbed
import BG_FindItemForBackpack
import BG_FindItemForHoldable
import BG_FindItemForPowerup
import BG_FindItemForWeapon
import BG_FindSwepAmmo
import BG_FindSwep
import BG_FindItem
import bg_numItems
import bg_itemlist
import Pmove
import PM_UpdateViewAngles
import COM_LoadLevelScores
import COM_CalculatePlayerScore
import Com_Printf
import Com_Error
import Info_NextPair
import Info_Validate
import Info_SetValueForKey_Big
import Info_SetValueForKey
import Info_RemoveKey_big
import Info_RemoveKey
import Info_ValueForKey
import vectoyaw
import AngleDifference
import Com_TruncateLongString
import va
import Q_CountChar
import Q_CleanStr
import Q_PrintStrlen
import Q_strcat
import Q_strncpyz
import Q_stristr
import Q_strupr
import Q_strlwr
import Q_stricmpn
import Q_strncmp
import Q_stricmp
import Q_isalpha
import Q_isupper
import Q_islower
import Q_isprint
import Com_RandomBytes
import Com_SkipCharset
import Com_SkipTokens
import Com_sprintf
import Parse3DMatrix
import Parse2DMatrix
import Parse1DMatrix
import SkipRestOfLine
import SkipBracedSection
import COM_MatchToken
import COM_ParseWarning
import COM_ParseError
import COM_Compress
import COM_ParseExt
import COM_Parse
import COM_GetCurrentParseLine
import COM_BeginParseSession
import COM_DefaultExtension
import COM_StripExtension
import COM_GetExtension
import COM_SkipPath
import Com_Clamp
import Q_isnan
import PerpendicularVector
import AngleVectors
import MatrixMultiply
import MakeNormalVectors
import RotateAroundDirection
import RotatePointAroundVector
import ProjectPointOnPlane
import PlaneFromPoints
import AngleDelta
import AngleNormalize180
import AngleNormalize360
import AnglesSubtract
import AngleSubtract
import LerpAngle
import AngleMod
import BoundsIntersectPoint
import BoundsIntersectSphere
import BoundsIntersect
import BoxOnPlaneSide
import SetPlaneSignbits
import AxisCopy
import AxisClear
import Lerp
import VelocityToAxis
import AnglesToAxis
import vectoangles
import Q_crandom
import Q_random
import Q_rand
import Q_acos
import Q_log2
import VectorRotate
import Vector4Scale
import VectorNormalize2
import VectorNormalize
import CrossProduct
import VectorInverse
import VectorNormalizeFast
import DistanceSquared
import Distance
import VectorLengthSquared
import VectorLength
import VectorCompare
import AddPointToBounds
import ClearBounds
import RadiusFromBounds
import NormalizeColor
import ColorBytes4
import ColorBytes3
import _VectorMA
import _VectorScale
import _VectorCopy
import _VectorAdd
import _VectorSubtract
import _DotProduct
import ByteToDir
import DirToByte
import ClampShort
import ClampChar
import Q_rsqrt
import Q_fabs
import axisDefault
import vec3_origin
import g_color_table
import colorDkGrey
import colorMdGrey
import colorLtGrey
import colorWhite
import colorCyan
import colorMagenta
import colorYellow
import colorBlue
import colorGreen
import colorRed
import colorBlack
import bytedirs
import Hunk_Alloc
import FloatSwap
import LongSwap
import ShortSwap
import acos
import fabs
import abs
import tan
import atan2
import cos
import sin
import sqrt
import floor
import ceil
import memcpy
import memset
import memmove
import sscanf
import Q_snprintf
import Q_vsnprintf
import strtol
import _atoi
import atoi
import strtod
import _atof
import atof
import toupper
import tolower
import strncpy
import strstr
import strrchr
import strchr
import strcmp
import strcpy
import strcat
import ifstrlenru
import strlenru
import strlen
import rand
import srand
import qsort
lit
align 1
LABELV $903
byte 1 99
byte 1 101
byte 1 110
byte 1 116
byte 1 101
byte 1 114
byte 1 118
byte 1 105
byte 1 101
byte 1 119
byte 1 10
byte 1 0
align 1
LABELV $741
byte 1 51
byte 1 51
byte 1 0
align 1
LABELV $737
byte 1 56
byte 1 0
align 1
LABELV $736
byte 1 112
byte 1 109
byte 1 111
byte 1 118
byte 1 101
byte 1 95
byte 1 109
byte 1 115
byte 1 101
byte 1 99
byte 1 0
align 1
LABELV $540
byte 1 99
byte 1 112
byte 1 32
byte 1 34
byte 1 79
byte 1 119
byte 1 110
byte 1 101
byte 1 100
byte 1 32
byte 1 98
byte 1 121
byte 1 32
byte 1 37
byte 1 115
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $466
byte 1 82
byte 1 101
byte 1 100
byte 1 32
byte 1 67
byte 1 117
byte 1 98
byte 1 101
byte 1 0
align 1
LABELV $465
byte 1 66
byte 1 108
byte 1 117
byte 1 101
byte 1 32
byte 1 67
byte 1 117
byte 1 98
byte 1 101
byte 1 0
align 1
LABELV $256
byte 1 99
byte 1 112
byte 1 32
byte 1 34
byte 1 84
byte 1 101
byte 1 110
byte 1 32
byte 1 115
byte 1 101
byte 1 99
byte 1 111
byte 1 110
byte 1 100
byte 1 115
byte 1 32
byte 1 117
byte 1 110
byte 1 116
byte 1 105
byte 1 108
byte 1 32
byte 1 105
byte 1 110
byte 1 97
byte 1 99
byte 1 116
byte 1 105
byte 1 118
byte 1 105
byte 1 116
byte 1 121
byte 1 32
byte 1 100
byte 1 114
byte 1 111
byte 1 112
byte 1 33
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $252
byte 1 68
byte 1 114
byte 1 111
byte 1 112
byte 1 112
byte 1 101
byte 1 100
byte 1 32
byte 1 100
byte 1 117
byte 1 101
byte 1 32
byte 1 116
byte 1 111
byte 1 32
byte 1 105
byte 1 110
byte 1 97
byte 1 99
byte 1 116
byte 1 105
byte 1 118
byte 1 105
byte 1 116
byte 1 121
byte 1 0
align 1
LABELV $139
byte 1 98
byte 1 111
byte 1 116
byte 1 115
byte 1 47
byte 1 37
byte 1 115
byte 1 0
align 1
LABELV $133
byte 1 115
byte 1 111
byte 1 117
byte 1 110
byte 1 100
byte 1 47
byte 1 119
byte 1 101
byte 1 97
byte 1 112
byte 1 111
byte 1 110
byte 1 115
byte 1 47
byte 1 112
byte 1 114
byte 1 111
byte 1 120
byte 1 109
byte 1 105
byte 1 110
byte 1 101
byte 1 47
byte 1 119
byte 1 115
byte 1 116
byte 1 98
byte 1 116
byte 1 105
byte 1 99
byte 1 107
byte 1 46
byte 1 119
byte 1 97
byte 1 118
byte 1 0
